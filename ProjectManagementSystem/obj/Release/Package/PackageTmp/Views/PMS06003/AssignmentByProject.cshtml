@using ProjectManagementSystem.Resources;
@using ProjectManagementSystem.Common;
@model ProjectManagementSystem.ViewModels.PMS06003.AssignmentByProjectViewModel

@{
    ViewBag.Title = "プロジェクト別アサイン一覧";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/dragOn")

<div id="onloadDivSales">
</div>
<section class="content-header assign-by-project-header">
    <h1 id="title">
        @ViewBag.Title
    </h1>
    <div class="search-form">
        <div class="search-condition clearfix">
            <div class="row row-margin-bottom">
                <div class="group-1">
                    <div class="search-project-name">
                        <label class="width-120">プロジェクト名</label>
                        @Html.TextBoxFor(m => m.Condition.PROJECT_NAME, new { style = "ime-mode: auto;", @class = "search_project_name", maxlength = 50, @placeholder = "プロジェクト名" })
                    </div>
                    <div>
                        <label class="width-120">発注元</label>
                        <input class="value-selected search_customer" readonly="readonly">
                        <a href="#" id="btnSelectCustomer" class="btn light"><i class="btn-icon btn-search-dialog"></i></a>
                        @Html.DropDownListFor(m => m.Condition.TAG_ID, Model.TAG_LIST, "指定なし", new { @class = "taglist" })
                    </div>
                </div>
                <div class="group-2">
                    <label class="width-100">ステータス</label>
                    @Html.DropDownListFor(m => m.Condition.STATUS_ID, Model.STATUS_LIST, new { @multiple = "multiple" })
                </div>
            </div>
            <div class="row">
                <div class="group-1 row-2">
                    <label class="width-120 group-title">所属</label>
                    @Html.DropDownListFor(m => m.Condition.GROUP_ID, Model.GROUP_LIST, "指定なし", new { @class = "grouplist" })
                    <label class="width-100">期間</label>
                    <span class="date datepicker-months from-date">
                        @Html.TextBox(m => m.Condition.START_DATE, "{0:yyyy/MM}", new { @class = "ime-mode", maxlength = 7, @placeholder = "YYYY/MM" })
                        <button class="btn light"><i class="btn-icon btn-calendar"></i></button>
                    </span>
                    <span class="date-range-space">～</span>
                    <span class="date datepicker-months to-date">
                        @Html.TextBox(m => m.Condition.END_DATE, "{0:yyyy/MM}", new { @class = "ime-mode", maxlength = 7, @placeholder = "YYYY/MM" })
                        <button class="btn light"><i class="btn-icon btn-calendar"></i></button>
                    </span>
                </div>
                <div class="group-2 row-2">
                    <label class="width-120 active-flg">
                        @Html.CheckBoxFor(m => m.Condition.INACTIVE_FLG, new { @class = "delete_chkbox" })
                        非稼動を含む
                    </label>
                    <label class="width-120">
                        @Html.CheckBoxFor(m => m.Condition.DELETE_FLG, new { @class = "delete_chkbox" })
                        削除済を含む
                    </label>
                    @Html.TextBoxFor(m => m.Condition.CUSTOMER_ID, new { style = "visibility:hidden;" })
                </div>
            </div>
        </div>
        <div class="right search-action">
            <button type="button" id="btnSearch" name="btnSearch" class="btn dark"><i class="btn-icon btn-search"></i>検索</button>
            <button type="button" id="btnClear" name="btnClear" class="btn light"><i class="btn-icon btn-clear"></i>クリア</button>
        </div>
    </div>
</section>

@RenderPage("~/Views/Shared/ShowHideHeaderContent.cshtml")

<div class="data-list assign-by-project content special-list clearfix" style="visibility:hidden">
    <div class="div-left">
        <table id="InfoTable" class="display tbl-assign-by-project" width="100%">
            <thead>
                <tr>
                    <th>プロジェクトシステムID</th>
                    <th name="text">担当者</th>
                    <th name="text">プロジェクト名</th>
                    <th name="text">ランク</th>
                    <th name="text">受注金額</th>
                    <th name="text">予定工数</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div class="div-right">
        <table class="tbl-right dataTable" width="100%">
            <thead>
                <tr></tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@Html.DropDownListFor(m => m.Condition.EFF_TYPE, Model.EFFORT_LIST, new { @class = "timeUnit" }, false)
@Html.ValidationMessageFor(m => m.Condition.EFF_TYPE)

<div class="search-date">
    <form action='/PMS06003/ExportCsvByProject' method='POST' class="frmExport">
        <input id="startDate" name="start_date" type="hidden">
        <input id="endDate" name="end_date" type="hidden">
        <input id="project_name" name="project_name" type="hidden">
        <input id="group_id" name="group_id" type="hidden">
        <input id="tag_id" name="tag_id" type="hidden">
        <input id="eff_type" name="eff_type" type="hidden">
        <input id="sort_colum" name="sort_colum" type="hidden" value="0">
        <input id="sort_type" name="sort_type" type="hidden" value="asc">
        <input id="DelFlag" name="DelFlag" type="hidden" value="asc">
        <input id="InActiveFlag" name="InActiveFlag" type="hidden" value="asc">
        <input id="status" name="status" type="hidden" value="@Model.Condition.STATUS_ID">
        <input id="customer_id" name="customer_id" type="hidden">
        <input id="tabId" name="TAB_ID" type="hidden" />
        <button id="btnExport" name="btnExport" type='submit' class="btn dark"><i class="btn-icon btn-output-csv"></i>CSV出力</button>
    </form>
    <button type="button" id="btnPreMonth" name="btnPreMonth" class="btn light btnNoStyleDisable">前月</button>
    <span id="dateRange">YYYY年MM月 ～ YYYY年MM月</span>
    <button type="button" id="btnNextMonth" name="btnNextMonth" class="btn light btnNoStyleDisable">翌月</button>
</div>

<form id="formProjectDetail" action="/PMS06001/Detail/" method="POST">
    <input type="hidden" id="project-id" name="id" value="1">
</form>

<script type="text/javascript" charset="utf-8">
    var sort_colum = 0;
    var sort_type = 'asc';

    $(function () {
        var uniqueId = "@Guid.NewGuid().ToString()";
        $("#tabId").val(uniqueId);
        SetEventBeforeUnload();
        LoadOldValueOfControls();
        $('.div-right').dragOn({ easing: false, exclusion: { th: '', id: '.dataTables_length, .dataTables_info, .dataTables_paginate' } });

        var oSorting = {
            "bSort": true
        };
        var oPaginate = {
            "bPaginate": true,
            "iDisplayLength": @ViewBag.iDisplayLength,
            "bStateSave": false
        };
        var oServerSide = {
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("SearchAssignmentByProject", "PMS06003")',
            "fnBeforeSend": beforeSend,
            "fnDrawCallback": displayComplete,
            "fnServerParams": serverParams,
            "fnInitComplete": bindData
        };

        var aoColumnDefs_temp = [
            { "sName": "project_sys_id", "bVisible": false, "aTargets": [0] },
            { "sName": "person_in_charge", "aTargets": [1], "sTitle": '担当者', "sWidth": "85px", "sClass": "cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data, 'pic-name'); } },
            { "sName": "project_name", "aTargets": [2], "sTitle": 'プロジェクト名', "sWidth": "150px", "sClass": "cell_left" },
            { "sName": "rank_order", "aTargets": [3], "sTitle": 'ランク', "sWidth": "52px", "sClass": "cell_center" },
            { "sName": "total_sales", "aTargets": [4], "sTitle": '受注金額', "sWidth": "90px", "sClass": "cell_right" },
            { "bSortable": false, "aTargets": [5], "sTitle": '予定工数', "sWidth": "80px", "sClass": "cell_right" }
        ];

        var aoColumnDefs = [
            { "sName": "project_sys_id", "bVisible": false, "aTargets": [0] },
            { "sName": "person_in_charge", "aTargets": [1], "sTitle": '担当者', "sWidth": "85px", "sClass": "cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data, 'pic-name'); } },
            { "sName": "project_name", "aTargets": [2], "sTitle": 'プロジェクト名', "sWidth": "150px", "sClass": "cell_left" },
            { "sName": "rank_order", "aTargets": [3], "sTitle": 'ランク', "sWidth": "52px", "sClass": "cell_center" },
            { "sName": "total_sales", "aTargets": [4], "sTitle": '受注金額', "sWidth": "90px", "sClass": "cell_right" },
            { "bSortable": false, "aTargets": [5], "sTitle": '予定工数', "sWidth": "80px", "sClass": "cell_right" }
        ];

        $(document).off('table.dataTable tr th');
        $(document).on('focus', 'table.dataTable tr th', function () {
            sort_colum = $(this).index() + 1;
            sort_type = 'asc';

            if ($(this).hasClass('sorting_asc'))
                sort_type = 'desc';
            $('#sort_colum').val(sort_colum);
            $('#sort_type').val(sort_type);
        });

        //variable save status of condition
        var currentConditionState = { prjName: "", cusID: "", cusName: "", tagID: "", statusID: "", grID: "", toDate: "", fromDate: "", chkInactive: "", chkDelete: "" };
        function displayComplete() {
            $('input[name="del_flg"]').parents('tr').children().css('background-color', '#CCC');
            if (sort_colum == 0) {
                $('#InfoTable tr th:not(.sorting_disabled)').removeClass('sorting_asc sorting_desc').addClass('sorting').removeAttr('aria-sort');
            }
            $('div.assign-by-project').removeAttr('style');

            //save state search condition 
            if ($("#Condition_DELETE_FLG").is(':checked')) {
                currentConditionState.chkDelete = "checked";
            }
            else {
                currentConditionState.chkDelete = "unchecked";
            }

            if ($("#Condition_INACTIVE_FLG").is(':checked')) {
                currentConditionState.chkInactive = "checked";
            }
            else {
                currentConditionState.chkInactive = "unchecked";
            }
            currentConditionState.prjName = $('#Condition_PROJECT_NAME').val();
            currentConditionState.cusID = $('#Condition_CUSTOMER_ID').val();
            currentConditionState.tagID = $('#Condition_TAG_ID').val();
            currentConditionState.statusID = $('#Condition_STATUS_ID').val();
            currentConditionState.grID = $('#Condition_GROUP_ID').val();
            currentConditionState.fromDate = $('#Condition_START_DATE').val();
            currentConditionState.toDate = $('#Condition_END_DATE').val();
            currentConditionState.cusName = $('.value-selected.search_customer').val();
            
            $("#onloadDivSales").hide();
            $('.pace.pace-active').addClass('pace-inactive').removeClass('pace-active');
            $('#btnSearch').removeAttr('disabled');
            $('#btnPreMonth').removeAttr('disabled');
            $('#btnNextMonth').removeAttr('disabled');
        }

        var dataTable;
        function setColumns() {

            var timePeriod = getTimePeriod();
            timePeriod.sM++;
            timePeriod.eM++;
            $('#InfoTable tr.alt th:not([name="text"])').remove();

            var html;
            var YM;
            for (var Y = timePeriod.eY, M = timePeriod.eM; Y > timePeriod.sY || (Y == timePeriod.sY && M >= timePeriod.sM) ; M--) {

                if (M == 0) {
                    M = 12;
                    Y--;
                }

                if (M < 10) {
                    YM = Y.toString() + '/0' + M.toString();
                }
                else {
                    YM = Y.toString() + '/' + M.toString();
                }
                html = '<th class="cell_center sorting" role="columnheader" aria-controls="InfoTable" rowspan="1" colspan="1" aria-label="' + YM + '" style="width: 50px;">' + YM + '</th>';
                // bind columns
                $('#InfoTable tr.alt th[name="text"]').last().after(html);
            }

        }

        function createColumnDefs() {
            aoColumnDefs = [].concat(aoColumnDefs_temp);

            var timePeriod = getTimePeriod();
            timePeriod.sM++;
            timePeriod.eM++;

            for (var Y = timePeriod.sY, M = timePeriod.sM, i = 0; Y < timePeriod.eY || (Y == timePeriod.eY && M <= timePeriod.eM) ; i++, M++) {
                if (M == 13) {
                    M = 1;
                    Y++;
                }

                if (M < 10) {
                    YM = Y.toString() + '/0' + M.toString();
                }
                else {
                    YM = Y.toString() + '/' + M.toString();
                }
            }

            var displayLength = parseInt($('select[name="InfoTable_length"]').val());
            if(!isNaN(displayLength))
            {
                oPaginate.iDisplayLength = displayLength;
                $('#InfoTable').dataTable()._iDisplayLength = displayLength;
            }

            if ($("#InfoTable").dataTable()) {
                $("#InfoTable").dataTable().fnDestroy();
            }
            // empty the table content ( this remove the rows)
            $('#InfoTable').empty();
            dataTable = CreateDataTable('#InfoTable', oSorting, oPaginate, oServerSide, aoColumnDefs, { "bDestroy": true });
        }

        function beforeSend() {
        }

        function serverParams(aoData) {
            aoData.push(
                { "name": "PROJECT_NAME", "value": $("#project_name").val() },
                { "name": "CUSTOMER_ID", "value": $("#customer_id").val() },
                { "name": "GROUP_ID", "value": $("#group_id").val() },
                { "name": "TAG_ID", "value": $("#tag_id").val() },
                { "name": "START_DATE", "value": $("#startDate").val() },
                { "name": "END_DATE", "value": $("#endDate").val() },
                { "name": "EFF_TYPE", "value": $("#eff_type").val() },
                { "name": "DELETE_FLG", "value": $("#DelFlag").val() },
                { "name": "INACTIVE_FLG", "value": $("#InActiveFlag").val() },
                { "name": "STATUS_ID", "value": $("#status").val() },
                { "name": "SORT_COLUMN", "value": $("#sort_colum").val() },
                { "name": "SORT_TYPE", "value": $( "#sort_type" ).val()},
                { "name": "TAB_ID", "value": $( "#tabId" ).val()}
            );
        }

        function bindData(data) {

            // process status disabled  buttton exportCSV when search data
            if (data.aaData.length == 0) {
                $('#btnExport').addClass('disabled').attr('disabled', 'disabled');
            }
            else {
                $('#btnExport').removeClass('disabled').removeAttr('disabled');
            }

            var html = '';

            var columsArr = PMS.utility.getMonthCols($('#startDate').val(), $('#endDate').val());

            if (data.aaData.length > 0) {
                for (var i = 0; i < data.aaData.length; i++) {
                    var bgRow = i % 2 == 0 ? 'odd' : 'even';

                    html += '<tr class="' + bgRow + '">';
                    for (var j = 0; j < columsArr.length; j++) {
                        html += '<td class="cell_right">' + data.aaData[i][j + 6] + '</td>';
                    }

                    html += '</tr>';
                }
            } else {
                html += '<tr role="row" class="odd">'
                   + '<td colspan="'+columsArr.length+'" class="dataTables_empty">&nbsp;</td>'
                   + '<tr>';
            }

            $('.tbl-right tbody').empty().append(html);
        }

        function setTimeDuration(from, to) {
            if (typeof(from) == 'undefined') {
                var fromDate = new Date();
                var toDate = new Date();
                from = fromDate.getFullYear() + '/' + (fromDate.getMonth() + 1);

                toDate.setMonth(fromDate.getMonth() + 5);

                to = toDate.getFullYear() + '/' + (toDate.getMonth() + 1);
            }

            $('#Condition_START_DATE').val(from);
            $('#Condition_END_DATE').val(to);

            $('.date.datepicker-months.from-date').datepicker("update", from);
            $('.date.datepicker-months.to-date').datepicker("update", to);
        }

        function setTimeCondition() {
            if($('#Condition_START_DATE').val() != '')
            {
                saveDateCondition();
                ChangeLabelTimePeriod();
                return;
            }

            setTimeDuration();
            saveDateCondition();
            ChangeLabelTimePeriod();
        }

        function saveConditonForExport() {
            $("#project_name").val($("#Condition_PROJECT_NAME").val());
            $("#customer_id").val($("#Condition_CUSTOMER_ID").val());
            $("#eff_type").val($("#Condition_EFF_TYPE").val());
            $("#group_id").val($("#Condition_GROUP_ID").val());
            $("#tag_id").val($("#Condition_TAG_ID").val());
            $("#DelFlag").val($("#Condition_DELETE_FLG").prop('checked'));
            $("#InActiveFlag").val($("#Condition_INACTIVE_FLG").prop('checked'));
            $("#status").val($( "#Condition_STATUS_ID" ).val() || []);
        }

        function saveDateCondition() {
            $('#startDate').val($('#Condition_START_DATE').val());
            $('#endDate').val($('#Condition_END_DATE').val());
        }

        $(document).on('change', '#Condition_EFF_TYPE', function () {
            var effType = $(this).val();

            if (!effType) {
                return false;
            }
            else {
                $("#eff_type").val($("#Condition_EFF_TYPE").val());
                var currPage = parseInt($('.current').text()) - 1;
                if (!isNaN(currPage)) {
                    dataTable.fnPageChange(currPage);
                }
            }
        });

        function getTimePeriod() {
            var startDate = $("#startDate").val();
            var endDate = $("#endDate").val();

            return {
                sY: parseInt(startDate.substring(0, 4)),
                sM: parseInt(startDate.substring(5, 7)) - 1,
                eY: parseInt(endDate.substring(0, 4)),
                eM: parseInt(endDate.substring(5, 7)) - 1
            }
        }

        function isValidDate(s) {
            var bits = s.split('/');
            var d = new Date(bits[0], bits[1] - 1, bits[2]);
            return d && (d.getMonth() + 1) == bits[1] && d.getDate() == Number(bits[2]);
        }

        function CheckDateFormat() {
            $('.validation-summary-errors').remove();

            // check valid date
            var errStartDate = PMS.utility.validDate($('#Condition_START_DATE').val(), 'yyyy/mm', '期間（開始）');
            var errEndDate = PMS.utility.validDate($('#Condition_END_DATE').val(), 'yyyy/mm', '期間（終了）');
            var invalidMess = [];

            if ($('#Condition_START_DATE').val() == "")
            {
                errStartDate = "期間（開始）を設定してください。";
            }

            if ($('#Condition_END_DATE').val() == "")
            {
                errEndDate = "期間（終了）を設定してください。";
            }

            if (errStartDate != null) {
                invalidMess.push(errStartDate);
            }
            if (errEndDate != null) {
                invalidMess.push(errEndDate);
            }

            if (errStartDate == null && errEndDate == null) {
                // compare date
                if (!PMS.utility.compareDate($('#Condition_START_DATE').val(), $('#Condition_END_DATE').val(), 'yyyy/mm')) {
                    invalidMess.push(['@string.Format(Messages.E027)']);
                }
                if (!PMS.utility.compareDateRange($('#Condition_START_DATE').val(), $('#Condition_END_DATE').val(), 11)) {
                    invalidMess.push(['@Messages.E030']);
                }
            }

            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess);
                return 1;
            }

            saveDateCondition();
            return 0;
        }

        $(document).bind('keypress', function ( e ) {
            var code = e.keyCode || e.which;
            if (code == 13) { //Enter keycode
                SearchByProject();
            }
        });

        $(document).off('.project-detail-link');
        $(document).on('click', '.project-detail-link', function(){
            $('#project-id').val($(this).attr("project-id"));

                if (currentConditionState.chkDelete === "checked") {
                    $('#Condition_DELETE_FLG').prop('checked', true);
                }
                else {
                    $('#Condition_DELETE_FLG').prop('checked', false);
                }
                if (currentConditionState.chkInactive === "checked") {
                    $('#Condition_INACTIVE_FLG').prop('checked', true);
                }
                else {
                    $('#Condition_INACTIVE_FLG').prop('checked', false);
                }
                $('#Condition_PROJECT_NAME').val(currentConditionState.prjName);
                $('#Condition_CUSTOMER_ID').val(currentConditionState.cusID);
                $('#Condition_TAG_ID').val(currentConditionState.tagID);
                $('#Condition_STATUS_ID').val(currentConditionState.statusID);
                $('#Condition_GROUP_ID').val(currentConditionState.grID);
                $('#Condition_START_DATE').val(currentConditionState.fromDate);
                $('#Condition_END_DATE').val(currentConditionState.toDate);
                $('.value-selected.search_customer').val(currentConditionState.cusName);
                $("#formProjectDetail").submit();
        });

        function SearchByProject() {
            if (CheckDateFormat() == 1) {
                return;
            }
            sort_colum = 0;
            sort_type = 'asc';
            $('#sort_colum').val(sort_colum);
            $('#sort_type').val(sort_type);

            var $status = $("#Condition_STATUS_ID");

            if ($status.val() != null && $status.find('option').length == $status.val().length) {
                $status.val('');
            }

            saveDateCondition();
            ChangeLabelTimePeriod();
            setColumns();
            saveConditonForExport();

            $('.pace.pace-inactive').removeClass('pace-inactive').addClass('pace-active');
            $("#onloadDivSales").show(function () {
                createColumnDefs();
            });
            $('#btnSearch').attr('disabled', 'disabled');
        }

        $("button#btnSearch").click(function () {
            SearchByProject();
        });

        $("button#btnClear").click(function () {
            $("#Condition_PROJECT_NAME").val("");
            $("#Condition_CUSTOMER_ID").val("");
            $("#CUSTOMER_NAME").val("");
            $("#Condition_TAG_ID").empty();
            $("#Condition_TAG_ID").append('<option value="">指定なし</option>');
            $("#Condition_START_DATE").val("");
            $("#Condition_END_DATE").val("");
            $("#Condition_GROUP_ID").val("");
            $("#Condition_DELETE_FLG").prop('checked', false);
            $("#Condition_INACTIVE_FLG").prop('checked', false);
            $("#Condition_STATUS_ID").val("");
            var month = (new Date).getMonth();
            var year = (new Date).getFullYear();
            $(".search-condition .search_customer").val("");

            setTimeDuration();
        });

        function ChangeLabelTimePeriod() {
            var timePeriod = getTimePeriod();
            var startMonth = ++timePeriod.sM;
            if(startMonth < 10){
                startMonth = '0' + startMonth;
            }

            var endMonth = ++timePeriod.eM;
            if(endMonth < 10){
                endMonth = '0' + endMonth;
            }
            var titleTimePeriod = timePeriod.sY.toString() + '年' + startMonth.toString() + '月 ～ ' + timePeriod.eY.toString() + '年' + endMonth.toString() + '月';
            document.getElementById("dateRange").innerHTML = titleTimePeriod;

            bindMonthColums(PMS.utility.getMonthCols($('#startDate').val(), $('#endDate').val()));
        }

        // Bind colums by time duration on data table
        function bindMonthColums(colums) {
            var html = '';
            for (var i = 0; i < colums.length; i++) {
                html += '<th class="cell_right sorting_disabled">' + colums[i] + '</th>';
            }

            $('.tbl-right thead tr').empty().append(html);
        }

        $('button#btnPreMonth').click(function () {
            $('#btnPreMonth').attr('disabled', 'disabled');
            $('#onloadDivSales').show();
            var timePeriod = getTimePeriod();

            if (timePeriod.sM-- == 0) {
                timePeriod.sM = 11;
                timePeriod.sY--;
            }
            if (timePeriod.eM-- == 0) {
                timePeriod.eM = 11;
                timePeriod.eY--;
            }

            var from = $.datepicker.formatDate('yy/mm', new Date(timePeriod.sY, timePeriod.sM, 1));
            var to = $.datepicker.formatDate('yy/mm', new Date(timePeriod.eY, timePeriod.eM, 1));

            setTimeDuration(from, to);
            saveDateCondition();
            ChangeLabelTimePeriod();
            setColumns();
            createColumnDefs();
        });

        $('button#btnNextMonth').click(function () {
            $('#btnNextMonth').attr('disabled', 'disabled');
            $('#onloadDivSales').show();
            var timePeriod = getTimePeriod();

            if (timePeriod.sM++ == 11) {
                timePeriod.sM = 0;
                timePeriod.sY++;
            }

            if (timePeriod.eM++ == 11) {
                timePeriod.eM = 0;
                timePeriod.eY++;
            }

            var from = $.datepicker.formatDate('yy/mm', new Date(timePeriod.sY, timePeriod.sM, 1));
            var to = $.datepicker.formatDate('yy/mm', new Date(timePeriod.eY, timePeriod.eM, 1));

            setTimeDuration(from, to);
            saveDateCondition();
            ChangeLabelTimePeriod();
            setColumns();
            createColumnDefs();
        });

        setTimeCondition();
        setColumns();
        saveConditonForExport();
        createColumnDefs();
        PMS.utility.imeControl($("#Condition_PROJECT_NAME"), 'active');
    });

    // Event click search customer
    $('a#btnSelectCustomer').click(function () {
        var result = PMS.utility.getDataByAjax('/Common/CheckTimeOut', null);

        if (result == null)
            return;

        $(this).blur();

        var url = '@Url.Action("Select", "PMS02001", new { callback = "setCustomer" })';
        url += '&TB_iframe=true&modal=true&height=600&width=1100';
        tb_show(null, url, false);
    });

    // Set Customer
    function setCustomer(res) {
        if (typeof (res) === 'undefined' || res === null) {
            $('.search_customer').focus();
        } else {
            $('#Condition_CUSTOMER_ID').val(res[0].CUSTOMER_ID);
            $(".search_customer").val(PMS.utility.htmlDecode(res[0].CUSTOMER_NAME)).attr('title', PMS.utility.htmlDecode(res[0].CUSTOMER_NAME)).focus();

            // Fill list of Tags
            PMS.utility.bindTagsByCustomer(res[0].CUSTOMER_ID, '#Condition_TAG_ID');
        }
    }

    function LoadOldValueOfControls() {
        var hdnStatus = $('#status').val();

        if (hdnStatus.length > 0) {
            var statusArr = hdnStatus.split(',');
            $('#Condition_STATUS_ID').val(statusArr);
        }

        var startDate = $('#startDate').val();

        if (startDate.length > 0) {
            $('#Condition_START_DATE').val(startDate);
        }

        var endDate = $('#endDate').val();

        if (endDate.length > 0) {
            $('#Condition_END_DATE').val(endDate);
        }

        var customerId = $('#customer_id').val();

        if (customerId.length > 0) {
            $('#Condition_CUSTOMER_ID').val(customerId);
        }
    }
</script>
