@using ProjectManagementSystem.Resources;
@using ProjectManagementSystem.Common;

@model ProjectManagementSystem.ViewModels.PMS03001.PMS03001EditViewModel
@{
    ViewBag.Title = "契約種別登録 ";
}

<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
</section>

<div class="content content-edit contract-regist">
    @using (Html.BeginForm("EditContractType", "PMS03001", FormMethod.Post, new { @class = "form-horizontal", id = "frmContractTypeEdit" }))
    {
        <div id="title"></div>
        @Html.ValidationSummary(false)
        <div class="form-group">
            <label class="col-sm-2 control-label bold" for="contract_type">契約種別名<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.ContractTypeInfo.contract_type, new { @class = "form-control", maxlength = 100, size = 99 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">営業担当者</label>
            <div class="col-sm-4">
                @Html.CheckBoxFor(m => m.ChargeOfSalesFlag, new { @class = "cos-flag" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">特殊計算</label>
            <div class="col-sm-4">
                @Html.CheckBoxFor(m => m.ExceptionCalculateFlag, new { @class = "cos-flag" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">予算対象</label>
            <div class="col-sm-4">
                @Html.CheckBoxFor(m => m.BudgetSettingFlag, new { @class = "cos-flag" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold" for="display_order">表示順<span class="RequiredField">*</span></label>
            <div class="col-sm-1">
                @Html.TextBoxFor(m => m.ContractTypeInfo.display_order, new { @class = "form-control right numeric ", maxlength = 2, size = 10 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">備考</label>
            <div class="col-sm-4">
                @Html.TextAreaFor(m => m.ContractTypeInfo.remarks, new { @class = "form-control candy-text Area", maxlength = 200, rows = 5 })
                <input type="hidden" class="set-max-width" />
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold" style="padding-right:0px;">PJチェック対象</label>
            <div class="col-sm-6">
                @Html.CheckBoxFor(m => m.CheckPlanFlag)
                <label class="control-label">未計画</label>
                @Html.CheckBoxFor(m => m.CheckProgressFlag)
                <label class="control-label">進捗更新未</label>
                @Html.CheckBoxFor(m => m.CheckPeriodFlag)
                <label class="control-label">期日終了</label>
                @Html.CheckBoxFor(m => m.CheckSalesFlag)
                <label class="control-label">未売上入力</label>
            </div>
        </div>
        <hr class="form-group col-sm-12">

        <div class="form-group title-phase">
            <label class="col-sm-2 control-label">&nbsp;</label>
            <div class="col-sm-7">
                <button type="button" class="btn dark bt-space pull-left"><i class="btn-icon btn-add"></i>追加</button>

                <div class="pull-left title-phase-list">
                    <div class="top-title">フェーズ</div>
                    <div class="top-title title-display-order">表示順</div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold" for="phase_name">フェーズ<span class="RequiredField">*</span></label>
            <div class="col-sm-7">
                <button type="button" class="btn dark btnAddPhase pull-left"><i class="btn-icon btn-add"></i>追加</button>
                <div class="phase-list pull-left">
                    @if (Model.CONTRACT_TYPE_PHASE_LIST.Count > 0)
                    {
                        for (int i = 0; i < Model.CONTRACT_TYPE_PHASE_LIST.Count; i++)
                        {
                            <div class="phase-content old-phase">
                                @Html.Hidden("hdnPhase", Model.CONTRACT_TYPE_PHASE_LIST[i].phase_id)
                                @Html.DropDownListFor(m => m.CONTRACT_TYPE_PHASE_LIST[i].phase_id, Model.PHASE_LIST, "指定なし", new { @class = "ddlPhase", alt = Model.CONTRACT_TYPE_PHASE_LIST[i].phase_id })
                                @Html.TextBoxFor(m => m.CONTRACT_TYPE_PHASE_LIST[i].display_order, new { @class = "right numeric display_order_edit", maxlength = 2, size = 10 })
                                <a class="btnDeletePhase lbl-action">削除</a>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="phase-content ">
                            <input id="hdnPhase" name="hdnPhase" type="hidden" value="0">
                            @Html.DropDownList("CONTRACT_TYPE_PHASE_LIST[0].phase_id", Model.PHASE_LIST, "指定なし", new { @class = "ddlPhase", alt = "" })
                            <input class="right numeric display_order_edit" maxlength="2" name="CONTRACT_TYPE_PHASE_LIST[0].display_order" size="10" type="text" readonly="readonly">
                            <a class="btnDeletePhase lbl-action">削除</a>
                        </div>
                    }
                </div>
            </div>

        </div>

        <hr class="form-group col-sm-12">

        <div class="form-group title-phase">
            <label class="col-sm-2 control-label">&nbsp;</label>
            <div class="col-sm-7">
                <button type="button" class="btn dark bt-space pull-left"><i class="btn-icon btn-add"></i>追加</button>

                <div class="pull-left title-phase-list">
                    <div class="top-title">カテゴリ</div>
                    <div class="top-title title-display-order">表示順</div>
                </div>
            </div>
        </div>

        // 112321: Setting Category
        <div class="form-group">
            <label class="col-sm-2 control-label bold" for="category_name">必須カテゴリ</label>
            <div class="col-sm-7">
                <button type="button" class="btn dark btnAddCategory pull-left"><i class="btn-icon btn-add"></i>追加</button>
                <div class="category-list pull-left">
                    @if (Model.CONTRACT_TYPE_CATEGORY_LIST.Count > 0)
                    {
                        for (int i = 0; i < Model.CONTRACT_TYPE_CATEGORY_LIST.Count; i++)
                        {
                            <div class="category-content old-category">
                                @Html.Hidden("hdnCategory", Model.CONTRACT_TYPE_CATEGORY_LIST[i].category_id)
                                @Html.DropDownListFor(m => m.CONTRACT_TYPE_CATEGORY_LIST[i].category_id, Model.CATEGORY_LIST, "指定なし", new { @class = "ddlCategory", alt = Model.CONTRACT_TYPE_CATEGORY_LIST[i].category_id })
                                @Html.TextBoxFor(m => m.CONTRACT_TYPE_CATEGORY_LIST[i].display_order, new { @class = "right numeric display_order_edit", maxlength = 2, size = 10 })
                                <a class="btnDeleteCategory lbl-action">削除</a>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="category-content ">
                            <input id="hdnCategory" name="hdnCategory" type="hidden" value="0">
                            @Html.DropDownList("CONTRACT_TYPE_CATEGORY_LIST[0].category_id", Model.CATEGORY_LIST, "指定なし", new { @class = "ddlCategory", alt = "" })
                            <input class="right numeric display_order_edit" maxlength="2" name="CONTRACT_TYPE_CATEGORY_LIST[0].display_order" size="10" type="text" readonly="readonly">
                            <a class="btnDeleteCategory lbl-action">削除</a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <hr class="form-group col-sm-12">

        <div id="updateTime">
            <div class="form-group">
                <label class="col-sm-2 control-label bold">登録日時</label>
                <div class="col-sm-4">
                    <label class="control-label" id="insDate">
                        @{
                            string ins_date = !string.IsNullOrEmpty(@Model.ContractTypeInfo.ins_date.ToString()) ? Model.ContractTypeInfo.ins_date.Value.ToString("yyyy/MM/dd HH:mm") : "";
                        }
                        @ins_date
                    </label>
                </div>

            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">登録者</label>
                <div class="col-sm-8">
                    <label class="control-label" id="insUser">@Model.ContractTypeInfo.ins_user</label>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">更新日時</label>

                <div class="col-sm-4">
                    <label class="control-label" id="updDate">
                        @{
                            string upd_date = !string.IsNullOrEmpty(@Model.ContractTypeInfo.upd_date.ToString()) ? Model.ContractTypeInfo.upd_date.Value.ToString("yyyy/MM/dd HH:mm") : "";
                        }
                        @upd_date
                    </label>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">更新者</label>
                <div class="col-sm-8">
                    <label class="control-label" id="updUser">@Model.ContractTypeInfo.upd_user</label>
                </div>
            </div>
        </div>

        <div class="form-group btn-group-edit">
            <div class="col-sm-4">
                @Html.HiddenFor(m => m.ContractTypeInfo.contract_type_id)
                <input type="hidden" name="OLD_DEL_FLAG" value="@Model.DeleteFlag.ToString()" />

                @Html.AntiForgeryToken()
                <button type="button" id="btnBack" name="Back" class="btn light btnNoStyleDisable"><i class="btn-icon btn-back"></i>戻る</button>
                <button type="button" id="btnSubmit" class="btn green"><i class="btn-icon btn-regist"></i> 登録</button>
                <label class="bold" id="deleteFlag">
                    @Html.CheckBoxFor(m => m.DeleteFlag, new { @class = "condition_chkbox" })
                    削除
                </label>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    var maxWidth =$(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2); // set max-width of textarea
    $(document).ready(function () {
        PMS.utility.imeControl($("#ContractTypeInfo_contract_type, #ContractTypeInfo_remarks"), 'active');
        PMS.utility.focusTextbox();
        $(".content-wrapper").addClass("content-edit-wrapper");
        setArrPhase();
        setArrCategory();

        if ($('#ContractTypeInfo_contract_type_id').val() === '0') {
            $('#updateTime, #deleteFlag').hide();
        }

        // get max-width of textarea when resize manu bar left
        window.addEventListener('resize', function (event) {
            maxWidth = $(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2);
            //handle change textare when resize menu bar left
            if ($('body').hasClass('sidebar-collapse') === true) {
                // case close when page first load
                $(".candy-textArea").css("max-width",(parseInt(maxWidth,10) + 115)+ "px");
            }
            else{
                $(".candy-textArea").css("max-width",parseInt(maxWidth,10)+ "px");
            }
        });
        //end get max-width of textarea when resize manu bar left
    });

    //handle change textare when resize menu bar left
    if ($('body').hasClass('sidebar-collapse') === true) {
        // case close when page first load
        $(".candy-textArea").css("max-width",(parseInt(maxWidth,10) + 115)+ "px");
    }
    $(document).off('a.sidebar-toggle i');
    $(document).on('click', 'a.sidebar-toggle i', function () {
        if ($('body').hasClass('sidebar-collapse') === true) {
            // close
            $(".candy-textArea").css("max-width",(parseInt(maxWidth,10) + 115)+ "px");
        } else {
            // open
            $(".candy-textArea").css("max-width",(parseInt($(".candy-textArea").css("max-width").slice(0, $(".candy-textArea").css("max-width").length - 2),10) - 115)+ "px");
        }
    });
    //end handle change textare when resize menu bar left

    function setArrPhase() {
        $('div.phase-content').each(function () {
            var phaseId = $(this).children('#hdnPhase').val() == '0' ? '' : $(this).children('#hdnPhase').val();

            $(this).children('.ddlPhase').val(phaseId);
        });
    }

    function setArrCategory() {
        $('div.category-content').each(function () {
            var categoryId = $(this).children('#hdnCategory').val() == '0' ? '' : $(this).children('#hdnCategory').val();

            $(this).children('.ddlCategory').val(categoryId);
        });
    }

    function validateData() {
        var Constant = {
            CONTRACT_TYPE_NAME: '契約種別名',
            PHASE_ORDER: 'フェーズ(表示順)',
            CATEGORY_ORDER: 'カテゴリ(表示順)',
            DISPLAY_ORDER: '表示順',
            REMARK: '備考',
            ERR_REQUIRED: 'は必須項目です。',
            ERR_REQUIRED_SELECT_PHASE: 'フェーズを選択してください。',
            ERR_REQUIRED_SELECT_CATEGORY: 'カテゴリを選択してください。',
            ERR_STRING_LENGTH: '{0}は{1}文字以内で入力してください。',
            ERR_FORMAT: 'の入力形式に誤りがあります。',
            MAX_NAME_LENGTH: 100,
            MAX_ORDER_LENGTH: 2,
            MAX_REMARK_LENGTH: 200
        };
        var invalidMess = [];
        var contractTypeName = $("#ContractTypeInfo_contract_type").val();
        var invalidContractTypeName = false;

        if (contractTypeName.length === 0) { // required
            invalidMess.push(Constant.CONTRACT_TYPE_NAME + Constant.ERR_REQUIRED);
            invalidContractTypeName = true;
        }

        if (contractTypeName.length > Constant.MAX_NAME_LENGTH) { // valid string length
            invalidMess.push(Constant.ERR_STRING_LENGTH.replace('{0}', Constant.CONTRACT_TYPE_NAME).replace('{1}', Constant.MAX_NAME_LENGTH));
            invalidContractTypeName = true;
        }

        if (invalidContractTypeName)
            $("label[for='contract_type']").addClass("label-validation-error");

        var requiredPhase = true;
        var requiredPhaseOrder = false;
        var invalidPhaseOrder = false;

        $('div.phase-content').each(function () {
            if ($(this).children('.ddlPhase').val().length > 0) {
                requiredPhase = false;

                var phaseOrder = $(this).children('.numeric').val();

                if (phaseOrder.length == 0) {
                    requiredPhaseOrder = true;
                    invalidMess.push(Constant.PHASE_ORDER + Constant.ERR_REQUIRED);
                } else {
                    if (!PMS.utility.validPositiveNumeric(phaseOrder)) { // format invalid
                        invalidPhaseOrder = true;
                        invalidMess.push(Constant.PHASE_ORDER + Constant.ERR_FORMAT);
                    } else if (phaseOrder.length > Constant.MAX_ORDER_LENGTH) {
                        invalidPhaseOrder = true;
                        invalidMess.push(Constant.ERR_STRING_LENGTH.replace('{0}', Constant.PHASE_ORDER).replace('{1}', Constant.MAX_ORDER_LENGTH));
                    }
                }
            }

            if (requiredPhaseOrder || invalidPhaseOrder)
                return false;
        });

        if (requiredPhase)
            invalidMess.push(Constant.ERR_REQUIRED_SELECT_PHASE);

        if (requiredPhase || requiredPhaseOrder || invalidPhaseOrder)
            $("label[for='phase_name']").addClass("label-validation-error");

        // For category
        //var requiredCategory = false;
        var requiredCategoryOrder = false;
        var invalidPCategoryOrder = false;

        $('div.category-content').each(function () {
            if ($(this).children('.ddlCategory').val().length > 0) {
                requiredCategory = false;

                var categoryOrder = $(this).children('.numeric').val();

                if (categoryOrder.length == 0) {
                    requiredCategoryOrder = true;
                    invalidMess.push(Constant.CATEGORY_ORDER + Constant.ERR_REQUIRED);
                } else {
                    if (!PMS.utility.validPositiveNumeric(categoryOrder)) { // format invalid
                        invalidPCategoryOrder = true;
                        invalidMess.push(Constant.CATEGORY_ORDER + Constant.ERR_FORMAT);
                    } else if (categoryOrder.length > Constant.MAX_ORDER_LENGTH) {
                        invalidPCategoryOrder = true;
                        invalidMess.push(Constant.ERR_STRING_LENGTH.replace('{0}', Constant.CATEGORY_ORDER).replace('{1}', Constant.MAX_ORDER_LENGTH));
                    }
                }
            }

            if (requiredCategoryOrder || invalidPCategoryOrder)
                return false;
        });

        //if (requiredCategory)
        //    invalidMess.push(Constant.ERR_REQUIRED_SELECT_CATEGORY);

        if (requiredCategoryOrder || invalidPCategoryOrder)
            $("label[for='category_name']").addClass("label-validation-error");


        var displayOrder = $("#ContractTypeInfo_display_order").val();
        var invalidDisplayOrder = false;

        if (displayOrder.length === 0) { // required
            invalidMess.push(Constant.DISPLAY_ORDER + Constant.ERR_REQUIRED);
            invalidDisplayOrder = true;
        } else {
            if (!PMS.utility.validPositiveNumeric(displayOrder)) { // format invalid
                invalidMess.push(Constant.DISPLAY_ORDER + Constant.ERR_FORMAT);
                invalidDisplayOrder = true;
            } else if (displayOrder.length > Constant.MAX_ORDER_LENGTH) { // valid string length
                invalidMess.push(Constant.ERR_STRING_LENGTH.replace('{0}', Constant.DISPLAY_ORDER).replace('{1}', Constant.MAX_ORDER_LENGTH));
                invalidDisplayOrder = true;
            }
        }

        if (invalidDisplayOrder)
            $("label[for='display_order']").addClass("label-validation-error");

        if ($("#ContractTypeInfo_remarks").val().length > Constant.MAX_REMARK_LENGTH) {
            invalidMess.push(Constant.ERR_STRING_LENGTH.replace('{0}', Constant.REMARK).replace('{1}', Constant.MAX_REMARK_LENGTH));
            $("label[for='ContractTypeInfo_remarks']").addClass("label-validation-error");
        }

        return invalidMess;
    }

    function resetArrPhase() {
        $phaseContentArr = $('div.phase-content');
        for (var i = 0; i < $phaseContentArr.length; i++) {
            var phaseContent = $phaseContentArr[i];
            var id = 'CONTRACT_TYPE_PHASE_LIST[' + i + '].phase_id';
            var order = 'CONTRACT_TYPE_PHASE_LIST[' + i + '].display_order';

            $(phaseContent).children('.ddlPhase').attr('name', id);
            $(phaseContent).children('.numeric').attr('name', order);
        }
    }

    function resetArrCategory() {
        $categoryContentArr = $('div.category-content');
        for (var i = 0; i < $categoryContentArr.length; i++) {
            var categoryContent = $categoryContentArr[i];
            var id = 'CONTRACT_TYPE_CATEGORY_LIST[' + i + '].category_id';
            var order = 'CONTRACT_TYPE_CATEGORY_LIST[' + i + '].display_order';

            $(categoryContent).children('.ddlCategory').attr('name', id);
            $(categoryContent).children('.numeric').attr('name', order);
        }
    }

    // Action add more phase
    $(document).off('button.btnAddPhase');
    $(document).on('click', 'button.btnAddPhase', function () {
        $('div.phase-content').last().after($('div.phase-content').first().prop('outerHTML'));

        var $newPhase = $('div.phase-content').last().removeClass('old-phase');
        //$newPhase.addClass("col-xs-offset-1");
        $newPhase.children('#hdnPhase').val('0').attr('value', '0');
        $newPhase.children('.ddlPhase').val('').removeAttr('alt');
        $newPhase.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
    });

    // Action add more category
    $(document).off('button.btnAddCategory');
    $(document).on('click', 'button.btnAddCategory', function () {
        $('div.category-content').last().after($('div.category-content').first().prop('outerHTML'));

        var $newCategory = $('div.category-content').last().removeClass('old-category');
        $newCategory.children('#hdnCategory').val('0').attr('value', '0');
        $newCategory.children('.ddlCategory').val('').removeAttr('alt');
        $newCategory.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
    });

    // Event delete a phase
    $(document).off('a.btnDeletePhase');
    $(document).on('click', 'a.btnDeletePhase', function () {
        var $phaseDel = $(this).parent();
        var contractTypeID = parseInt($('#ContractTypeInfo_contract_type_id').val());

        if (contractTypeID > 0 && $phaseDel.hasClass('old-phase')) {
            var param = {
                phaseID: parseInt($phaseDel.children('.ddlPhase').attr('alt')),
                contractTypeID: contractTypeID
            };
            var targetPhases = PMS.utility.getDataByAjax('/PMS03001/GetTargetPhase', param);

            if (targetPhases.length > 0) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), '@string.Format(Messages.E059)');
                return;
            }
        }

        if ($('div.phase-content').length > 1) {
            $phaseDel.remove();
            resetArrPhase();
        } else {
            $phaseDel.children('#hdnPhase').val('0').attr('value', '0');
            $phaseDel.children('.ddlPhase, .numeric').val('');
            $phaseDel.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
        }
    });

    // Event delete a category
    $(document).off('a.btnDeleteCategory');
    $(document).on('click', 'a.btnDeleteCategory', function () {
        var $categoryDel = $(this).parent();

        if ($('div.category-content').length > 1) {
            $categoryDel.remove();
            resetArrCategory();
        } else {
            $categoryDel.children('#hdnCategory').val('0').attr('value', '0');
            $categoryDel.children('.ddlCategory, .numeric').val('');
            $categoryDel.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
        }
    });

    // Event auto calculate total payment amount of a subcontractor
    $(document).off('select.ddlPhase');
    $(document).on('change', 'select.ddlPhase', function () {
        var contractTypeID = parseInt($('#ContractTypeInfo_contract_type_id').val());
        var $parent = $(this).parent();

        if (contractTypeID > 0 && $parent.hasClass('old-phase')) {
            var oldValue = $(this).attr('alt');
            var param = {
                phaseID: parseInt(oldValue),
                contractTypeID: contractTypeID
            };
            var targetPhases = PMS.utility.getDataByAjax('/PMS03001/GetTargetPhase', param);

            if (targetPhases.length > 0) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), '@string.Format(Messages.E059)');
                $(this).val(oldValue);
                return;
            }
        }

        var value = $(this).val();

        if (value.length == 0) {
            $parent.children('#hdnPhase').val('0').attr('value', '0');
            $parent.children('.ddlPhase').val('');
            $parent.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
        } else {
            var exist = false;

            $(this).addClass('selected');

            $('select.ddlPhase:not(.selected)').each(function () {
                if (value == $(this).val() && typeof ($(this).val()) == 'string' && $(this).val().length > 0) {
                    exist = true;
                    return false;
                }
            });
            $(this).removeClass('selected');

            if (exist) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), '選択済みのフェーズです。他のフェーズを選択してください。');
                $(this).val('');
                $parent.children('#hdnPhase').val('0').attr('value', '0');
                $parent.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
                return;
            }

            $parent.children('#hdnPhase').val(value);
            $parent.children('.numeric').removeAttr('readonly');
            resetArrPhase();
        }
    });

    // Event auto calculate total payment amount of a subcontractor
    $(document).off('select.ddlCategory');
    $(document).on('change', 'select.ddlCategory', function () {
        var $parent = $(this).parent();

        var value = $(this).val();

        if (value.length == 0) {
            $parent.children('#hdnCategory').val('0').attr('value', '0');
            $parent.children('.ddlCategory').val('');
            $parent.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
        } else {
            var exist = false;

            $(this).addClass('selected');

            $('select.ddlCategory:not(.selected)').each(function () {
                if (value == $(this).val() && typeof ($(this).val()) == 'string' && $(this).val().length > 0) {
                    exist = true;
                    return false;
                }
            });
            $(this).removeClass('selected');

            if (exist) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), '選択済みのカテゴリです。他のカテゴリを選択してください。');
                $(this).val('');
                $parent.children('#hdnCategory').val('0').attr('value', '0');
                $parent.children('.numeric').val('').attr('value', '').attr('readonly', 'readonly');
                return;
            }

            $parent.children('#hdnCategory').val(value);
            $parent.children('.numeric').removeAttr('readonly');
            resetArrCategory();
        }
    });

    // Submit register form
    $('button#btnSubmit').click(function () {
        PMS.utility.removeValidationError();

        var invalidMess = validateData();

        if (invalidMess.length > 0) {
            PMS.utility.showClientError(invalidMess);
            return false;
        }

        PMS.utility.IsAuthenticateTimeout('@string.Format(Messages.I006)', '#frmContractTypeEdit');
    });

    $("#frmContractTypeEdit").submit(function (e) {
        var formData = new FormData(this);

        $.ajax({
            url: $(this).attr("action"),
            type: 'POST',
            data: formData,
            mimeType: "multipart/form-data",
            contentType: false,
            cache: false,
            processData: false,
            success: function (response) {
                var data = JSON.parse(response);
                BootstrapDialog.closeAll();
                if (data.statusCode == 201) { // update success
                    $("#EditContractType").css('visibility', 'hidden');
                    PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), data.message, null, null, function () {
                        $('#ContractTypeInfo_contract_type_id').val(data.id);
                        if (data.insDate != null && data.insDate.length > 0) {
                            $('#insDate').text(data.insDate);
                        }
                        if (data.insUser != null && data.insUser.length > 0) {
                            $('#insUser').text(data.insUser);
                        }
                        $('#updDate').text(data.updDate);
                        $('#updUser').text(data.updUser);
                        $('#Delete').text(data.updUser);
                        $("#Delete").prop('checked', data.deleted);
                        $('input[name="OLD_DEL_FLAG"]').val(data.deleted);

                        $('.phase-content').each(function () {
                            if ($(this).children('input[id="hdnPhase"]').val() === "0" && $('.phase-content').length > 1)
                                $(this).remove();
                        });

                        resetArrPhase();

                        $('.category-content').each(function () {
                            if ($(this).children('input[id="hdnCategory"]').val() === "0" && $('.category-content').length > 1)
                                $(this).remove();
                        });

                        resetArrCategory();

                        $('#updateTime, #deleteFlag').show();
                        $("#EditContractType").css('visibility', '');
                    });
                }

                if (data.statusCode == 500) { // Exception
                    $("#EditContractType").css('visibility', 'hidden');
                    PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), data.message, '/PMS03001');
                }

                if (typeof (data.ErrorMessages) !== 'undefined') // invalid data
                    PMS.utility.showClientError(data.ErrorMessages);
            },
            error: function (error) {
                if (error.status == 419) //419: Authentication Timeout
                {
                    $("#EditContractType").css('visibility', 'hidden');
                    window.location.href = '/PMS01001/Login/timeout';
                }
            }
        });

        e.preventDefault(); // prevent Default action
    });

    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        $.ajax({
            type: "POST",
            url: '/Common/SetButtonBackSession',
            dataType: 'json',
            data: null,
            success: function () {
                window.location.href = "/PMS03001";
            },
            error: function (error) {
            }
        });
    });
</script>
