@model ProjectManagementSystem.ViewModels.PMS01002.PMS01002PersonalSettingViewModel

@using ProjectManagementSystem.Common;
@using ProjectManagementSystem.Resources;

@Scripts.Render("~/bundles/bootstrap-filestyle")

@{
    ViewBag.Title = "個人設定";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (@ViewBag.PasswordOutOfDate != null)
{
    <script type="text/javascript">
        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), '@Messages.I013');
    </script>
}

<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
</section>

<div class="personal-setting content clearfix">
    @using (Html.BeginForm("PersonalSetting", "PMS01002", FormMethod.Post, new { @class = "form-horizontal", id = "frmPersonalSetting", enctype = "multipart/form-data" }))
    {
        <div id="title"></div>
        @Html.ValidationSummary(false)

        <div class="form-group">
            <label class="col-sm-2 control-label label-user-name bold">ユーザー名</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.user_name_sei, new { @class = "form-control", maxlength = 50 })
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.user_name_mei, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-furigana bold">フリガナ</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.furigana_sei, new { @class = "form-control", maxlength = 50 })
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.furigana_mei, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-display-name bold">表示名<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.USER_INFO.display_name, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">役職</label>
            @Html.Label("", @Model.USER_INFO.display_name_position, new { @class = "col-sm-10 control-label" })
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-employee-no bold">所属</label>
            @Html.Label("", @Model.USER_INFO.display_name_group, new { @class = "col-sm-10 control-label" })
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-tel-no bold">電話番号</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.tel_no, new { @class = "form-control tell-no", maxlength = 13 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-user-account bold">ユーザーアカウント</label>
            @Html.Label("", @Model.USER_INFO.user_account, new { @class = "col-sm-10 control-label" })
            @Html.HiddenFor(m => m.USER_INFO.user_account)
            @Html.HiddenFor(m => m.USER_INFO.role_id)
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-password bold">パスワード<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.PasswordFor(m => m.USER_INFO.password, new { @class = "form-control", maxlength = 32 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-confirm-password bold">パスワード（確認用）<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.PasswordFor(m => m.confirmPassword, new { @class = "form-control", maxlength = 32 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-mail-address-1 bold">メールアドレス1</label>
            @Html.Label("", @Model.USER_INFO.mail_address_1, new { @class = "col-sm-10 control-label" })
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-mail-address-2 bold">メールアドレス2</label>
            @Html.Label("", @Model.USER_INFO.mail_address_2, new { @class = "col-sm-10 control-label" })
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-entry-date bold">入社年月日</label>
            @Html.Label("", string.IsNullOrEmpty(@Model.USER_INFO.entry_date.ToString()) ? "" : @Model.USER_INFO.entry_date.Value.ToString("yyyy/MM/dd"), new { @class = "col-sm-10 control-label" })
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-birth-date bold">生年月日</label>
            <div class="col-sm-2">
                <span class="date datepicker-days">
                    @Html.TextBox(m => m.USER_INFO.birth_date, "{0:yyyy/MM/dd}", new { @class = "ime-mode", maxlength = 10 })
                    <button type="button" class="btn light btn-date"><i class="btn-icon btn-calendar"></i></button>
                </span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-image-user bold">プロフィール画像</label>
            <div class="col-sm-4">
                @if (string.IsNullOrEmpty(Model.USER_INFO.image_file_path))
                {
                    <div class="box-img">
                        <img class="no_image_user" id="image_user" src="~/Images/img_user.png" />
                    </div>
                }
                else
                {
                    <img class="image_user" id="image_user" src="" />
                }
                <input type="file" name="file" id="file">
                @if (!string.IsNullOrEmpty(Model.USER_INFO.image_file_path))
                {
                    <div class="clearImage">クリア</div>
                }
                @Html.HiddenFor(m => m.Clear)
                @Html.HiddenFor(m => m.TypeUpload)
                @Html.HiddenFor(m => m.USER_INFO.image_file_path)
            </div>
        </div>

        <div class="form-group" style="display: none">
            <label class="col-sm-2 bold">言語設定</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.USER_INFO.language_id, Model.LANGUAGE_LIST, new { @class = "form-control" }, true)
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">稼動実績入力モード</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.USER_INFO.actual_work_input_mode, new SelectList(Constant.ActualWorkModeFlag.Items, "Key", "Value"), new { @class = "form-control" }, false)
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-remarks bold">備考</label>
            <div class="col-sm-4">
                @Html.TextAreaFor(m => m.USER_INFO.remarks, new { @class = "form-control candy-textArea", maxlength = 200, @rows = 5 })
                <input type="hidden" class="set-max-width" />
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(m => m.USER_INFO.row_version)
            @Html.AntiForgeryToken()
            <button type="button" id="btnSubmit" class="btn green btn-edit "><i class="btn-icon btn-regist"></i> 登録</button>
        </div>
    }
</div>

<script type="text/javascript">
    var fileDrag = null;
    var maxWidth = $(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2); // set max-width of textarea
    $(document).ready(function () {
        // get max-width of textarea when resize manu bar left
        window.addEventListener('resize', function (event) {
            maxWidth = $(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2);
            //handle change textare when resize menu bar left
            if ($('body').hasClass('sidebar-collapse') === true) {
                // case close when page first load
                $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
            }
            else {
                $(".candy-textArea").css("max-width", parseInt(maxWidth, 10) + "px");
            }
        });
        //end get max-width of textarea when resize manu bar left
    });


    $(function () {
        //handle change textare when resize menu bar left
        if ($('body').hasClass('sidebar-collapse') === true) {
            // case close when page first load
            $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
        }
        $(document).off('a.sidebar-toggle i');
        $(document).on('click', 'a.sidebar-toggle i', function () {
            if ($('body').hasClass('sidebar-collapse') === true) {
                // close
                $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
            } else {
                // open
                $(".candy-textArea").css("max-width", (parseInt($(".candy-textArea").css("max-width").slice(0, $(".candy-textArea").css("max-width").length - 2), 10) - 115) + "px");
            }
        });
        //end handle change textare when resize menu bar left

        var file_drop = document.body;
        file_drop.addEventListener(
          'dragover',
          function handleDragOver(evt) {
              evt.stopPropagation()
              evt.preventDefault()
              evt.dataTransfer.dropEffect = 'copy'
              evt.dataTransfer.effectAllowed = "all";
          },
          false
        )
        file_drop.addEventListener(
          'drop',
          function (evt) {
              evt.stopPropagation()
              evt.preventDefault()
              var files = evt.dataTransfer.files
              var file = files[0]
              fileDrag = file

              if (typeof (file) !== 'undefined' && file !== null) {
                  if ($('.box-img').length > 0) {
                      var img = '<img class="image_user" id="image_user" src=""/>';
                      $(".bootstrap-filestyle").before(img);

                  }

                  var $imgElement = $('.image_user');
                  if (typeof (file) !== 'undefined') {
                      var reader = new FileReader();

                      reader.onload = function (e) {
                          $imgElement.attr('src', e.target.result).attr('title', file.name);
                      };

                      reader.readAsDataURL(file);
                  }
                  $(".bootstrap-filestyle").find('input').val(file.name);

                  if ($(".bootstrap-filestyle").find('input').val() !== '選択されていません' && $('.clearImage').length === 0) {
                      var clearImage = '<div class="clearImage">クリア</div>';
                      $(".bootstrap-filestyle").after(clearImage);
                  }
                  $('.box-img').remove();
              }
          },
          false
        )

        var flagChangePassword = 0;
        var flagChangeConfirmPassword = 0;
        PMS.utility.checkInputPhone($("#USER_INFO_tel_no"));

        PMS.utility.imeControl($("#USER_INFO_user_name_sei"), 'active');
        PMS.utility.imeControl($("#USER_INFO_user_name_mei"), 'active');
        PMS.utility.imeControl($("#USER_INFO_furigana_sei"), 'active');
        PMS.utility.imeControl($("#USER_INFO_furigana_mei"), 'active');
        PMS.utility.imeControl($("#USER_INFO_display_name"), 'active');
        PMS.utility.imeControl($("#USER_INFO_tel_no"), 'disable');
        PMS.utility.imeControl($("#USER_INFO_remarks"), 'active');

        $(document).ready(function () {
            var display_name_group = '@Model.USER_INFO.display_name_group';
            var group_id = '@Model.USER_INFO.group_id';
            var flag = 0;
            if (group_id != '') {
                $('#USER_INFO_group_id > option').each(function (index, element) {
                    if (element.value == group_id) {
                        flag = 1;
                        return;
                    }
                });
                if (flag == 0) {
                    var html = '<option value="' + group_id + '" selected="selected">' + display_name_group + '</option>'
                    $('#USER_INFO_group_id').append(html);
                }
            }

            $(".content-wrapper").addClass("content-edit-wrapper");
            $(":file").filestyle({ iconName: "", buttonBefore: true, buttonName: "dark", buttonText: "ファイル選択" });
            $('span .glyphicon').remove();
            $(".bootstrap-filestyle").find('input').val('選択されていません');

            $('#USER_INFO_password').val('@Constant.DISPLAY_PASSWORD');
            $('#confirmPassword').val('@Constant.DISPLAY_PASSWORD');

        });

        $(document).off('.clearImage');
        $(document).on('click', '.clearImage', function () {
            var img = '<div class="box-img">'
                    + '<img class="no_image_user" id="image_user" src="/Images/img_user.png">'
                    + '</div>';
            if ($(this).parent().children('.box-img').length == 0) {
                $(".image_user").after(img).remove();
            }
            $(this).remove();
            $(':file').val('');
            $(".bootstrap-filestyle").find('input').val('選択されていません');
            $('.box-img').parent().find('br').remove();
            $('.image_user').remove();
            fileDrag = null;
        });

        $(document).on('change', ':file', function () {
            if ($('.box-img').length > 0) {
                var img = '<img class="image_user" id="image_user" src=""/>';
                $(".bootstrap-filestyle").before(img);
            }

            var $imgElement = $(this).siblings('.image_user');
            var file = $(this).prop('files')[0];

            if (typeof (file) !== 'undefined') {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $imgElement.attr('src', e.target.result).attr('title', file.name);
                };

                reader.readAsDataURL(file);
            }

            if ($(".bootstrap-filestyle").find('input').val() !== '選択されていません' && $('.clearImage').length === 0) {
                var clearImage = '<div class="clearImage">クリア</div>';
                $(".bootstrap-filestyle").after(clearImage);
            }
            $('.box-img').remove();
            $('#TypeUpload').val('file');
            fileDrag = null;
        });

        PMS.utility.focusTextbox();

        var DATE_FORMAT = 'yyyy/mm/dd';

        PMS.utility.formatMoney();

        $(document).off('button#btnSubmit');
        $(document).on('click', 'button#btnSubmit', function () {
            PMS.utility.removeValidationError();
            var invalidMess = validateData();
            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess);
                return false;
            }
            if ($('.clearImage').length !== 0) {
                $('#Clear').val('0');
            } else {
                $('#Clear').val('1');
            }

            if (fileDrag !== null) {
                $('#TypeUpload').val('fileDrag');
            }

            PMS.utility.IsAuthenticateTimeout('@string.Format(Messages.I006)', '#frmPersonalSetting');
        });

        $("#frmPersonalSetting").submit(function (e) {
            var formData = new FormData(this);

            if (PMS.utility.isSecurityUpdatedSafariVersion()) { // if browser is Safari Vesion 11.1+
                try {
                    eval('for (var pair of formData.entries()) {\
                        if (pair[1] instanceof File && pair[1].name === \'\' && pair[1].size === 0) {\
                            formData.delete(pair[0]);\
                        }\
                    }');
                } catch (e) { }
            }
            if (fileDrag !== null) {
                formData.append("fileDrag", fileDrag);
            }

            $.ajax({
                url: $(this).attr("action"),
                type: 'POST',
                data: formData,
                mimeType: "multipart/form-data",
                contentType: false,
                cache: false,
                processData: false,
                success: function (response) {
                    var data = JSON.parse(response);

                    BootstrapDialog.closeAll();

                    if (data.statusCode == 201) { // update success
                        $("#frmPersonalSetting").css('visibility', 'hidden');
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), data.message, null, null, function () {
                            $('#USER_INFO_row_version').val(data.row_version);
                            $('#USER_INFO_password').val('@Constant.DISPLAY_PASSWORD');
                            $('#confirmPassword').val('@Constant.DISPLAY_PASSWORD');
                            flagChangePassword = 0;
                            flagChangeConfirmPassword = 0;
                            $(':file').val('');
                            $(".bootstrap-filestyle").find('input').val('選択されていません');
                            $('#USER_INFO_image_file_path').val(data.imageFilePath);
                            if ($('span.session-user-name').text() !== data.userNameSesssion) {
                                $('span.session-user-name').text(data.userNameSesssion);
                            }
                            getAvatar(data.id);
                            $("#frmPersonalSetting").css('visibility', '');
                        });
                    }

                    if (data.statusCode == 500) { // Exception
                        $("#frmPersonalSetting").css('visibility', 'hidden');
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), data.message, '/PMS01002');
                    }

                    if (typeof (data.ErrorMessages) !== 'undefined') // invalid data
                        PMS.utility.showClientError(data.ErrorMessages);
                },
                error: function (error) {
                    if (error.status == 419) //419: Authentication Timeout
                    {
                        $("#frmPersonalSetting").css('visibility', 'hidden');
                        window.location.href = '/PMS01001/Login/timeout';
                    }
                }
            });

            e.preventDefault(); // prevent Default action
        });

        $(document).off('#USER_INFO_password');
        $(document).on('change', '#USER_INFO_password', function () {
            flagChangePassword = 1;
        });

        $(document).off('#confirmPassword');
        $(document).on('change', '#confirmPassword', function () {
            flagChangeConfirmPassword = 1;
        });

        function validateData() {
            var invalidMess = [];

            // check max length of user_name_sei
            if ($('#USER_INFO_user_name_sei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "ユーザー名(姓)", "50")");
                $('.label-user-name').addClass('label-validation-error');
            }

            // check max length of user_name_mei
            if ($('#USER_INFO_user_name_mei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "ユーザー名(名)", "50")");
                $('.label-user-name').addClass('label-validation-error');
            }

            // check max length of furigana_sei
            if ($('#USER_INFO_furigana_sei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "フリガナ(姓)", "50")");
                $('.label-furigana').addClass('label-validation-error');
            }

            // check max length of furigana_mei
            if ($('#USER_INFO_furigana_mei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "フリガナ(名)", "50")");
                $('.label-furigana').addClass('label-validation-error');
            }

            // check required of display_name
            if ($('#USER_INFO_display_name').val().length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "表示名")");
                $('.label-display-name').addClass('label-validation-error');
            }

            // check max length of display_name
            if ($('#USER_INFO_display_name').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "表示名", "50")");
                $('.label-display-name').addClass('label-validation-error');
            }

            // check number of tel_no
            var telNo = $('#USER_INFO_tel_no').val();
            if (telNo.length > 0) {

                // check max length of tel_no
                if (telNo.length > 13) {
                    invalidMess.push("@string.Format(Messages.E020, "電話番号", "13")");
                    $('.label-tel-no').addClass('label-validation-error');
                }

                // check numberic
                if (!PMS.utility.validPhone(telNo)) {
                    invalidMess.push("@string.Format(Messages.E003, "電話番号")");
                    $('.label-tel-no').addClass('label-validation-error');
                }
            }

            var flag = 0;
            var password = $('#USER_INFO_password').val();
            // check required of password
            if (password.length === 0 && flagChangePassword === 1) {
                invalidMess.push("@string.Format(Messages.E002, "パスワード")");
                $('.label-password').addClass('label-validation-error');
                flag = 1;
            } else {
                if (password.length < 6 && flagChangePassword === 1) {
                    invalidMess.push("@string.Format(Messages.E023, "パスワード")");
                    $('.label-password').addClass('label-validation-error');
                    flag = 1;
                }

                // check max length of password
                if (password.length > 32 && flagChangePassword === 1) {
                    invalidMess.push("@string.Format(Messages.E020, "パスワード", "32")");
                    $('.label-password').addClass('label-validation-error');
                    flag = 1;
                }

                // check validate of password
                if (!PMS.utility.validAcount(password) && flagChangePassword === 1) {
                    invalidMess.push("@string.Format(Messages.E003, "パスワード")");
                    $('.label-password').addClass('label-validation-error');
                    flag = 1;
                }
            }

            var confirmPassword = $('#confirmPassword').val();
            // check required of password
            if (confirmPassword.length === 0 && flagChangeConfirmPassword === 1) {
                invalidMess.push("@string.Format(Messages.E002, "パスワード（確認用）")");
                $('.label-confirm-password').addClass('label-validation-error');
                flag = 1;
            } else {
                if (confirmPassword.length < 6 && flagChangeConfirmPassword === 1) {
                    invalidMess.push("@string.Format(Messages.E023, "パスワード（確認用）")");
                    $('.label-confirm-password').addClass('label-validation-error');
                    flag = 1;
                }

                // check max length of password
                if (confirmPassword.length > 32 && flagChangeConfirmPassword === 1) {
                    invalidMess.push("@string.Format(Messages.E020, "パスワード（確認用）", "32")");
                    $('.label-confirm-password').addClass('label-validation-error');
                    flag = 1;
                }

                // check validate of password
                if (!PMS.utility.validAcount(confirmPassword) && flagChangeConfirmPassword === 1) {
                    invalidMess.push("@string.Format(Messages.E003, "パスワード（確認用）")");
                    $('.label-confirm-password').addClass('label-validation-error');
                    flag = 1;
                }

                if (password !== confirmPassword && flag === 0) {
                    invalidMess.push("@string.Format(Messages.E048)");
                    $('.label-confirm-password').addClass('label-validation-error');
                }
            }

            // check max length of birth_date
            if ($('#USER_INFO_birth_date').val().length > 10) {
                invalidMess.push("@string.Format(Messages.E020, "生年月日", "10")");
                $('.label-birth-date').addClass('label-validation-error');
            }

            // check valid date
            var entryDate = $('#USER_INFO_entry_date').val();
            var retirementDate = $('#USER_INFO_retirement_date').val();
            var birthDate = $('#USER_INFO_birth_date').val();

            var errBirthDate = PMS.utility.validDate(birthDate, DATE_FORMAT, "生年月日");

            if (errBirthDate != null) {
                invalidMess.push(errBirthDate);
                $('.label-birth-date').addClass('label-validation-error');
            }

            var file = $('#file').val();
            // check max length of file
            if (file.length > 255) {
                invalidMess.push("@string.Format(Messages.E020, "プロフィール画像", "255")");
                $('.label-image-user').addClass('label-validation-error');
            }

            var fileExtension = ['jpeg', 'jpg', 'png'];
            var sFileExtension = file.split('.')[file.split('.').length - 1].toLowerCase();

            if (file.length > 0 && $.inArray(sFileExtension, fileExtension) == -1) {
                invalidMess.push("@string.Format(Messages.E010, "jpg,png.jpeg")");
                $('.label-image-user').addClass('label-validation-error');
            }

            var fileInput = document.getElementById('file');
            for (i = 0; i < fileInput.files.length; i++) {
                if (fileInput.files[i].size / 1024 > 500) {
                    invalidMess.push("@string.Format(Messages.E021, "500KB以内")");
                    $('.label-image-user').addClass('label-validation-error');
                    break;
                }
            }

            if (fileDrag !== null && typeof (fileDrag) !== 'undefined') {
                // check max length of file
                if (fileDrag.name.length > 255) {
                    invalidMess.push("@string.Format(Messages.E020, "プロフィール画像", "255")");
                    $('.label-image-user').addClass('label-validation-error');
                }

                var fileExtension = ['jpeg', 'jpg', 'png'];
                var sFileExtension = fileDrag.name.split('.')[fileDrag.name.split('.').length - 1].toLowerCase();

                if (fileDrag.length > 0 && $.inArray(sFileExtension, fileExtension) == -1) {
                    invalidMess.push("@string.Format(Messages.E010, "jpg,png.jpeg")");
                    $('.label-image-user').addClass('label-validation-error');
                }

                if (fileDrag.size / 1024 > 500) {
                    invalidMess.push("@string.Format(Messages.E021, "500KB以内")");
                    $('.label-image-user').addClass('label-validation-error');
                }
            }

            // check max length of remarks
            if ($('#USER_INFO_remarks').val().length > 200) {
                invalidMess.push("@string.Format(Messages.E020, "備考", "200")");
                $('.label-remarks').addClass('label-validation-error');
            }

            return invalidMess;
        }

        getAvatar('@Model.USER_INFO.user_sys_id');

        var displayImage = function (base64Data) {
            var img = "<img class='image_user thumb' id='image_user' "
                     + "src='" + "data:image/jpg;base64,"
                     + base64Data + "'/>";

            if ($('.box-img').length > 0) {
                $('.box-img').remove();
                $(".bootstrap-filestyle").before(img);
            } else {
                $("#image_user").after(img).remove();
            }

            if ($('input[id="USER_INFO_user_sys_id"]').val() === $('input[id="sessionUserId"]').val()) {
                var imgLogoProfile = "data:image/jpg;base64," + base64Data;

                if ($('#profile').length > 0) {
                    $('#profile').attr('src', imgLogoProfile);
                } else {
                    var logoProfile = '<img class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="500" aria-expanded="false" id="profile" src="' + "data:image/jpg;base64," + base64Data + '"/>';

                    $('div.navbar-custom-menu li.dropdown img').remove();
                    $('div.navbar-custom-menu li.dropdown a.dropdown-toggle').remove();
                    $('div.navbar-custom-menu li.dropdown ul.dropdown-menu').before(logoProfile);
                }
            }
        };

        function getAvatar(userId) {
            PMS.utility.getImageByAjax('/Common/GetImage', { id: userId, type: '@Constant.GetImage.USER_IMAGE' }, function (data) {
                if (data != null) {
                    displayImage(data.base64imgage);
                }
                else {
                    var img = '<div class="box-img">'
                    + '<img class="no_image_user" id="image_user" src="/Images/img_user.png">'
                    + '</div>';

                    if ($('.box-img').length !== 0) {
                        $('.box-img').remove();
                        $(".bootstrap-filestyle").before(img);
                    }
                    else {
                        $("#image_user").after(img).remove();
                    }
                    $('.clearImage').remove();

                    var logoProfile = '<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="500" aria-expanded="false">'
                                      + '<i class="btn-user"></i></a>';
                    $('div.navbar-custom-menu li.dropdown img').remove();
                    $('div.navbar-custom-menu li.dropdown a.dropdown-toggle').remove();
                    $('div.navbar-custom-menu li.dropdown ul.dropdown-menu').before(logoProfile);
                }
            });
        }
    });
</script>