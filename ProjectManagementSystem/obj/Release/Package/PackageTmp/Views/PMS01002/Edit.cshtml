@model ProjectManagementSystem.ViewModels.PMS01002.PMS01002EditViewModel

@using ProjectManagementSystem.Common;
@using ProjectManagementSystem.Resources;

@{
    ViewBag.Title = "ユーザー登録";
    var currentUser = HttpContext.Current.Session[Constant.SESSION_LOGIN_USER] as LoginUser;
}

<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
</section>

<section class="content user-regist clearfix">
    <!-- Info boxes -->
    @using (Html.BeginForm("EditUser", "PMS01002", FormMethod.Post,
                                            new { @class = "form-horizontal", id = "frmUserEdit", enctype = "multipart/form-data" }))
    {
        <div id="title"></div>
        @Html.ValidationSummary(false)
        <div class="form-group">
            <label class="col-sm-2 control-label label-user-name bold">ユーザー名</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.user_name_sei, new { @class = "form-control", maxlength = 50 })
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.user_name_mei, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-furigana bold">フリガナ</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.furigana_sei, new { @class = "form-control", maxlength = 50 })
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.furigana_mei, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-display-name bold">表示名<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.USER_INFO.display_name, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-employee-no bold">社員No.</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.employee_no, new { @class = "form-control", maxlength = 20 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">役職</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.USER_INFO.position_id, Model.POSITION_LIST, new { @class = "form-control" }, true)
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-employee-no bold">所属</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.USER_INFO.group_id, Model.GROUP_LIST, new { @class = "form-control" }, true)
            </div>
        </div>

        if (currentUser != null)
        {

            if ((currentUser.PlanFunctionList.Contains(Constant.FunctionID.BranchList_Admin) || currentUser.PlanFunctionList.Contains(Constant.FunctionID.BranchList))
                && (currentUser.FunctionList.Contains(Constant.FunctionID.BranchList_Admin) || currentUser.FunctionList.Contains(Constant.FunctionID.BranchList)))
            {
                <div class="form-group">
                    <label class="col-sm-2 control-label label-employee-no bold">拠点</label>
                    <div class="col-sm-2">
                        @Html.DropDownListFor(m => m.USER_INFO.location_id, Model.BRANCH_LIST, new { @class = "form-control" }, true)
                    </div>
                </div>
            }
        }
        <div class="form-group">
            <label class="col-sm-2 control-label label-tel-no bold">電話番号</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.USER_INFO.tel_no, new { @class = "form-control tell-no", maxlength = 13 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-user-account bold">ユーザーアカウント<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.USER_INFO.user_account, new { @class = "form-control", maxlength = 32 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-password bold">パスワード<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.PasswordFor(m => m.USER_INFO.password, new { @class = "form-control", maxlength = 32, autocomplete = "new-password" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-role-id bold">権限<span class="RequiredField">*</span></label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.USER_INFO.role_id, Model.AUTHORITYROLE_LIST, new { @class = "form-control" }, true)
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-mail-address-1 bold">メールアドレス1</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.USER_INFO.mail_address_1, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-mail-address-2 bold">メールアドレス2</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.USER_INFO.mail_address_2, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-entry-date bold">基準単価</label>
            <div class="col-sm-10 col-input">
                <span class="date datepicker-months padding-right">
                    <input class="ime-mode progress-regist-date" maxlength="7" type="text">
                    <button type="button" class="btn light"><i class="btn-icon btn-calendar"></i></button>
                </span>
                <input class="right numeric money progress-unit-cost" maxlength="9" type="text">
                <label class="unit padding-right">円</label>
                <input class="progress-remarks" type="text" maxlength="200">
                <button type="button" class="btn dark btnAddProgress"><i class="btn-icon btn-add"></i></button>
            </div>
        </div>

        <div class="form-group">
            <span class="col-sm-2">&nbsp;</span>
            <div class="col-sm-10 col-input progress-list resizable">
                <table class="tb-detail">
                    <tbody>
                        @if (Model.USER_INFO.unit_price_history != null)
                        {
                            if (Model.USER_INFO.unit_price_history.Count > 0)
                            {
                                for (int i = 0; i < Model.USER_INFO.unit_price_history.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Model.USER_INFO.unit_price_history[i].apply_start_date.ToString("yyyy/MM/dd")
                                            <input class="hdnApplyStartDate" type="hidden" value='@Model.USER_INFO.unit_price_history[i].apply_start_date.ToString("yyyy/MM/dd")'>
                                        </td>
                                        <td style="text-align:right">
                                            <input class="hdnBaseUnitCost" type="hidden" value="@Model.USER_INFO.unit_price_history[i].base_unit_cost">
                                            <div class="readonly">
                                                <span class="baseUnitCostReadOnly">@Model.USER_INFO.unit_price_history[i].base_unit_cost.Value.ToString("#,##0")円</span>
                                            </div>
                                            <div class="editable">
                                                <input type="text" class="right numeric money baseUnitCostEditable" maxlength=9>円
                                            </div>
                                        </td>
                                        <td class="short-progress-remarks">
                                            <input class="hdnProgressRemarks" type="hidden" value="@Model.USER_INFO.unit_price_history[i].remarks">
                                            <div class="text-overflow readonly"><span class="remarksReadOnly" title="@Model.USER_INFO.unit_price_history[i].remarks">@Model.USER_INFO.unit_price_history[i].remarks</span></div>
                                            <input type="text" class="editable remarksEditable" />
                                        </td>

                                        @if (
                                        Utility.GetLastDayOfMonth(Model.USER_INFO.unit_price_history[i].apply_start_date) >= Utility.GetCurrentDateTime().Date)
                                        {
                                            <td class="td-remove">
                                                @Html.HiddenFor(m => m.USER_INFO.unit_price_history[i].isDelete, new { @class = "hdnIsDelete" })
                                                @Html.HiddenFor(m => m.USER_INFO.unit_price_history[i].isUpdate, new { @class = "hdnIsUpdate" })
                                                <label class="lbl-action btnEditProgress">編集</label>
                                                <label class="lbl-action btnDeleteProgress">削除</label>
                                                <label class="lbl-action btnFinish" style="display:none">決定</label>
                                            </td>
                                        }
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-entry-date bold">入社年月日</label>
            <div class="col-sm-2">
                <span class="date datepicker-days">
                    @Html.TextBox(m => m.USER_INFO.entry_date, "{0:yyyy/MM/dd}", new { @class = "ime-mode", maxlength = 10 })
                    <button type="button" class="btn light btn-date"><i class="btn-icon btn-calendar"></i></button>
                </span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label title-retirement bold">休職</label>
            <div class="col-sm-4">
                <label>
                    @Html.CheckBoxFor(m => m.Temporary_Retirement)
                    休職
                </label>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-retirement-date bold">退職年月日</label>
            <div class="col-sm-2">
                <span class="date datepicker-days">
                    @Html.TextBox(m => m.USER_INFO.retirement_date, "{0:yyyy/MM/dd}", new { @class = "ime-mode", maxlength = 10 })
                    <button type="button" class="btn light btn-date"><i class="btn-icon btn-calendar"></i></button>
                </span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-birth-date bold">生年月日</label>
            <div class="col-sm-2">
                <span class="date datepicker-days">
                    @Html.TextBox(m => m.USER_INFO.birth_date, "{0:yyyy/MM/dd}", new { @class = "ime-mode", maxlength = 10 })
                    <button type="button" class="btn light btn-date"><i class="btn-icon btn-calendar"></i></button>
                </span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-image-user bold">プロフィール画像</label>
            <div class="col-sm-4">
                @if (string.IsNullOrEmpty(Model.USER_INFO.image_file_path))
                {
                    <div class="box-img">
                        <img class="no_image_user" id="image_user" src="~/Images/img_user.png" />
                    </div>
                }
                else
                {
                    <img class="image_user" id="image_user" src="" />
                }
                <input type="file" name="file" id="file">
                @if (!string.IsNullOrEmpty(Model.USER_INFO.image_file_path))
                {
                    <div class="clearImage">クリア</div>
                }
                @Html.HiddenFor(m => m.Clear)
                @Html.HiddenFor(m => m.TypeUpload)
                @Html.HiddenFor(m => m.USER_INFO.image_file_path)
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">稼動実績入力モード</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.USER_INFO.actual_work_input_mode, new SelectList(Constant.ActualWorkModeFlag.Items, "Key", "Value"), new { @class = "form-control" }, false)
            </div>
        </div>


        <div class="form-group" id="lockpass">
            <label class="col-sm-2 control-label title_lockpass bold">パスワードロック</label>
            <div class="col-sm-4">
                <label>
                    @Html.CheckBoxFor(m => m.Password_Lock, new { @class = "condition_chkbox lockpass_chkbox" })
                    ロック
                </label>
            </div>
        </div>


        <div class="form-group">
            <label class="col-sm-2 control-label label-remarks bold">備考</label>
            <div class="col-sm-4">
                @Html.TextAreaFor(m => m.USER_INFO.remarks, new { @class = "form-control candy-textArea zoom-textarea", maxlength = 200, @rows = 5 })
                <input type="hidden" class="set-max-width" />
            </div>
        </div>

        <div id="updateTime">
            <div class="form-group">
                <label class="col-sm-2 control-label bold">登録日時</label>
                <div class="col-sm-4">
                    <label class="control-label" id="insDate">
                        @{
                            string ins_date = !string.IsNullOrEmpty(@Model.USER_INFO.ins_date.ToString()) ? Model.USER_INFO.ins_date.ToString("yyyy/MM/dd HH:mm") : "";
                        }
                        @ins_date
                    </label>
                </div>

            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">登録者</label>
                <div class="col-sm-8">
                    <label class="control-label" id="insUser">@Model.USER_INFO.user_regist</label>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">更新日時</label>

                <div class="col-sm-4">
                    <label class="control-label" id="updDate">
                        @{
                            string upd_date = !string.IsNullOrEmpty(@Model.USER_INFO.upd_date.ToString()) ? Model.USER_INFO.upd_date.ToString("yyyy/MM/dd HH:mm") : "";
                        }
                        @upd_date
                    </label>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">更新者</label>
                <div class="col-sm-8">
                    <label class="control-label" id="updUser">@Model.USER_INFO.user_update</label>
                </div>
            </div>
        </div>

        <div class="form-group btn-group-edit">
            <div class="col-sm-4">
                @Html.HiddenFor(m => m.USER_INFO.row_version)
                @Html.HiddenFor(m => m.USER_INFO.user_sys_id)
                <input type="hidden" name="OLD_DEL_FLAG" value="@Model.Delete.ToString()" />
                @Html.AntiForgeryToken()

                <input name="sessionUserId" id="sessionUserId" type="hidden" value="">
                <button type="button" id="btnBack" name="Back" class="btn light btnNoStyleDisable"><i class="btn-icon btn-back"></i>戻る</button>
                <button type="button" id="btnSubmit" class="btn green"><i class="btn-icon btn-regist"></i> 登録</button>

                <label class="bold" id="deleteFlag">
                    @Html.CheckBoxFor(m => m.Delete)
                    削除
                </label>
            </div>
        </div>
    }
</section>

<script type="text/javascript">

    var fileDrag = null;
    var flagChangePassword = 0;
    var maxWidth =$(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2); // set max-width of textarea
    $(document).ready(function () {
        $(".content-wrapper").addClass("content-edit-wrapper");
        $(":file").filestyle({ buttonBefore: true, buttonName: "dark", buttonText: "ファイル選択" });
        $('.btn-clip').parent().find('span').removeClass('glyphicon');
        $(".bootstrap-filestyle").find('input').val('選択されていません');
        $("span.glyphicon").remove();

        if ($('#USER_INFO_user_sys_id').val() === '0') {
            $('#updateTime, #deleteFlag, #lockpass').hide();
        } else {
            $('#USER_INFO_password').val('@Constant.DISPLAY_PASSWORD');
        }
        //Setup display data of unit price info
        $('.readonly').show();
        $('.editable').hide();

        // get max-width of textarea when resize manu bar left
        window.addEventListener('resize', function (event) {
            maxWidth = $(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2);
             //handle change textare when resize menu bar left
            if ($('body').hasClass('sidebar-collapse') === true) {
                // case close when page first load
                $(".candy-textArea").css("max-width",(parseInt(maxWidth,10) + 115)+ "px");
            }
            else{
                $(".candy-textArea").css("max-width",parseInt(maxWidth,10)+ "px");
            }
        });
        //end get max-width of textarea when resize manu bar left
    });

    $(function () {

        //handle change textare when resize menu bar left
        if ($('body').hasClass('sidebar-collapse') === true) {
            // case close when page first load
            $(".candy-textArea").css("max-width",(parseInt(maxWidth,10) + 115)+ "px");
        }
        $(document).off('a.sidebar-toggle i');
        $(document).on('click', 'a.sidebar-toggle i', function () {
            if ($('body').hasClass('sidebar-collapse') === true) {
                // close
                $(".candy-textArea").css("max-width",(parseInt(maxWidth,10) + 115)+ "px");
            } else {
                // open
                $(".candy-textArea").css("max-width",(parseInt($(".candy-textArea").css("max-width").slice(0, $(".candy-textArea").css("max-width").length - 2),10) - 115)+ "px");
            }
        });
        //end handle change textare when resize menu bar left


        PMS.utility.validFullHalfSize($("#USER_INFO_user_account"));
        PMS.utility.validFullHalfSize($("#USER_INFO_mail_address_1"));
        PMS.utility.validFullHalfSize($("#USER_INFO_mail_address_2"));
        PMS.utility.checkInputPhone($("#USER_INFO_tel_no"));
        PMS.utility.validFullHalfSize($("#USER_INFO_employee_no"));

        PMS.utility.imeControl($("#USER_INFO_user_name_sei, #USER_INFO_user_name_mei, #USER_INFO_furigana_sei, #USER_INFO_furigana_mei, #USER_INFO_display_name, #USER_INFO_remarks"), 'active');
        PMS.utility.imeControl($("#USER_INFO_employee_no"), 'inactive');
        PMS.utility.imeControl($("#USER_INFO_tel_no, #USER_INFO_user_account, #USER_INFO_mail_address_1, #USER_INFO_mail_address_2, #USER_INFO_base_unit_cost"), 'disable');

        PMS.utility.focusTextbox();

        var DATE_FORMAT = 'yyyy/mm/dd';

        PMS.utility.formatMoney();

        var file_drop = document.body;
        file_drop.addEventListener(
          'dragover',
          function handleDragOver(evt) {
              evt.stopPropagation()
              evt.preventDefault()
              evt.dataTransfer.dropEffect = 'copy'
              evt.dataTransfer.effectAllowed = "all";
          },
          false
        )
        file_drop.addEventListener(
          'drop',
          function (evt) {
              evt.stopPropagation()
              evt.preventDefault()
              var files = evt.dataTransfer.files
              var file = files[0]
              fileDrag = file
              if (typeof (file) !== 'undefined' && file !== null) {
                  if ($('.box-img').length > 0) {
                      var img = '<img class="image_user" id="image_user" src=""/>';
                      $(".bootstrap-filestyle").before(img);

                  }

                  var $imgElement = $('.image_user');
                  if (typeof (file) !== 'undefined') {
                      var reader = new FileReader();

                      reader.onload = function (e) {
                          $imgElement.attr('src', e.target.result).attr('title', file.name);
                      };

                      reader.readAsDataURL(file);
                  }
                  $(".bootstrap-filestyle").find('input').val(file.name);

                  if ($(".bootstrap-filestyle").find('input').val() !== '選択されていません' && $('.clearImage').length === 0) {
                      var clearImage = '<div class="clearImage">クリア</div>';
                      $(".bootstrap-filestyle").after(clearImage);
                  }
                  $('.box-img').remove();
              }
          },
          false
        )

        $('button#btnSubmit').click(function () {
            PMS.utility.removeValidationError();
            var invalidMess = validateData();
            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess);
                return false;
            }

            if ($('.clearImage').length !== 0) {
                $('#Clear').val('0');
            } else {
                $('#Clear').val('1');
            }

            if (fileDrag !== null) {
                $('#TypeUpload').val('fileDrag');
            }

            PMS.utility.IsAuthenticateTimeout('@string.Format(Messages.I006)', '#frmUserEdit');
        });

        $("#frmUserEdit").submit(function (e) {
            var formData = new FormData(this);

            if (PMS.utility.isSecurityUpdatedSafariVersion()) { // if browser is Safari Vesion 11.1+
                try {
                    eval('for (var pair of formData.entries()) {\
                        if (pair[1] instanceof File && pair[1].name === \'\' && pair[1].size === 0) {\
                            formData.delete(pair[0]);\
                        }\
                    }');
                } catch (e) { }
            }

            if (fileDrag !== null) {
                formData.append("fileDrag", fileDrag);
                $('#TypeUpload').val('fileDrag');
            }

            $.ajax({
                url: $(this).attr("action"),
                type: 'POST',
                data: formData,
                mimeType: "multipart/form-data",
                contentType: false,
                cache: false,
                processData: false,
                success: function (response) {
                    var data = JSON.parse(response);

                    BootstrapDialog.closeAll();

                    if (data.statusCode == 201) { // update success
                        $("#frmUserEdit").css('visibility', 'hidden');
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), data.message, null, null, function () {
                            $('#USER_INFO_user_sys_id').val(data.id);
                            if (data.insDate != null && data.insDate.length > 0) {
                                $('#insDate').text(data.insDate);
                            }
                            if (data.insUser != null && data.insUser.length > 0) {
                                $('#insUser').text(data.insUser);
                            }
                            $('#updDate').text(data.updDate);
                            $('#updUser').text(data.updUser);
                            $('#Delete').text(data.updUser);
                            $("#Delete").prop('checked', data.deleted);
                            $('input[name="OLD_DEL_FLAG"]').val(data.deleted);

                            $(':file').val('');
                            $(".bootstrap-filestyle").find('input').val('選択されていません');

                            $('#USER_INFO_row_version').val(data.row_version);
                            $('#USER_INFO_password').val('@Constant.DISPLAY_PASSWORD');
                            flagChangePassword = 0;
                            $('#USER_INFO_image_file_path').val(data.imageFilePath);
                            $('input[id="sessionUserId"]').val(data.userIDSesssion);
                            getAvatar(data.id);

                            if ($('input[id="USER_INFO_user_sys_id"]').val() === $('input[id="sessionUserId"]').val()) {
                                if ($('span.session-user-name').text() !== data.userNameSesssion) {
                                    $('span.session-user-name').text(data.userNameSesssion);
                                }
                            }
                            $('#updateTime, #deleteFlag, #lockpass').show();
                            $("#frmUserEdit").css('visibility', '');
                            //window.location.reload();
                        });
                    }

                    if (data.statusCode == 500) { // Exception
                        $("#frmUserEdit").css('visibility', 'hidden');
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), data.message, '/PMS01002');
                    }

                    if (typeof (data.ErrorMessages) !== 'undefined') // invalid data
                        PMS.utility.showClientError(data.ErrorMessages);
                },
                error: function (error) {
                    if (error.status == 419) //419: Authentication Timeout
                    {
                        $("#frmUserEdit").css('visibility', 'hidden');
                        window.location.href = '/PMS01001/Login/timeout';
                    }
                }
            });

            e.preventDefault(); // prevent Default action
        });

        $(document).off('.clearImage');
        $(document).on('click', '.clearImage', function () {
            var img = '<div class="box-img">'
                    + '<img class="no_image_user" id="image_user" src="/Images/img_user.png">'
                    + '</div>';
            if ($(this).parent().children('.box-img').length == 0) {
                $(".image_user").after(img).remove();
            }
            $(this).remove();
            $(':file').val('');
            $(".bootstrap-filestyle").find('input').val('選択されていません');
            $('.box-img').parent().find('br').remove();
            $('.image_user').remove();
            fileDrag = null;
        });

        $(document).on('change', ':file', function () {
            if ($('.box-img').length > 0) {
                var img = '<img class="image_user" id="image_user" src=""/>';
                $(".bootstrap-filestyle").before(img);

            }

            var $imgElement = $(this).siblings('.image_user');
            var file = $(this).prop('files')[0];

            if (typeof (file) !== 'undefined') {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $imgElement.attr('src', e.target.result).attr('title', file.name);
                };

                reader.readAsDataURL(file);
            }

            if ($(".bootstrap-filestyle").find('input').val() !== '選択されていません' && $('.clearImage').length === 0) {
                var clearImage = '<div class="clearImage">クリア</div>';
                $(".bootstrap-filestyle").after(clearImage);
            }
            $('.box-img').remove();
            $('#TypeUpload').val('file');
            fileDrag = null;
        });

        $(document).ready(function () {
            var display_name_group = '@Model.USER_INFO.display_name_group';
            var group_id = '@Model.USER_INFO.group_id';
            var flag = 0;
            if (group_id != '') {
                $('#USER_INFO_group_id > option').each(function (index, element) {
                    if (element.value == group_id) {
                        flag = 1;
                        return;
                    }
                });
                if (flag == 0) {
                    var html = '<option value="' + group_id + '" selected="selected">' + display_name_group + '</option>'
                    $('#USER_INFO_group_id').append(html);
                }
            }
        });

        $(document).off('#USER_INFO_password');
        $(document).on('change', '#USER_INFO_password', function () {
            flagChangePassword = 1;
        });

        function validateData() {
            var invalidMess = [];

            // check max length of user_name_sei
            if ($('#USER_INFO_user_name_sei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "ユーザー名(姓)", "50")");
                $('.label-user-name').addClass('label-validation-error');
            }

            // check max length of user_name_mei
            if ($('#USER_INFO_user_name_mei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "ユーザー名(名)", "50")");
                $('.label-user-name').addClass('label-validation-error');
            }

            // check max length of furigana_sei
            if ($('#USER_INFO_furigana_sei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "フリガナ(姓)", "50")");
                $('.label-furigana').addClass('label-validation-error');
            }

            // check max length of furigana_mei
            if ($('#USER_INFO_furigana_mei').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "フリガナ(名)", "50")");
                $('.label-furigana').addClass('label-validation-error');
            }

            // check required of display_name
            if ($('#USER_INFO_display_name').val().length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "表示名")");
                $('.label-display-name').addClass('label-validation-error');
            }

            // check max length of display_name
            if ($('#USER_INFO_display_name').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "表示名", "50")");
                $('.label-display-name').addClass('label-validation-error');
            }

            // check max length of employee_no
            var employee_no = $('#USER_INFO_employee_no').val();
            if (employee_no.length > 20) {
                invalidMess.push("@string.Format(Messages.E020, "社員No.", "20")");
                $('.label-employee-no').addClass('label-validation-error');
            }

            if (!PMS.utility.validAlphanumeric(employee_no)) {
                invalidMess.push("@string.Format(Messages.E003, "社員No.")");
                $('.label-employee-no').addClass('label-validation-error');
            }

            // check number of tel_no
            var telNo = $('#USER_INFO_tel_no').val();
            if (telNo.length > 0) {

                // check max length of tel_no
                if (telNo.length > 13) {
                    invalidMess.push("@string.Format(Messages.E020, "電話番号", "13")");
                    $('.label-tel-no').addClass('label-validation-error');
                }

                // check phone
                if (!PMS.utility.validPhone(telNo)) {
                    invalidMess.push("@string.Format(Messages.E003, "電話番号")");
                    $('.label-tel-no').addClass('label-validation-error');
                }
            }

            var userAcount = $('#USER_INFO_user_account').val();
            // check required of user_account
            if (userAcount.length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "ユーザーアカウント")");
                $('.label-user-account').addClass('label-validation-error');
            }

            // check max length of user_account
            if (userAcount.length > 32) {
                invalidMess.push("@string.Format(Messages.E020, "ユーザーアカウント", "32")");
                $('.label-user-account').addClass('label-validation-error');
            }

            // check validate of user_account
            if (!PMS.utility.validAcount(userAcount)) {
                invalidMess.push("@string.Format(Messages.E003, "ユーザーアカウント")");
                $('.label-user-account').addClass('label-validation-error');
            }

            var password = $('#USER_INFO_password').val();
            // check required of password
            if (parseInt($('#USER_INFO_user_sys_id').val()) > 0) {
                if (password.length === 0 && flagChangePassword === 1) {
                    invalidMess.push("@string.Format(Messages.E002, "パスワード")");
                    $('.label-password').addClass('label-validation-error');
                } else {
                    if (password.length < 6 && flagChangePassword === 1) {
                        invalidMess.push("@string.Format(Messages.E023, "パスワード")");
                        $('.label-password').addClass('label-validation-error');
                    }
                    // check max length of password
                    if (password.length > 32 && flagChangePassword === 1) {
                        invalidMess.push("@string.Format(Messages.E020, "パスワード", "32")");
                        $('.label-password').addClass('label-validation-error');
                    }

                    // check validate of password
                    if (!PMS.utility.validAcount(password) && flagChangePassword === 1) {
                        invalidMess.push("@string.Format(Messages.E003, "パスワード")");
                        $('.label-password').addClass('label-validation-error');
                    }
                }
            } else {
                if (password.length === 0) {
                    invalidMess.push("@string.Format(Messages.E002, "パスワード")");
                    $('.label-password').addClass('label-validation-error');
                } else {
                    if (password.length < 6) {
                        invalidMess.push("@string.Format(Messages.E023, "パスワード")");
                        $('.label-password').addClass('label-validation-error');
                    }
                    // check max length of password
                    if (password.length > 32) {
                        invalidMess.push("@string.Format(Messages.E020, "パスワード", "32")");
                        $('.label-password').addClass('label-validation-error');
                    }

                    // check validate of password
                    if (!PMS.utility.validAcount(password)) {
                        invalidMess.push("@string.Format(Messages.E003, "パスワード")");
                        $('.label-password').addClass('label-validation-error');
                    }
                }
            }

            // check  role_id
            if ($('#USER_INFO_role_id option:selected').val().length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "権限")");
                $('.label-role-id').addClass('label-validation-error');
            }

            //check email1
            var email1 = $('#USER_INFO_mail_address_1').val();
            if (email1.length > 0) {

                // check max length of tel_no
                if (email1.length > 50) {
                    invalidMess.push("@string.Format(Messages.E020, "メールアドレス1", "50")");
                    $('.label-mail-address-1').addClass('label-validation-error');
                }

                // check numberic
                if (!PMS.utility.validEmail(email1)) {
                    invalidMess.push("@string.Format(Messages.E003, "メールアドレス1")");
                    $('.label-mail-address-1').addClass('label-validation-error');
                }
            }

            //check email2
            var email2 = $('#USER_INFO_mail_address_2').val();
            if (email2.length > 0) {

                // check max length of tel_no
                if (email2.length > 50) {
                    invalidMess.push("@string.Format(Messages.E020, "メールアドレス2", "50")");
                    $('.label-mail-address-2').addClass('label-validation-error');
                }

                // check numberic
                if (!PMS.utility.validEmail(email2)) {
                    invalidMess.push("@string.Format(Messages.E003, "メールアドレス2")");
                    $('.label-mail-address-2').addClass('label-validation-error');
                }
            }

            if (email1.length > 0 && email2.length > 0) {
                if (email1 === email2) {
                    invalidMess.push("@string.Format(Messages.E008, "メールアドレス", "メールアドレス")");
                    $('.label-mail-address-2').addClass('label-validation-error');
                }
            }

            // check max length of entry_date
            if ($('#USER_INFO_entry_date').val().length > 10) {
                invalidMess.push("@string.Format(Messages.E020, "入社年月日", "10")");
                $('.label-entry-date').addClass('label-validation-error');
            }

            // check max length of birth_date
            if ($('#USER_INFO_birth_date').val().length > 10) {
                invalidMess.push("@string.Format(Messages.E020, "生年月日", "10")");
                $('.label-birth-date').addClass('label-validation-error');
            }

            // check max length of retirement_date
            if ($('#USER_INFO_retirement_date').val().length > 10) {
                invalidMess.push("@string.Format(Messages.E020, "退職年月日", "10")");
                $('.label-retirement-date').addClass('label-validation-error');
            }

            // check valid date
            var entryDate = $('#USER_INFO_entry_date').val();
            var retirementDate = $('#USER_INFO_retirement_date').val();
            var birthDate = $('#USER_INFO_birth_date').val();

            var errEntryDate = PMS.utility.validDate(entryDate, DATE_FORMAT, "期間（入社年月日）");
            var errRetirementDate = PMS.utility.validDate(retirementDate, DATE_FORMAT, "期間（退職年月日）");
            var errBirthDate = PMS.utility.validDate(birthDate, DATE_FORMAT, "期間（生年月日）");
            var existInvalidDate = false;

            if (errEntryDate != null) {
                existInvalidDate = true;
                invalidMess.push(errEntryDate);
                $('.label-entry-date').addClass('label-validation-error');
            }

            if (errRetirementDate != null) {
                existInvalidDate = true;
                invalidMess.push(errRetirementDate);
                $('.label-retirement-date').addClass('label-validation-error');
            }

            if (errBirthDate != null) {
                invalidMess.push(errBirthDate);
                $('.label-birth-date').addClass('label-validation-error');
            }

            // compare date
            if (!existInvalidDate && entryDate.length != 0 && retirementDate.length != 0 &&
                !PMS.utility.compareDate($('#USER_INFO_entry_date').val(), $('#USER_INFO_retirement_date').val(), DATE_FORMAT)) {
                invalidMess.push('退職年月日は入社年月日より未来の日付を入力して下さい。');
                $('.label-retirement-date').addClass('label-validation-error');
            }

            var file = $('#file').val();
            // check max length of file
            if (file.length > 255) {
                invalidMess.push("@string.Format(Messages.E020, "プロフィール画像", "255")");
                $('.label-image-user').addClass('label-validation-error');
            }

            var fileExtension = ['jpeg', 'jpg', 'png'];
            var sFileExtension = file.split('.')[file.split('.').length - 1].toLowerCase();

            if (file.length > 0 && $.inArray(sFileExtension, fileExtension) == -1) {
                invalidMess.push("@string.Format(Messages.E010, "jpg,png.jpeg")");
                $('.label-image-user').addClass('label-validation-error');
            }

            var fileInput = document.getElementById('file');
            for (i = 0; i < fileInput.files.length; i++) {
                if (fileInput.files[i].size / 1024 > 500) {
                    invalidMess.push("@string.Format(Messages.E021, "500KB以内")");
                    $('.label-image-user').addClass('label-validation-error');
                    break;
                }
            }

            if (fileDrag !== null && typeof (fileDrag) !== 'undefined') {
                // check max length of file
                if (fileDrag.name.length > 255) {
                    invalidMess.push("@string.Format(Messages.E020, "プロフィール画像", "255")");
                    $('.label-image-user').addClass('label-validation-error');
                }

                var fileExtension = ['jpeg', 'jpg', 'png'];
                var sFileExtension = fileDrag.name.split('.')[fileDrag.name.split('.').length - 1].toLowerCase();

                if (fileDrag.length > 0 && $.inArray(sFileExtension, fileExtension) == -1) {
                    invalidMess.push("@string.Format(Messages.E010, "jpg,png.jpeg")");
                    $('.label-image-user').addClass('label-validation-error');
                }

                if (fileDrag.size / 1024 > 500) {
                    invalidMess.push("@string.Format(Messages.E021, "500KB以内")");
                    $('.label-image-user').addClass('label-validation-error');
                }
            }

            // check max length of remarks
            if ($('#USER_INFO_remarks').val().length > 200) {
                invalidMess.push("@string.Format(Messages.E020, "備考", "200")");
                $('.label-remarks').addClass('label-validation-error');
            }

            return invalidMess;
        }

        getAvatar('@Model.USER_INFO.user_sys_id');

        var displayImage = function (base64Data) {
            var img = "<img class='image_user thumb' id='image_user' "
                     + "src='" + "data:image/jpg;base64,"
                     + base64Data + "'/>";

            if ($('.box-img').length > 0) {
                $('.box-img').remove();
                $(".bootstrap-filestyle").before(img);
            } else {
                $("#image_user").after(img).remove();
            }

            if ($('input[id="USER_INFO_user_sys_id"]').val() === $('input[id="sessionUserId"]').val()) {
                var imgLogoProfile = "data:image/jpg;base64," + base64Data;

                if ($('#profile').length > 0) {
                    $('#profile').attr('src', imgLogoProfile);
                } else {
                    var logoProfile = '<img class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="500" aria-expanded="false" id="profile" src="' + "data:image/jpg;base64," + base64Data + '"/>';

                    $('div.navbar-custom-menu li.dropdown a.dropdown-toggle').remove();
                    $('div.navbar-custom-menu li.dropdown img').remove();
                    $('div.navbar-custom-menu li.dropdown ul.dropdown-menu').before(logoProfile);
                }
            }
        };

        function getAvatar(userId) {
            PMS.utility.getImageByAjax('/Common/GetImage', { id: userId, type: '@Constant.GetImage.USER_IMAGE' }, function (data) {
                if (data != null) {
                    displayImage(data.base64imgage);
                }
                else {
                    var img = '<div class="box-img">'
                    + '<img class="no_image_user" id="image_user" src="/Images/img_user.png">'
                    + '</div>';

                    if ($('.box-img').length !== 0) {
                        $('.box-img').remove();
                        $(".bootstrap-filestyle").before(img);
                    }
                    else {
                        $("#image_user").after(img).remove();
                    }
                    $('.clearImage').remove();

                    if ($('input[id="USER_INFO_user_sys_id"]').val() === $('input[id="sessionUserId"]').val()) {
                        var logoProfile = '<a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="500" aria-expanded="false">'
                                        + '<i class="btn-user"></i></a>';
                        $('div.navbar-custom-menu li.dropdown img').remove();
                        $('div.navbar-custom-menu li.dropdown a.dropdown-toggle').remove();
                        $('div.navbar-custom-menu li.dropdown ul.dropdown-menu').before(logoProfile);
                    }
                }
            });
        }
    });
    var Constant = {
        ERR_REQUIRED: 'は必須項目です。',
        ERR_FORMAT: 'の入力形式に誤りがあります。',
        ERR_STRING_LENGTH: '{0}は{1}文字以内で入力してください。',
        ERR_RANGE: '{0}は0～{1}の範囲で入力してください。',
        ERR_DUPLICATE_PROGRESS_REGIST_DATE: '同じ日付で進捗が登録されています。',
        PROGRESS: '進捗',
        PROGRESS_REGIST_DATE: '登録日',
        DATE_FORMAT: 'yyyy/mm/dd',
        MAX_PERCENT: '999,999,999',
        DIALOG_WARNING: "<i class='fa fa-warning'></i>",
        MAX_AREA_TEXT: 2000,
        ERR_STRING_LENGTH: '{0}は{1}文字以内で入力してください。'

    }

    // Event add a progress
    $(document).on('click', 'button.btnAddProgress', function () {
        var $contentElement = $(this).parent();
        var newRegistDate = $contentElement.find('.progress-regist-date').val();
        newRegistDate += "/01"; // add first of month
        var errRegistDate = PMS.utility.validDate(newRegistDate, Constant.DATE_FORMAT, Constant.PROGRESS_REGIST_DATE);

        if (newRegistDate.length == 0) {
            PMS.utility.showMessageDialog(Constant.DIALOG_WARNING, Constant.PROGRESS_REGIST_DATE + Constant.ERR_REQUIRED);
            return;
        }

        if (errRegistDate != null) {
            PMS.utility.showMessageDialog(Constant.DIALOG_WARNING, errRegistDate);
            return;
        }

        var isExist = false;
        $('.hdnApplyStartDate').each(function (index, element) {
            if ($(element).val() == newRegistDate) {
                isExist = true;
                return false;
            }
        })

        if (isExist) {
            PMS.utility.showMessageDialog(Constant.DIALOG_WARNING, Constant.ERR_DUPLICATE_PROGRESS_REGIST_DATE);
            return;
        }

        var newProgress = $contentElement.find('.progress-unit-cost').val();
        var newRemarks = $contentElement.find('.progress-remarks').val();

        var validateNewProgress = newProgress.replace(/,/g, '');
        if (validateNewProgress.length == 0) {
            PMS.utility.showMessageDialog(Constant.DIALOG_WARNING, Constant.PROGRESS + Constant.ERR_REQUIRED);
            return;
        } else {
            if (!PMS.utility.validPositiveNumeric(validateNewProgress)) {
                PMS.utility.showMessageDialog(Constant.DIALOG_WARNING, Constant.PROGRESS + Constant.ERR_FORMAT);
                return;
            }
            else if (parseInt(validateNewProgress) > 999999999) {
                PMS.utility.showMessageDialog(Constant.DIALOG_WARNING, Constant.ERR_RANGE.replace('{0}', Constant.PROGRESS).replace('{1}', Constant.MAX_PERCENT));
                return;
            }
        }

        if (newRemarks.length > Constant.MAX_AREA_TEXT) {
            PMS.utility.showMessageDialog(Constant.DIALOG_WARNING, Constant.ERR_STRING_LENGTH.replace('{0}', '備考').replace('{1}', Constant.MAX_AREA_TEXT));
            return;
        }

        var registDate = $.datepicker.formatDate('yy/mm/dd', new Date(newRegistDate));
        var html = '<tr class="new-data">'
            + ' <td>'
            + registDate 
            + ' <input class="hdnApplyStartDate" type="hidden" value="' + registDate + '">'
            + ' </td>'
            + ' <td style="text-align:right">'
            + ' <input class="hdnBaseUnitCost" type="hidden" value="' + validateNewProgress + '">'
            + ' <div class="readonly">'
            + ' <span class="baseUnitCostReadOnly">'
            + ' ' + newProgress + '円'
            + ' </span></div>'
            + ' <div class="editable" style="display: none;">'
            + ' <input type="text" class="right numeric money baseUnitCostEditable" maxlength="9">円'
            + ' </div>'
            + ' </td>'
            + ' <td class="short-progress-remarks">'
            + ' <input class="hdnProgressRemarks" type="hidden">'
            + ' <div class="text-overflow readonly"><span class="remarksReadOnly"></span></div>'
            + ' <input type="text" class="editable remarksEditable" style="display: none;">'
            + ' </td>'
            + ' <td class="td-remove">'
            + ' <label class="lbl-action btnEditProgress">編集</label> '
            + ' <input class="hdnIsNew" type="hidden" value="True"><label class="lbl-action btnDeleteProgress">削除</label>'
            + ' <label class="lbl-action btnFinish" style="display:none">決定</label>'
            + ' </td>'
            + ' </tr>';

        if ($('.progress-list .tb-detail tr').length == 0)
            $('.progress-list .tb-detail tbody').append(html);
        else {
            var isSmallest = true;

            $('.hdnApplyStartDate').each(function () {
                if (!PMS.utility.compareDate(registDate, $(this).val(), Constant.DATE_FORMAT)) {
                    $(this).parents('tr').before(html);
                    isSmallest = false;
                    return false;
                }
            });

            if (isSmallest) {
                $('.progress-list .tb-detail tr').last().after(html);
            }
        }

        var $target = $('.hdnApplyStartDate[value="' + registDate + '"]').parents('tr');
        $target.find('.hdnProgressRemarks').val(newRemarks);
        $target.find('.remarksReadOnly').text(newRemarks).attr('title', newRemarks);

        $('.progress-latest label').first().text($('.hdnApplyStartDate').first().val());
        $('.progress-latest label').last().text($('.hdnBaseUnitCost').first().val() + '%');

        resetArrProgress();

        $contentElement.find('input').val('').attr('value', '');
        //$('#hdnUserChangeValue').val(true);
    });

    // Event delete a progress
    $(document).off('.btnDeleteProgress');
    $(document).on('click', '.btnDeleteProgress', function () {
        var $parent = $(this).parents('tr');
        if ($parent.hasClass('new-data')) {
            $parent.remove();
        } else {
            $(this).siblings('.hdnIsDelete').val(true);
            $parent.addClass('deleted').hide();
        }

        var registDateText = '';
        var progressPercentText = '';

        if ($(".progress-list .tb-detail tr:not(.deleted)").length > 0) {
            var $firstElement = $(".progress-list .tb-detail tr:not(.deleted)").first();
            registDateText = $firstElement.find(".hdnApplyStartDate").val();
            progressPercentText = $firstElement.find(".hdnBaseUnitCost").val() + '%';
        }

        $('.progress-latest label').first().text(registDateText);
        $('.progress-latest label').last().text(progressPercentText);

        resetArrProgress();
    });

    // Reset index of element in subcontractor array
    function resetArrProgress() {

        $progressContentArr = $('.progress-list .tb-detail tr');

        for (var i = 0; i < $progressContentArr.length; i++) {
            var progressContent = $progressContentArr[i];
            var applyStartDate = 'USER_INFO.unit_price_history[' + i + '].apply_start_date';
            var baseUnitCost = 'USER_INFO.unit_price_history[' + i + '].base_unit_cost';
            var isDelete = 'USER_INFO.unit_price_history[' + i + '].isDelete';
            var isUpdate = 'USER_INFO.unit_price_history[' + i + '].isUpdate';
            var isNew = 'USER_INFO.unit_price_history[' + i + '].isNew';
            var remarks = 'USER_INFO.unit_price_history[' + i + '].remarks';

            $(progressContent).find('.hdnApplyStartDate').attr('name', applyStartDate);
            $(progressContent).find('.hdnBaseUnitCost').attr('name', baseUnitCost);
            $(progressContent).find('.hdnProgressRemarks').attr('name', remarks);
            $(progressContent).find('.hdnIsDelete').attr('name', isDelete);
            $(progressContent).find('.hdnIsUpdate').attr('name', isUpdate);
            $(progressContent).find('.hdnIsNew').attr('name', isNew);
        }
    }

    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        $.ajax({
            type: "POST",
            url: '/Common/SetButtonBackSession',
            dataType: 'json',
            data: null,
            success: function () {
                window.location.href = "/PMS01002";
            },
            error: function (error) {
            }
        });
    });

    $(document).off('.btnEditProgress');
    $(document).on('click', '.btnEditProgress', function () {
        $row = $(this).closest('tr');
        //load data
        $baseUnitCost = $row.find('.baseUnitCostReadOnly').text().replace('円','');
        $baseUnitCostTextBox = $row.find('.baseUnitCostEditable');
        $baseUnitCostTextBox.val($baseUnitCost);
        $remarks = $row.find('.remarksReadOnly').text();
        $remarksTextBox = $row.find('.remarksEditable');
        $remarksTextBox.val($remarks);
        //show,hide control
        $row.find('.editable').show();
        $row.find('.readonly').hide();
        $row.find('.btnEditProgress').hide();
        $row.find('.btnDeleteProgress').hide();
        $row.find('.btnFinish').show();
    });

    $(document).off('.btnFinish');
    $(document).on('click', '.btnFinish', function () {
        //save data
        $row = $(this).closest('tr');
        $baseUnitCost = $row.find('.baseUnitCostEditable').val();
        $baseUnitCostSpan = $row.find('.baseUnitCostReadOnly');
        $baseUnitCostSpan.text($baseUnitCost + "円");
        $baseUnitCostHdn = $row.find('.hdnBaseUnitCost');
        $baseUnitCostHdn.val($baseUnitCost.replace(/,/g, ''));
        $remarks = $row.find('.remarksEditable').val();
        $remarksSpan = $row.find('.remarksReadOnly');
        $remarksSpan.text($remarks).attr('title', $remarks);
        $remarksHdn = $row.find('.hdnProgressRemarks');
        $remarksHdn.val($remarks);
        //show,hide control
        $row.find('.editable').hide();
        $row.find('.readonly').show();
        $row.find('.btnEditProgress').show();
        $row.find('.btnDeleteProgress').show();
        $row.find('.btnFinish').hide();
        $(this).siblings('.hdnIsUpdate').val(true);
        resetArrProgress();
    });
</script>

@Scripts.Render("~/bundles/bootstrap-filestyle")