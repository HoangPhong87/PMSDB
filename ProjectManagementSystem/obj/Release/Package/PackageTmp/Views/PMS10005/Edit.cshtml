@model ProjectManagementSystem.ViewModels.PMS10005.PMS10005EditViewModel
@using ModelState = System.Web.WebPages.Html.ModelState
@using ProjectManagementSystem.Common;
@using ProjectManagementSystem.Resources;

@{
    ViewBag.Title = "諸経費登録";
}

<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
</section>

<div class="content content-edit tag-regist">
    @using (Html.BeginForm("EditOverHeadCost", "PMS10005", FormMethod.Post, new { @class = "form-horizontal", id = "frmOverHeadCostEdit" }))
    {
        <div id="title"></div>
        @Html.ValidationSummary(false)
        <div class="form-group group-overhead-cost-type">
            <label class="col-sm-2 control-label bold label-tag-name">諸経費種別<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @if (Model.OVERHEAD_COST.overhead_cost_id <= 0)
                {
                    @Html.TextBoxFor(m => m.OVERHEAD_COST.overhead_cost_type, new { @class = "form-control", maxlength = 100 })
                }
                else
                {
                    <label class="longtext overhead-cost-type-upate" title="@Model.OVERHEAD_COST.overhead_cost_type">@Model.OVERHEAD_COST.overhead_cost_type</label>
                }
            </div>
        </div>

        <div class="form-group group-remarks">
            <label class="col-sm-2 control-label bold">備考</label>
            <div class="col-sm-4">
                @if (Model.OVERHEAD_COST.overhead_cost_id <= 0)
                {
                    @Html.TextAreaFor(m => m.OVERHEAD_COST.remarks, new { @class = "form-control candy-textArea", maxlength = 200, rows = 5 })
                    <input type="hidden" class="set-max-width" />
                }
                else
                {
                    <label class="overhead-cost-remark-upate">@Model.OVERHEAD_COST.remarks</label>
                }
            </div>
        </div>

        <div id="updateTime">
            <div class="form-group">
                <label class="col-sm-2 control-label bold" for="OVERHEAD_COST_user_regist">登録日時</label>
                <div class="col-sm-4">

                    <label class="control-label" id="insDate">
                        @{
        string ins_date = !string.IsNullOrEmpty(@Model.OVERHEAD_COST.ins_date.ToString()) ? Model.OVERHEAD_COST.ins_date.Value.ToString("yyyy/MM/dd HH:mm") : "";
                        }
                        @ins_date
                    </label>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold" for="CUSTOMERTAG_INFO_user_regist">登録者</label>
                <div class="col-sm-10">
                    <label class="control-label" id="insUser">@Model.OVERHEAD_COST.user_regist</label>
                </div>
            </div>
        </div>

        <div class="form-group btn-group-edit">
            <div class="col-sm-4">
                @Html.HiddenFor(m => m.OVERHEAD_COST.overhead_cost_id)
                @Html.AntiForgeryToken()
                <button type="button" id="btnBack" name="Back" class="btn light btnNoStyleDisable"><i class="btn-icon btn-back"></i>戻る</button>
                @if (Model.OVERHEAD_COST.overhead_cost_id <= 0)
                {
                    <button type="button" id="btnSubmit" class="btn green"><i class="btn-icon btn-regist"></i> 登録</button>
                }
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    
    $(function () {
        $(".content-wrapper").addClass("content-edit-wrapper");
        PMS.utility.focusTextbox();
        PMS.utility.imeControl($("#OVERHEAD_COST_overhead_cost_type"), 'active');
        PMS.utility.imeControl($("#OVERHEAD_COST_remarks"), 'active');

        if ($('#OVERHEAD_COST_overhead_cost_id').val() === '0') {
            $('#updateTime').hide();
        }

        $(document).on('click', 'button#btnSubmit', function () {
            PMS.utility.removeValidationError();
            var invalidMess = validateData();
            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess);
                return false;
            }
            PMS.utility.IsAuthenticateTimeout('@string.Format(Messages.I006)', '#frmOverHeadCostEdit');
        });

        $("#frmOverHeadCostEdit").submit(function (e) {
            var formData = new FormData(this);

            $.ajax({
                url: $(this).attr("action"),
                type: 'POST',
                data: formData,
                mimeType: "multipart/form-data",
                contentType: false,
                cache: false,
                processData: false,
                success: function (response) {
                    var data = JSON.parse(response);

                    BootstrapDialog.closeAll();

                    if (data.statusCode == 201) { // update success
                        $("#frmOverHeadCostEdit").hide();

                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), data.message, null, null, function () {
                            $('#OVERHEAD_COST_overhead_cost_id').val(data.overhead_cost_id);
                            $('div.group-overhead-cost-type div.col-sm-4').empty().append('<label class="longtext overhead-cost-type-upate" title="' + PMS.utility.htmlEncodeByReplace(data.overhead_cost_type) + '">' + PMS.utility.htmlEncode(data.overhead_cost_type) + '</label>');
                            $('div.group-remarks div.col-sm-4').empty().append('<label class="overhead-cost-remark-upate">' + PMS.utility.htmlEncode(data.remarks) + '</label>');

                            if (data.insDate != null && data.insDate.length > 0) {
                                $('#insDate').text(data.insDate);
                            }
                            if (data.insUser != null && data.insUser.length > 0) {
                                $('#insUser').text(data.insUser);
                            }
                            $('#btnSubmit').remove();
                            $('#updateTime, #frmOverHeadCostEdit').show();
                        });
                    }

                    if (data.statusCode == 500) { // Exception
                        $("#frmOverHeadCostEdit").hide();

                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), data.message, '/PMS10005');
                    }

                    if (typeof (data.ErrorMessages) !== 'undefined') // invalid data
                        PMS.utility.showClientError(data.ErrorMessages);
                },
                error: function (error) {
                    if (error.status == 419) { //419: Authentication Timeout
                        window.location.href = '/PMS01001/Login/timeout';
                    } else if (error.status == 420) { // out of date license
                        window.location.href = '/ErrorOutOfDate';
                    }
                    else {
                        window.location.href = '/Error';
                    }
                }
            });

            e.preventDefault(); // prevent Default action
        });

        function validateData() {
            var invalidMess = [];

            // check max length of customer_name
            if ($('#OVERHEAD_COST_overhead_cost_type').val().length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "諸経費種別")");
                $('.label-display-name').addClass('label-validation-error');
            }

            if ($('#OVERHEAD_COST_overhead_cost_type').val().length > 100) {
                invalidMess.push("@string.Format(Messages.E020, "諸経費種別", "100")");
                $('.label-display-name').addClass('label-validation-error');
            }

            // check max length of tag remarks
            if ($('#OVERHEAD_COST_remarks').val().length > 200) {
                invalidMess.push("@string.Format(Messages.E020, "備考", "200")");
                $('.label-remarks').addClass('label-validation-error');
            }

            return invalidMess;
        }
    });

    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        $.ajax({
            type: "POST",
            url: '/Common/SetButtonBackSession',
            dataType: 'json',
            data: null,
            success: function () {
                window.location.href = "/PMS10005";
            },
            error: function (error) {
            }
        });
    });
</script>