@model ProjectManagementSystem.ViewModels.PMS10001.PMS10001EditViewModel
@using ModelState = System.Web.WebPages.Html.ModelState
@using ProjectManagementSystem.Common;
@using ProjectManagementSystem.Resources;

@{
    ViewBag.Title = "タグ登録";
}

<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
</section>

<div class="content content-edit tag-regist">
    @using (Html.BeginForm("EditTag", "PMS10001", FormMethod.Post, new { @class = "form-horizontal", id = "frmTagEdit" }))
    {
        <div id="title"></div>
        @Html.ValidationSummary(false)
        <div class="form-group">
            <label class="col-sm-2 control-label bold label-display-name">取引先名<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.HiddenFor(m => m.CUSTOMERTAG_INFO.customer_id, new { @class = "customer-id" })
                @Html.TextBoxFor(m => m.CUSTOMERTAG_INFO.display_name, new { @class = "value-selected search_customer customer-name", @readonly = "readonly", size = 36, maxlength = 50, title = Model.CUSTOMERTAG_INFO.display_name })
                <button type="button" id="btnSearchCustomer" class="btn light"><i class="btn-icon btn-search-dialog"></i></button>

            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold label-tag-name">タグ名<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMERTAG_INFO.tag_name, new { @class = "form-control", maxlength = 50 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">表示順</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMERTAG_INFO.display_order, new { @class = "form-control right numeric display-order", maxlength = 2 })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label bold">備考</label>
            <div class="col-sm-4">
                @Html.TextAreaFor(m => m.CUSTOMERTAG_INFO.remarks, new { @class = "form-control candy-textArea", maxlength = 200, rows = 5 })
                <input type="hidden" class="set-max-width" />
            </div>
        </div>

        <div id="updateTime">
            <div class="form-group">
                @Html.LabelFor(m => m.CUSTOMERTAG_INFO.ins_date, new { @class = "col-sm-2 control-label bold" })
                <div class="col-sm-4">

                    <label class="control-label" id="insDate">
                        @{ string ins_date = !string.IsNullOrEmpty(@Model.CUSTOMERTAG_INFO.ins_date.ToString()) ? Model.CUSTOMERTAG_INFO.ins_date.ToString("yyyy/MM/dd HH:mm") : ""; }
                        @ins_date
                    </label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CUSTOMERTAG_INFO.user_regist, new { @class = "col-sm-2 control-label bold" })
                <div class="col-sm-10">
                    <label class="control-label" id="insUser">@Model.CUSTOMERTAG_INFO.user_regist</label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CUSTOMERTAG_INFO.upd_date, new { @class = "col-sm-2 control-label bold" })
                <div class="col-sm-4">
                    <label class="control-label" id="updDate">
                        @{ string upd_date = !string.IsNullOrEmpty(@Model.CUSTOMERTAG_INFO.upd_date.ToString()) ? Model.CUSTOMERTAG_INFO.upd_date.ToString("yyyy/MM/dd HH:mm") : "";}
                        @upd_date
                    </label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CUSTOMERTAG_INFO.user_update, new { @class = "col-sm-2 control-label bold" })
                <div class="col-sm-10">
                    <label class="control-label" id="updUser">@Model.CUSTOMERTAG_INFO.user_update</label>
                </div>
            </div>
        </div>

        <div class="form-group btn-group-edit">
            <div class="col-sm-4">
                @Html.HiddenFor(m => m.CUSTOMERTAG_INFO.tag_id)
                @Html.AntiForgeryToken()
                <button type="button" id="btnBack" name="Back" class="btn light btnNoStyleDisable"><i class="btn-icon btn-back"></i>戻る</button>
                <button type="button" id="btnSubmit" class="btn green"><i class="btn-icon btn-regist"></i> 登録</button>

                <label class="bold" id="deleteFlag">
                    @Html.CheckBoxFor(m => m.Delete, new { @class = "" })
                    削除
                </label>

            </div>
        </div>
    }
</div>

<script type="text/javascript">
    var maxWidth =$(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2); // set max-width of textarea
    $(document).ready(function () {
        // get max-width of textarea when resize manu bar left
        window.addEventListener('resize', function (event) {
            maxWidth = $(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2);
            //handle change textare when resize menu bar left
            if ($('body').hasClass('sidebar-collapse') === true) {
                // case close when page first load
                $(".candy-textArea").css("max-width",(parseInt(maxWidth,10) + 115)+ "px");
            }
            else{
                $(".candy-textArea").css("max-width",parseInt(maxWidth,10)+ "px");
            }
        });
        //end get max-width of textarea when resize manu bar left
    });

    $(function () {

        //handle change textare when resize menu bar left
        if ($('body').hasClass('sidebar-collapse') === true) {
            // case close when page first load
            $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
        }
        $(document).off('a.sidebar-toggle i');
        $(document).on('click', 'a.sidebar-toggle i', function () {
            if ($('body').hasClass('sidebar-collapse') === true) {
                // close
                $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
            } else {
                // open
                $(".candy-textArea").css("max-width", (parseInt($(".candy-textArea").css("max-width").slice(0, $(".candy-textArea").css("max-width").length - 2), 10) - 115) + "px");
            }
        });
        //end handle change textare when resize menu bar left

        $(".content-wrapper").addClass("content-edit-wrapper");
        PMS.utility.focusTextbox();
        PMS.utility.imeControl($("#CUSTOMERTAG_INFO_tag_name"), 'active');
        PMS.utility.imeControl($("#CUSTOMERTAG_INFO_remarks"), 'active');

        if ($('#CUSTOMERTAG_INFO_tag_id').val() === '0') {
            $('#updateTime, #deleteFlag').hide();
        }

        $(document).on('click', 'button#btnSubmit', function () {
            PMS.utility.removeValidationError();
            var invalidMess = validateData();
            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess);
                return false;
            }
            PMS.utility.IsAuthenticateTimeout('@string.Format(Messages.I006)', '#frmTagEdit');
        });

        $("#frmTagEdit").submit(function (e) {
            var formData = new FormData(this);

            $.ajax({
                url: $(this).attr("action"),
                type: 'POST',
                data: formData,
                mimeType: "multipart/form-data",
                contentType: false,
                cache: false,
                processData: false,
                success: function (response) {
                    var data = JSON.parse(response);

                    BootstrapDialog.closeAll();

                    if (data.statusCode == 201) { // update success
                        $("#frmTagEdit").hide();

                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), data.message, null, null, function () {
                            $('#CUSTOMERTAG_INFO_tag_id').val(data.id);
                            if (data.insDate != null && data.insDate.length > 0) {
                                $('#insDate').text(data.insDate);
                            }
                            if (data.insUser != null && data.insUser.length > 0) {
                                $('#insUser').text(data.insUser);
                            }

                            if ($('.display-order').val().length == 0) {
                                $('.display-order').val('0');
                            }

                            $('#updDate').text(data.updDate);
                            $('#updUser').text(data.updUser);
                            $("#Delete").prop('checked', data.deleted);
                            $('#updateTime, #deleteFlag, #frmTagEdit').show();
                        });
                    }

                    if (data.statusCode == 500) { // Exception
                        $("#frmTagEdit").hide();

                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), data.message, '/PMS10001');
                    }

                    if (typeof (data.ErrorMessages) !== 'undefined') // invalid data
                        PMS.utility.showClientError(data.ErrorMessages);
                },
                error: function (error) {
                    if (error.status == 419) //419: Authentication Timeout
                        window.location.href = '/PMS01001/Login/timeout';
                }
            });

            e.preventDefault(); // prevent Default action
        });

        function validateData() {
            var invalidMess = [];

            // check max length of customer_name
            if ($('#CUSTOMERTAG_INFO_display_name').val().length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "取引先名")");
                $('.label-display-name').addClass('label-validation-error');
            }

            if ($('#CUSTOMERTAG_INFO_tag_name').val().length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "タグ名")");
                $('.label-tag-name').addClass('label-validation-error');
            }

            // check max length of tag name
            if ($('#CUSTOMERTAG_INFO_tag_name').val().length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "タグ名", "50")");
                $('.label-tag-name').addClass('label-validation-error');
            }

            // check max length of tag remarks
            if ($('#CUSTOMERTAG_INFO_remarks').val().length > 200) {
                invalidMess.push("@string.Format(Messages.E020, "備考", "200")");
                $('.label-remarks').addClass('label-validation-error');
            }

            return invalidMess;
        }
    });

    // Event click search customer
    $(document).on('click', 'button#btnSearchCustomer', function () {
        $.ajax({
            type: "GET",
            url: '/Common/CheckTimeOut',
            dataType: 'json',
            async: false,
            cache: false,
            success: function (result) {
                // Check data sales_payment if tag_id is aready used
                var param = {
                    customer_id: $('.customer-id').val(),
                    tag_id: $('#CUSTOMERTAG_INFO_tag_id').val()
                }
                var data = PMS.utility.getDataByAjax('/PMS10001/CheckUsedTag', param);
                if (data == "Existed") {
                    PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), '@Messages.I014');
                    return;
                }

                $(this).blur();

                // Open search customer dialog
                var url = '@Url.Action("Select", "PMS02001", new { callback = "setCustomer" })';
                url += '&TB_iframe=true&modal=true&height=600&width=1100';

                $('body').css('overflow', 'hidden');
                tb_show(null, url, false);
            },
            error: function (error) {
                if (error.status == 419) { //419: Authentication Timeout
                    window.location.href = '/PMS01001/Login/timeout';
                } else if (error.status == 420) { // out of date license
                    window.location.href = '/ErrorOutOfDate';
                }
                else {
                    window.location.href = '/Error';
                }
            }
        });
    });

    // Set Customer
    function setCustomer(res) {
        if (typeof (res) === 'undefined' || res === null) {
            $('#CUSTOMERTAG_INFO_display_name').focus();
        } else {
            if ($('.customer-id').val() == res[0].CUSTOMER_ID) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), '既に選択されている取引先です。');
                return;
            }
            $('.customer-id').val(res[0].CUSTOMER_ID);
            $('.customer-name').val(PMS.utility.htmlDecode(res[0].CUSTOMER_NAME)).attr('title', PMS.utility.htmlDecode(res[0].CUSTOMER_NAME));
        }
    }

    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        $.ajax({
            type: "POST",
            url: '/Common/SetButtonBackSession',
            dataType: 'json',
            data: null,
            success: function () {
                window.location.href = "/PMS10001";
            },
            error: function (error) {
            }
        });
    });
</script>