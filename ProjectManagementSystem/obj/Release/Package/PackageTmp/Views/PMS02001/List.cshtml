@model ProjectManagementSystem.ViewModels.PMS02001.PMS02001ListViewModel
@using ProjectManagementSystem.Common
@using ProjectManagementSystem.Resources;

@{
    ViewBag.Title = "取引先一覧";
    var currentUser = HttpContext.Current.Session[Constant.SESSION_LOGIN_USER] as LoginUser;
}

@Scripts.Render("~/bundles/dragOn")

<section class="content-header customer-list-header">
    <div class="title">
        <h1>
            @ViewBag.Title
        </h1>
        @if (currentUser != null && currentUser.PlanFunctionList.Contains(Constant.FunctionID.CustomerRegist) && currentUser.FunctionList.Contains(Constant.FunctionID.CustomerRegist))
        {
        <button id="btnCreateNew" class="btn dark btnNew"><i class="btn-icon btn-add"></i>新規作成</button>
        <input type="hidden" id="roleEdit" value="true" />
        }
    </div>
    <div class="search-form">
        <div class="search-condition">
            <div class="row">
                <label class="width-120">取引先名</label>
                @Html.TextBoxFor(m => m.Condition.DISPLAY_NAME, new { style = "ime-mode: auto;", maxlength = 50 })

                <label class="width-120">取引先名（カナ）</label>
                @Html.TextBox(m => m.Condition.CUSTOMER_NAME_KATA, new { style = "ime-mode: auto;", maxlength = 50 })

                @if (currentUser != null && currentUser.PlanFunctionList.Contains(Constant.FunctionID.CustomerList_Admin) && currentUser.FunctionList.Contains(Constant.FunctionID.CustomerList_Admin))
                {
                    <label class="width-120">
                        @Html.CheckBoxFor(m => m.Condition.DELETED_INCLUDE, new { @class = "condition_chkbox" })
                        削除済を含む
                    </label>
                }
                else
                {
                    @Html.CheckBoxFor(m => m.Condition.DELETED_INCLUDE, new { @class = "condition_chkbox", @style = "visibility:hidden;" })
                }
            </div>
        </div>

        <div class="right search-action">
            <button type="button" id="btnSearch" name="btnSearch" class="btn dark"><i class="btn-icon btn-search"></i>検索</button>
            <button type="button" id="btnClear" name="btnClear" class="btn light"><i class="btn-icon btn-clear"></i>クリア</button>
        </div>
    </div>
</section>

@RenderPage("~/Views/Shared/ShowHideHeaderContent.cshtml")

<div class="data-list content customer-list special-list clearfix" style="visibility:hidden">
    <div class="div-left">
        <table class="dataTable tb-left" width="100%">
            <thead>
                <tr>
                    <th class="sorting_disabled cell_center">No.</th>
                    <th class="display_name sorting cell_left" tabindex="0">取引先名</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div class="div-right">
        <table id="InfoTable" class="tb-right tbl-customer-list scrollalble" width="100%">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>No.</th>
                    <th>取引先名</th>
                    <th>取引先名（カナ）</th>
                    <th>住所</th>
                    <th>URL</th>
                    <th>更新日時</th>
                    <th>更新者</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<div class="customer-list-footer search-date clearfix">
    <button id="btnExport" type="button" class="btn dark pull-left"><i class="btn-icon btn-output-csv"></i>CSV出力</button>

    <button id="btnImport" type="button" class="btn dark pull-left"><i class="btn-icon btn-input-csv"></i>CSV取込</button>

    <input type="file" id="fileCustomerCsvImport" name="fileCustomerCsvImport" accept=".csv" />

    <form id="formAction" class="frmExport" method="POST">
        <input type="hidden" name="id" value="1">
        <input id="search_displayName" name="search_displayName" type="hidden">
        <input id="search_customerNameKata" name="search_customerNameKata" type="hidden">
        <input id="search_deleteFlag" name="search_deleteFlag" type="hidden" value="false">
        @Html.Hidden("hdnOrderBy")
        @Html.Hidden("hdnOrderType")
        <input id="tabId" name="TAB_ID" type="hidden" />
    </form>

    <form id="frmImportCustomerCsv" method="POST"></form>
</div>
<input type="hidden" id="table_order_columns" value="" />

<script type="text/javascript" charset="utf-8">
    var sort_colum = 0;
    var sort_type = 'asc';
    var th_name = "";

    if (sort_colum == 2) {
        th_name = "取引先名";
    } else  if (sort_colum > 2) {
        $('table.tb-left').find('th').each(function ($index) {
            if ($index == sort_colum) {
                th_name = $(this).text();
                return false;
            }
        });
    }

    $(function () {
        var uniqueId = "@Guid.NewGuid().ToString()";
        $("#tabId").val(uniqueId);
        SetEventBeforeUnload();
        LoadOldValueOfControls();
        PMS.utility.imeControl($("#Condition_DISPLAY_NAME"), 'active');
        PMS.utility.imeControl($("#Condition_CUSTOMER_NAME_KATA"), 'active');
        $('.div-right').dragOn({ easing: false, exclusion: { th: '', id: '.dataTables_length, .dataTables_info, .dataTables_paginate' } });

        var oSorting = {
            "bSort": true
        };
        var oPaginate = {
            "bPaginate": true,
            "iDisplayLength": parseInt(@App[ConfigurationKeys.LIST_ITEMS_PER_PAGE]),
            "bStateSave": false
        };
        var oServerSide = {
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("Search", "PMS02001")',
            "fnBeforeSend": beforeSend,
            "fnServerParams": serverParams,
            "fnDrawCallback": displayComplete,
            "fnInitComplete": bindData
        };
        var aoColumnDefs = [
            { "sName": "upd_date", "bVisible": false, "aTargets": [0], "sWidth": "0" },
            { "sName": "upd_date", "bSortable": false, "bVisible": false, "aTargets": [1], "sWidth": "0%", "sClass": "cell_center" },
            { "sName": "display_name", "bVisible": false, "aTargets": [2], "sWidth": "0%", "sClass": "cell_left" },
            { "sName": "customer_name_kana", "aTargets": [3], "sWidth": "20%", "sClass": "customer_name_kana cell_left", "mRender": function (data, type, full) { return buildShorttext(PMS.utility.nvl(data, ''), full[8]); } },
            { "sName": "address", "aTargets": [4], "sWidth": "25%", "sClass": "address cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data); } },
            { "sName": "url", "aTargets": [5], "sWidth": "25%", "sClass": "url cell_left", "mRender": function (data, type, full) { return '<div data-overflow="no-dragon" class="text-overflow short-text url"><a href="' + (data.search(/^http[s]?\:\/\//) ? ('http://' + data) : data) + '" target="_blank">' + data + '</a></div>'; } },
            { "sName": "upd_date", "aTargets": [6], "sWidth": "15%", "sClass": "upd_date cell_center" },
            { "sName": "user_update", "aTargets": [7], "sWidth": "15%", "sClass": "user_update cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data, 'user-upd'); } }
        ];

        var dataTable = CreateDataTable('#InfoTable', oSorting, oPaginate, oServerSide, aoColumnDefs);

        function beforeSend() {
        }

        function serverParams(aoData) {
            var orderBy = 'customer_id';
            var orderType = 'asc';

            $('table.dataTable tr th').each(function () {
                if ($(this).hasClass('sorting_asc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'ASC';
                } else if ($(this).hasClass('sorting_desc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'DESC';
                }
            });
            $('#hdnOrderBy').val(orderBy);
            $('#hdnOrderType').val(orderType);

            aoData.push(
                { "name": "DISPLAY_NAME", "value": $("#search_displayName").val() },
                { "name": "CUSTOMER_NAME_KATA", "value": $("#search_customerNameKata").val() },
                { "name": "DELETED_INCLUDE", "value": $("#search_deleteFlag").val() },
                { "name": "orderBy", "value": $('#hdnOrderBy').val() },
                { "name": "orderType", "value": $('#hdnOrderType').val() },
                { "name": "TAB_ID", "value": $("#tabId").val() }
            );
            if (typeof (colReorder) !== 'undefined') {
                $("#table_order_columns").val(colReorder.fnOrder());
                colReorder.fnReset();
            }
        }

        function bindData(data) {

            // process status disabled  buttton exportCSV when search data
            if (data.aaData.length == 0) {
                $('#btnExport').addClass('disabled').attr('disabled', 'disabled');
            }
            else {
                $('#btnExport').removeClass('disabled').removeAttr('disabled');
            }

            var htmlLeft = '';

            if (data.aaData.length > 0) {
                for (var i = 0; i < data.aaData.length; i++) {
                    var trClass = 'even';

                    if (i % 2 == 0)
                        trClass = 'odd';

                    if (data.aaData[i][19] == '1')
                        trClass = 'delete-row';

                    htmlLeft += '<tr role="row" class="' + trClass + '">'
                        + ' <td class=" cell_center bold no">'+data.aaData[i][1]+'</td>'
                        + ' <td class="cell_left customer-name"> '
                        + buildEditLink(data.aaData[i][0], data.aaData[i][2], data.aaData[i][8])
                        + ' </td> <tr>';
                }
            } else {
                htmlLeft += '<tr role="row" class="odd">'
                    + ' <td colspan="2" class="dataTables_empty">該当データはありません。</td>'
                    + ' <tr>';
            }

            $('table.tb-left tbody').empty().append(htmlLeft);
        }

        function displayComplete() {
            if (sort_colum > 2) {
                $('table.tb-left th.display_name').removeClass('sorting_asc sorting_desc').addClass('sorting').removeAttr('aria-sort');
                $('table.tb-right th').removeClass('sorting_asc sorting_desc').addClass('sorting').removeAttr('aria-sort');
                $('table.tb-right').find('th').each(function ($index) {
                    if ($(this).text() == th_name) {
                        $(this).removeClass('sorting sorting_asc sorting_desc').addClass('sorting_' + sort_type);
                        return false;
                    }
                });
            } else if (sort_colum == 2) {
                $('table.tb-right th').removeClass('sorting_asc sorting_desc').addClass('sorting').removeAttr('aria-sort');
                $('table.tb-left th.display_name').removeClass('sorting sorting_asc sorting_desc').addClass('sorting_' + sort_type);
            }

            $('table td div.1').each(function () {
                $(this).parents('tr').removeClass().addClass('delete-row');
            });

            if ($('.tbl-customer-list td.dataTables_empty').length > 0)
                $('.tbl-customer-list td.dataTables_empty').text('');

            $('div.customer-list').removeAttr('style');
            $("#onloadDiv").hide();
            $('.pace.pace-active').addClass('pace-inactive').removeClass('pace-active');
            $('#btnSearch').removeAttr('disabled');
            custom_order('#InfoTable', 0, 0);
        }

        function buildEditLink(id, data, deleted) {
            var html = PMS.utility.buildColumShortText(data, deleted);

            if (PMS.utility.checkPermission('#roleEdit'))
                html = '<div class="short-text text-overflow '+ deleted +'">'
                   + ' <a href="#" class="edit-link" aria-valuetext="'+ id +'" title="'+ data +'">'+ data +'</a>'
                   + ' </div>';

            return html;
        }

        function buildShorttext(data, deleted) {
            var html = '<div data-overflow="no-dragon" class="short-text text-overflow ' + deleted + '" title="' + data + '">' + data + '</div>';

            return html;
        }

        $(document).off('table.tb-left th.display_name');
        $(document).on('click', 'table.tb-left th.display_name', function () {
            $(this).blur();
            sort_colum = 2;
            sort_type = $(this).hasClass('sorting_asc') ? 'desc' : 'asc';

            dataTable.fnPageChange('first');
            th_name = $(this).text();
        });


        $(document).off('table.tb-right th');
        $(document).on('click', 'table.tb-right th', function () {
            sort_colum = $(this).index() + 3;
            sort_type = $(this).hasClass('sorting_asc') ? 'desc' : 'asc';

            th_name = $(this).text();
            dataTable.fnPageChange('first');
        });

        function saveDataCondition() {
            $("#search_displayName").val($("#Condition_DISPLAY_NAME").val());
            $("#search_customerNameKata").val($("#Condition_CUSTOMER_NAME_KATA").val());
            $("#search_deleteFlag").val($("#Condition_DELETED_INCLUDE").prop('checked'));
        }

        $("button#btnSearch").click(function () {
            searchCustomer();
        });

        $(document).bind('keypress', function ( e ) {
            var code = e.keyCode || e.which;
            if (code == 13) { //Enter keycode
                searchCustomer();
            }
        });

        function searchCustomer(){
            $('.validation-summary-errors').remove();

            var invalidMess = [];
            // check valid
            var displayName = $('#Condition_DISPLAY_NAME').val();
            var customerNameKata = $('#Condition_CUSTOMER_NAME_KATA').val();

            if (displayName.length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "取引先名", "50")");
            }
            if (customerNameKata.length > 50) {
                invalidMess.push("@string.Format(Messages.E020, "取引先名（カナ）", "50")");
            }

            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess, '.title');
                return false;
            }

            $("#search_displayName").val($("#Condition_DISPLAY_NAME").val());
            $("#search_customerNameKata").val($("#Condition_CUSTOMER_NAME_KATA").val());
            $("#search_deleteFlag").val($("#Condition_DELETED_INCLUDE").prop('checked'));

            $('.pace.pace-inactive').removeClass('pace-inactive').addClass('pace-active');
            $("#onloadDiv").show(function () {
                dataTable.fnPageChange('first');
            });
            $('#btnSearch').attr('disabled', 'disabled');
        }

        $("button#btnClear").click(function () {
            $("#Condition_DISPLAY_NAME").val("");
            $("#Condition_CUSTOMER_NAME_KATA").val("");
            $("#Condition_DELETED_INCLUDE").prop('checked', false);
            PMS.utility.ClearRestoreData("PMS02001");
        });

        $('button#btnExport').click(function () {
            var orderBy = 'customer_id';
            var orderType = 'asc';

            $('table.dataTable tr th').each(function () {
                if ($(this).hasClass('sorting_asc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'ASC';
                } else if ($(this).hasClass('sorting_desc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'DESC';
                }
            });
            $('#hdnOrderBy').val(orderBy);
            $('#hdnOrderType').val(orderType);

            $("#formAction").attr("action", "/PMS02001/ExportCsvListCustomer");
            $("#formAction").submit();
        });

        $('button#btnCreateNew').click(function () {
            var param = { dataType: '@Constant.LicenseDataType.CUSTOMER' };
            var valid = PMS.utility.getDataByAjax('/Common/CheckRegistNewData', param);

            if (!valid) {
                PMS.utility.showMessageDialog('<i class="fa fa-warning"></i>', '@string.Format(Messages.E067, "取引先")');
                return false;
            }

            var $form = $("#formAction");

            $form.attr("action", "/PMS02001/Edit");
            $form.children('input[name="id"]').val(0);
            $form.submit();
        });

        $(document).off('a.edit-link');
        $(document).on('click', 'a.edit-link', function () {
            var $form = $("#formAction");
            $form.attr("action", "/PMS02001/Edit");
            $form.children('input[name="id"]').val($(this).attr("aria-valuetext"));
            $form.submit();
        });

        $('table.tb-right th').unbind('click.DT');

        // event click import
        $('button#btnImport').click(function () {
            // cleart old file
            $('#fileCustomerCsvImport').val('');

            // open dialog choose file
            $("#fileCustomerCsvImport").click();
        });

        // event select file
        $("#fileCustomerCsvImport").change(function (e) {
            // check time out
            var result = PMS.utility.getDataByAjax('/Common/CheckTimeOut', null);

            if (result == null)
                return;

            var fileCSVImport = $(this).prop('files');

            if (fileCSVImport == null || fileCSVImport.length == 0) { // check file not null, content file not empty
                return;
            }

            // confirm to import data
            PMS.utility.showSubmitConfirmDialog('@string.Format(Messages.I006)', null, null, function (action) {
                if (action) {
                    ImportCustomerCsv();
                } else {
                    $('#fileCustomerCsvImport').val('');
                }
            });
        });

        // import data, submit to server
        function ImportCustomerCsv() {
            var fileCSVImport = $('#fileCustomerCsvImport').prop('files');
            var invalidFile = false;

            if (fileCSVImport == null || fileCSVImport.length == 0) { // check file not null, content file not empty
                invalidFile = true;
            } else {
                var file = fileCSVImport[0].name;

                if (file != '') {
                    var sFileExtension = file.split('.')[file.split('.').length - 1];

                    // check file type, check file size
                    if ((typeof (sFileExtension) != 'undefined' && sFileExtension.toLowerCase() !== 'csv') || fileCSVImport[0].size > 3000000) {
                        invalidFile = true;
                    }
                }
            }

            // file invalid
            if (invalidFile) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), "@string.Format(Messages.E0681)");
                return;
            }

            // create form data to submit
            var formdata = new FormData();
            formdata.append('csvFile', fileCSVImport[0]);

            $.ajax({
                url: '/PMS02001/ImportCustomerCsv',
                type: 'POST',
                data: formdata,
                mimeType: "multipart/form-data",
                contentType: false,
                cache: false,
                processData: false,
                success: function (response) {
                    var result = JSON.parse(response);

                    if (result.statusCode != '@Constant.HttpResponseCode.SUCCESSFUL') { // has error
                        if (typeof (result.errRowList) != 'undefined' && result.errRowList.length > 0) { // error by row data

                            var showManyErrRow = '';
                            // if have too much error row, cut 0->12 row at the top.
                            if (result.errRowList.length > 13) {
                                result.errRowList = result.errRowList.slice(0, 12);
                                showManyErrRow = ',...'
                            }

                            PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), result.errRowList.toString() + showManyErrRow + "行目のデータに不備がありますので処理を中断します。");
                        } else if (typeof (result.message) != 'undefined') { // error check data
                            PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), result.message);
                        } else { // error when insert
                            PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), "@string.Format(Messages.E0681)");
                        }
                    } else { // successful
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), "@string.Format(Messages.I007, "取引先情報", "登録")");
                        searchCustomer();
                    }
                },
                error: function (error) {
                    if (error.status == 419) //419: Authentication Timeout
                    {
                        window.location.href = '/PMS01001/Login/timeout';
                    }
                }
            });
        }

        PMS.utility.LoadSearchCondition();
    });

    function LoadOldValueOfControls() {
        var displayName = $('#search_displayName').val();
        if (displayName.length > 0) {
            $('#Condition_DISPLAY_NAME').val(displayName);
        }

        var customerNameKata = $('#search_customerNameKata').val();
        if (customerNameKata.length > 0) {
            $('#Condition_CUSTOMER_NAME_KATA').val(customerNameKata);
        }
    }
</script>
