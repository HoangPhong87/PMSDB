@model ProjectManagementSystem.ViewModels.PMS10005.PMS10005ListViewModel
@using ProjectManagementSystem.Common
@using ProjectManagementSystem.Resources;
@{
    ViewBag.Title = "諸経費一覧";
    var currentUser = HttpContext.Current.Session[Constant.SESSION_LOGIN_USER] as LoginUser;
}

<section class="content-header tag-list-header">
    <div class="title">
        <h1>
            @ViewBag.Title
        </h1>
        @if (currentUser != null && currentUser.PlanFunctionList.Contains(Constant.FunctionID.OverHeadCostRegist) && currentUser.FunctionList.Contains(Constant.FunctionID.OverHeadCostRegist))
        {
            <button id="btnCreateNew" class="btn dark btnNew"><i class="btn-icon btn-add"></i>新規作成</button>
            <input type="hidden" id="roleEdit" value="true" />
        }
    </div>

    <div class="search-form">
        <div class="search-condition clearfix">
            <div class="row row-margin-bottom">
                <label class="width-120">諸経費種別</label>
                @Html.TextBoxFor(m => m.Condition.OVERHEAD_COST_TYPE, new { style = "ime-mode: auto;", @class = "", maxlength = 100 })
            </div>
        </div>

        <div class="right search-action">
            <form id="formDetail" method="POST" class="frmExport">
                <input id="search_overhead_cost_type" name="search_overhead_cost_type" type="hidden">
                @Html.Hidden("hdnOrderBy")
                @Html.Hidden("hdnOrderType")
                <input id="tabId" name="TAB_ID" type="hidden" />
            </form>
            <button type="button" id="btnSearch" name="btnSearch" class="btn dark"><i class="btn-icon btn-search"></i>検索</button>
            <button type="button" id="btnClear" name="btnClear" class="btn light"><i class="btn-icon btn-clear"></i>クリア</button>
        </div>
    </div>
</section>

@RenderPage("~/Views/Shared/ShowHideHeaderContent.cshtml")

<div class="data-list overheadcost-list content clearfix" style="visibility:hidden">
    <table id="InfoTable" class="display tbl-overheadcost-list clearfix" width="100%">
        <thead>
            <tr>
                <th>ID</th>
                <th>No.</th>
                <th aria-valuetext="overhead_cost_type">諸経費種別</th>
                <th aria-valuetext="remarks">備考</th>
                <th aria-valuetext="ins_date">登録日時</th>
                <th aria-valuetext="user_regist">登録者</th>
                <th>削除</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<div class="search-date">
    <button id="btnExport" type="button" class="btn dark"><i class="btn-icon btn-output-csv"></i>CSV出力</button>
</div>

<form id="formTagEdit" action="/PMS10005/Edit/" method="POST">
    <input type="hidden" id="overhead_cost_id" name="id" value="0">
</form>
<input type="hidden" id="table_order_columns" value="" />

<script type="text/javascript" charset="utf-8">
    $(function () {
        var uniqueId = "@Guid.NewGuid().ToString()";
        $("#tabId").val(uniqueId);
        SetEventBeforeUnload();
        LoadOldValueOfControls();
        $(document).off('#InfoTable tr th');
        $(document).on('click', '#InfoTable tr th', function () {
            var sort_type = $(this).hasClass('sorting_asc') ? 'asc' : 'desc';

            $('input[name="hdnOrderBy"]').val($(this).attr("aria-valuetext"));
            $('input[name="hdnOrderType"]').val(sort_type);
        });

        var oSorting = {
            "bSort": true
        };
        var oPaginate = {
            "bPaginate": true,
            "iDisplayLength": parseInt(@App[ConfigurationKeys.LIST_ITEMS_PER_PAGE]),
            "bStateSave": false
        };
        var oServerSide = {
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("Search", "PMS10005")',
            "fnBeforeSend": beforeSend,
            "fnServerParams": serverParams,
            "fnDrawCallback": displayComplete,
            "fnInitComplete": bindData
        };
        var aoColumnDefs = [
            { "sName": "overhead_cost_id", "bVisible": false, "aTargets": [0], "sWidth": "0" },
            { "bSortable": false, "aTargets": [1], "sWidth": "40px", "sClass": "cell_center" },
            { "sName": "overhead_cost_type", "aTargets": [2], "sWidth": "150px", "sClass": "user_regist cell_left", "mRender": function (data, type, full) { return buildLinkContent(data, full[0], 'overhead-cost-type'); } },
            { "sName": "remarks", "aTargets": [3], "sWidth": "320px", "sClass": "ins_date cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data); } },
            { "sName": "ins_date", "aTargets": [4], "sWidth": "150px", "sClass": "ins_date cell_center upd-date" },
            { "sName": "user_regist", "aTargets": [5], "sWidth": "200px", "sClass": "ins_date cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data); } },
            { "bSortable": false, "bVisible": PMS.utility.checkPermission('#roleEdit'), "aTargets": [6], "sWidth": "5%", "sClass": "cell_center", "mRender": function (data, type, full) { return '<a class="delete-link" aria-valuetext="' + full[0] + '">削除</a>'; } }
        ];

        function displayComplete() {
            $('table.tbl-overheadcost-list tr td label.delete-row').each(function () {
                $(this).parents('tr').removeClass().addClass('delete-row');
            });

            $('div.overheadcost-list').removeAttr('style');
            $("#onloadDiv").hide();
            $('.pace.pace-active').addClass('pace-inactive').removeClass('pace-active');
            $('#btnSearch').removeAttr('disabled');
            custom_order('#InfoTable', 2, 0);

            PMS.utility.imeControl($("#Condition_OVERHEAD_COST_TYPE"), 'active');
        }

        function bindData(data) {
            // process status disabled  buttton exportCSV when search data
            if (data.aaData.length == 0) {
                $('#btnExport').addClass('disabled').attr('disabled', 'disabled');
            }
            else {
                $('#btnExport').removeClass('disabled').removeAttr('disabled');
            }
        }

        function buildLinkContent(name, id, classname) {
            if (PMS.utility.checkPermission('#roleEdit')) {
                var s = '<a title="' + name + '" href="#" overhead-cost-id = "' + id + '" class="overhead-cost-edit-link">' + '<label class="longtext ' + classname + '">' + name + '</label></a>';
            }
            else {
                var s = '<label class="longtext ' + classname + '">' + name + '</label>';
            }

            return s;
        }

        var dataTable = CreateDataTable('#InfoTable', oSorting, oPaginate, oServerSide, aoColumnDefs);

        function beforeSend() {
        }

        function serverParams(aoData) {
            var orderBy = 'ins_date';
            var orderType = 'desc';
            $('table.dataTable tr th').each(function () {
                if ($(this).hasClass('sorting_asc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'asc';
                } else if ($(this).hasClass('sorting_desc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'desc';
                }
            });
            $('#hdnOrderBy').val(orderBy);
            $('#hdnOrderType').val(orderType);

            aoData.push(
                { "name": "OVERHEAD_COST_TYPE", "value": $("#search_overhead_cost_type").val() },
                { "name": "orderBy", "value": orderBy },
                { "name": "orderType", "value": orderType },
                { "name": "TAB_ID", "value": $("#tabId").val() }
            );

            if (typeof (colReorder) !== 'undefined') {
                $("#table_order_columns").val(colReorder.fnOrder());
                colReorder.fnReset();
            }
        }

        function saveDataCondition() {
            $("#search_overhead_cost_type").val($("#Condition_OVERHEAD_COST_TYPE").val());
        }

        $("button#btnSearch").click(function () {
            searchOverHeadCode();
        });

        $(document).bind('keypress', function (e) {
            var code = e.keyCode || e.which;
            if (code == 13) { //Enter keycode
                searchOverHeadCode();
            }
        });

        function searchOverHeadCode() {
            $('.validation-summary-errors').remove();
            var invalidMess = [];
            // check valid
            var name = $('#Condition_OVERHEAD_COST_TYPE').val();

            if (name.length > 100) {
                invalidMess.push("@string.Format(Messages.E020, "諸経費種別", "100")");
            }

            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess, '.title');
                return false;
            }

            $("#search_overhead_cost_type").val($("#Condition_OVERHEAD_COST_TYPE").val());

            $('.pace.pace-inactive').removeClass('pace-inactive').addClass('pace-active');
            $("#onloadDiv").show(function () {
                dataTable.fnPageChange('first');
            });
            $('#btnSearch').attr('disabled', 'disabled');
        }

        $("button#btnClear").click(function () {
            $("#Condition_OVERHEAD_COST_TYPE").val("");
            PMS.utility.ClearRestoreData("PMS10005");
        });

        $('button#btnExport').click(function () {
            var orderBy = 'ins_date';
            var orderType = 'desc';
            $('table.dataTable tr th').each(function () {
                if ($(this).hasClass('sorting_asc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'asc';
                } else if ($(this).hasClass('sorting_desc')) {
                    orderBy = $(this).attr('class').split(' ')[0];
                    orderType = 'desc';
                }
            });
            $('#hdnOrderBy').val(orderBy);
            $('#hdnOrderType').val(orderType);

            $("#formDetail").attr("action", "/PMS10005/ExportCsvList");
            $("#formDetail").submit();
        });

        $(document).on('click', 'button#btnCreateNew', function () {
            var $form = $("#formTagEdit");
            $form.children('input[name="id"]').val('0');
            $form.submit();
        });

        $(document).off('.overhead-cost-edit-link');
        $(document).on('click', '.overhead-cost-edit-link', function () {
            $('#overhead_cost_id').val($(this).attr("overhead-cost-id"));
            $("#formTagEdit").submit();
        });

        $(document).off('a.delete-link');
        $(document).on('click', 'a.delete-link', function (e) {
            var $control = $(this);
            var overhead_cost_id = $control.attr("aria-valuetext");

            PMS.utility.showSubmitConfirmDialog('諸経費を削除します。よろしいですか？', function (action) {
                if (action) {
                    var param = { overhead_cost_id: overhead_cost_id };

                    $.ajax({
                        url: '@Url.Action("Delete","PMS10005")',
                        type: 'POST',
                        data: param,
                        dataType: 'json',
                        cache: false,
                        success: function (data) {
                            BootstrapDialog.closeAll();
                            if (data.statusCode == 201) { // update success
                                if (data.row > 0) {
                                    window.location.href = '/PMS10005';
                                }
                            }
                            if (data.statusCode == 500) { // Exception
                                $("#frmEdit").css('visibility', 'hidden');
                                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), data.message, 'PMS10005');
                            }
                        },
                        error: function (error) {
                            if (error.status == 419) { //419: Authentication Timeout
                                window.location.href = '/PMS01001/Login/timeout';
                            } else if (error.status == 420) { // out of date license
                                window.location.href = '/ErrorOutOfDate';
                            }
                            else {
                                window.location.href = '/Error';
                            }
                        }
                    });
                }
            });
        });
        PMS.utility.LoadSearchCondition();
    });

    function LoadOldValueOfControls() {
        var overHeadCostType = $('#search_overhead_cost_type').val();
        if (overHeadCostType.length > 0) {
            $('#Condition_OVERHEAD_COST_TYPE').val(overHeadCostType);
        }
    }
</script>