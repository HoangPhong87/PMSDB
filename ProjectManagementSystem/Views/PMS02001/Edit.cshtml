@model ProjectManagementSystem.ViewModels.PMS02001.PMS02001EditViewModel

@using ProjectManagementSystem.Common;
@using ProjectManagementSystem.Resources;
@using ModelState = System.Web.WebPages.Html.ModelState

@{
    ViewBag.Title = "取引先登録";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
</section>

<section class="content content-edit clearfix">
    @using (Html.BeginForm("EditCustomer", "PMS02001", FormMethod.Post,
                            new { @class = "form-horizontal", id = "frmCustomerEdit", enctype = "multipart/form-data" }))
    {
        <div id="title"></div>
        @Html.ValidationSummary(false)
        <div class="form-group">
            <label class="col-sm-2 control-label label-customer-name bold">取引先名</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.customer_name, new { @class = "form-control", maxlength = 100 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-customer-name-kana bold">取引先名（カナ）</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.customer_name_kana, new { @class = "form-control", maxlength = 100 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-customer-name-en bold">取引先名（英語）</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.customer_name_en, new { @class = "form-control", maxlength = 100 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-display-name bold">表示名<span class="RequiredField">*</span></label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.display_name, new { @class = "form-control", maxlength = 100 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-zip-code bold">郵便番号</label>
            <div class="col-sm-5">
                <div class="col-sm-5 col-sm-no-padding-left">
                    @Html.TextBoxFor(m => m.CUSTOMER_INFO.zip_code, new { @class = "form-control zip-code", maxlength = 8 })
                </div>

                <div class="col-sm-1">
                    <button type="button" name="btnAddressSearch" id="btnAddressSearch" class="btn light"><i class="btn-icon btn-search-dialog"></i>住所検索</button>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-prefecture-code bold">都道府県</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.CUSTOMER_INFO.prefecture_code, Model.PREFECTURE_LIST, new { @class = "form-control" }, true)
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label label-city bold">市区町村</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.city, new { @class = "form-control", maxlength = 255 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-address-1 bold">住所1</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.address_1, new { @class = "form-control", maxlength = 255 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-address-2 bold">住所2</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.address_2, new { @class = "form-control", maxlength = 255 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-tel-no bold">電話番号</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.tel_no, new { @class = "form-control", maxlength = 13 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-fax-no bold">FAX番号</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.fax_no, new { @class = "form-control", maxlength = 13 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-mail-address bold">メールアドレス</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.mail_address, new { @class = "form-control", maxlength = 255 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-url bold">URL</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(m => m.CUSTOMER_INFO.url, new { @class = "form-control", maxlength = 255 })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-image-user bold">ロゴ画像</label>
            <div class="col-sm-4">
                @if (string.IsNullOrEmpty(Model.CUSTOMER_INFO.logo_image_file_path))
                {
                    <div class="box-img">
                        <img class="no_image_user" id="image_user" src="~/Images/img_building.png" />
                    </div>
                }
                else
                {
                    <img class="image_user" id="image_user" src="" />
                }
                <input type="file" id="file" name="file" />

                @if (!string.IsNullOrEmpty(Model.CUSTOMER_INFO.logo_image_file_path))
                {
                    <div class="clearImage">クリア</div>
                }
                @Html.HiddenFor(m => m.Clear)
                @Html.HiddenFor(m => m.TypeUpload)
                @Html.HiddenFor(m => m.CUSTOMER_INFO.logo_image_file_path)
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label label-remarks bold">備考</label>
            <div class="col-sm-4">
                @Html.TextAreaFor(m => m.CUSTOMER_INFO.remarks, new { @class = "form-control candy-textArea", maxlength = 4000, rows = 5 })
                <input type="hidden" class="set-max-width" />
            </div>
        </div>

        <div id="updateTime">
            <div class="form-group">
                <label class="col-sm-2 control-label bold">登録日時</label>
                <div class="col-sm-4">
                    <label class="control-label" id="insDate">
                        @{
        string ins_date = !string.IsNullOrEmpty(@Model.CUSTOMER_INFO.ins_date.ToString()) ? Model.CUSTOMER_INFO.ins_date.ToString("yyyy/MM/dd HH:mm") : "";
                        }
                        @ins_date
                    </label>
                </div>

            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">登録者</label>
                <div class="col-sm-8">
                    <label class="control-label" id="insUser">@Model.CUSTOMER_INFO.user_regist</label>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">更新日時</label>

                <div class="col-sm-4">
                    <label class="control-label" id="updDate">
                        @{
        string upd_date = !string.IsNullOrEmpty(@Model.CUSTOMER_INFO.upd_date.ToString()) ? Model.CUSTOMER_INFO.upd_date.ToString("yyyy/MM/dd HH:mm") : "";
                        }
                        @upd_date
                    </label>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label bold">更新者</label>
                <div class="col-sm-8">
                    <label class="control-label" id="updUser">@Model.CUSTOMER_INFO.user_update</label>
                </div>
            </div>
        </div>

        <div class="form-group btn-group-edit">
            <div class="col-sm-4">
                @Html.HiddenFor(m => m.CUSTOMER_INFO.row_version)
                @Html.HiddenFor(m => m.CUSTOMER_INFO.customer_id)
                <input type="hidden" name="OLD_DEL_FLAG" value="@Model.Delete.ToString()" />

                @Html.AntiForgeryToken()
                <button type="button" id="btnBack" name="Back" class="btn light btnNoStyleDisable"><i class="btn-icon btn-back"></i>戻る</button>

                <button type="button" id="btnSubmit" class="btn green"><i class="btn-icon btn-regist"></i> 登録</button>
                <label class="bold" id="deleteFlag">
                    @Html.CheckBoxFor(m => m.Delete, new { @class = "condition_chkbox" })
                    削除
                </label>

            </div>
        </div>

    }
</section>

<form id="frmCustomerReload" method="POST" action="@Url.Action("Edit", "PMS02001")">
    <input type="hidden" name="id" value="@Model.CUSTOMER_INFO.customer_id" />
</form>

<script type="text/javascript">
    var fileDrag = null;
    var maxWidth = $(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2); // set max-width of textarea
    $(document).ready(function () {
        $(".content-wrapper").addClass("content-edit-wrapper");

        $(":file").filestyle({ buttonBefore: true, buttonName: "dark", buttonText: "ファイル選択" });
        $('.btn-clip').parent().find('span').removeClass('glyphicon');
        $(".bootstrap-filestyle").find('input').val('選択されていません');
        $("span.glyphicon").remove();

        $('select[id="CUSTOMER_INFO_prefecture_code"]').width($('input[id="CUSTOMER_INFO_zip_code"]').width());
        $('input[id="CUSTOMER_INFO_tel_no"]').width($('input[id="CUSTOMER_INFO_zip_code"]').width());
        $('input[id="CUSTOMER_INFO_fax_no"]').width($('input[id="CUSTOMER_INFO_zip_code"]').width());

        $(window).resize(function () {
            $('select[id="CUSTOMER_INFO_prefecture_code"]').width($('input[id="CUSTOMER_INFO_zip_code"]').width());
            $('input[id="CUSTOMER_INFO_tel_no"]').width($('input[id="CUSTOMER_INFO_zip_code"]').width());
            $('input[id="CUSTOMER_INFO_fax_no"]').width($('input[id="CUSTOMER_INFO_zip_code"]').width());
        });

        if ($('#CUSTOMER_INFO_customer_id').val() === '0') {
            $('#updateTime, #deleteFlag').hide();
        }

        // get max-width of textarea when resize manu bar left
        window.addEventListener('resize', function (event) {
            maxWidth = $(".set-max-width").css("max-width").slice(0, $(".set-max-width").css("max-width").length - 2);
            //handle change textare when resize menu bar left
            if ($('body').hasClass('sidebar-collapse') === true) {
                // case close when page first load
                $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
            }
            else {
                $(".candy-textArea").css("max-width", parseInt(maxWidth, 10) + "px");
            }
        });
        //end get max-width of textarea when resize manu bar left
    });

    $(document).off('#btnBack');
    $(document).on('click', '#btnBack', function () {
        $.ajax({
            type: "POST",
            url: '/Common/SetButtonBackSession',
            dataType: 'json',
            data: null,
            success: function () {
                window.location.href = "/PMS02001";
            },
            error: function (error) {
            }
        });
    });

    $(function () {

        //handle change textare when resize menu bar left
        if ($('body').hasClass('sidebar-collapse') === true) {
            // case close when page first load
            $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
        }
        $(document).off('a.sidebar-toggle i');
        $(document).on('click', 'a.sidebar-toggle i', function () {
            if ($('body').hasClass('sidebar-collapse') === true) {
                // close
                $(".candy-textArea").css("max-width", (parseInt(maxWidth, 10) + 115) + "px");
            } else {
                // open
                $(".candy-textArea").css("max-width", (parseInt($(".candy-textArea").css("max-width").slice(0, $(".candy-textArea").css("max-width").length - 2), 10) - 115) + "px");
            }
        });
        //end handle change textare when resize menu bar left

        PMS.utility.validFullHalfSize($("#CUSTOMER_INFO_customer_name_en"));
        PMS.utility.validFullHalfSize($("#CUSTOMER_INFO_mail_address"));
        PMS.utility.checkInputPhone($("#CUSTOMER_INFO_zip_code"));
        PMS.utility.checkInputPhone($("#CUSTOMER_INFO_fax_no"));
        PMS.utility.validFullHalfSize($("#CUSTOMER_INFO_url"));
        PMS.utility.checkInputPhone($("#CUSTOMER_INFO_tel_no"));

        PMS.utility.imeControl($("#CUSTOMER_INFO_customer_name, #CUSTOMER_INFO_customer_name_kana, #CUSTOMER_INFO_display_name, #CUSTOMER_INFO_remarks, #CUSTOMER_INFO_city, #CUSTOMER_INFO_address_1, #CUSTOMER_INFO_address_2"), 'active');
        PMS.utility.imeControl($("#CUSTOMER_INFO_customer_name_en, #CUSTOMER_INFO_zip_code, #CUSTOMER_INFO_tel_no, #CUSTOMER_INFO_fax_no, #CUSTOMER_INFO_mail_address"), 'disable');
        PMS.utility.imeControl($("#CUSTOMER_INFO_url"), 'inactive');

        PMS.utility.focusTextbox();
        var zip_code = $("#CUSTOMER_INFO_zip_code").val();
        if (zip_code.length > 0 && zip_code.length >= 4) {
            $("#CUSTOMER_INFO_zip_code").val(zip_code.slice(0, 3) + '-' + zip_code.slice(3, zip_code.length));
        }

        var file_drop = document.body;
        file_drop.addEventListener(
          'dragover',
          function handleDragOver(evt) {
              evt.stopPropagation()
              evt.preventDefault()
              evt.dataTransfer.dropEffect = 'copy'
              evt.dataTransfer.effectAllowed = "all";
          },
          false
        )
        file_drop.addEventListener(
          'drop',
          function (evt) {
              evt.stopPropagation()
              evt.preventDefault()
              var files = evt.dataTransfer.files
              var file = files[0]
              fileDrag = file

              if (typeof (file) !== 'undefined' && file !== null) {
                  if ($('.box-img').length > 0) {
                      var img = '<img class="image_user" id="image_user" src=""/>';
                      $(".bootstrap-filestyle").before(img);

                  }

                  var $imgElement = $('.image_user');
                  if (typeof (file) !== 'undefined') {
                      var reader = new FileReader();

                      reader.onload = function (e) {
                          $imgElement.attr('src', e.target.result).attr('title', file.name);
                      };

                      reader.readAsDataURL(file);
                  }
                  $(".bootstrap-filestyle").find('input').val(file.name);

                  if ($(".bootstrap-filestyle").find('input').val() !== '選択されていません' && $('.clearImage').length === 0) {
                      var clearImage = '<div class="clearImage">クリア</div>';
                      $(".bootstrap-filestyle").after(clearImage);
                  }
                  $('.box-img').remove();
              }
          },
          false
        )

        $(document).off('#btnAddressSearch');
        $(document).on('click', '#btnAddressSearch', function () {
            var zip_code = $('#CUSTOMER_INFO_zip_code').val().replace('-', '');
            if (zip_code.length === 0) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), "@string.Format(Messages.I015)");
                return false;
            } else if (zip_code.length !== 7) {
                PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), "@string.Format(Messages.I016)");
                return false;
            }
            $("#onloadDiv").show();
            var dataToSend = JSON.stringify({
                zipcode: zip_code
            });

            $.ajax({
                type: "POST",
                url: '@Url.Action("ImportZipCode", "PMS02001")',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: dataToSend,
                success: function (result) {
                    if (typeof (result) == 'object') {
                        var prefectures = result.prefectures;

                        if ($('#CUSTOMER_INFO_city').val().length > 0 || $('#CUSTOMER_INFO_address_1').val().length > 0 || $('#CUSTOMER_INFO_prefecture_code').find(":selected").val() != "") {
                            PMS.utility.showSubmitConfirmDialog("@Messages.I011", null, null, function (action) {
                                if (action) {
                                    $('#CUSTOMER_INFO_prefecture_code option[value=""]').prop('selected', true);;

                                    $("#CUSTOMER_INFO_prefecture_code option").each(function () {
                                        if ($(this).text() === prefectures) {
                                            $('#CUSTOMER_INFO_prefecture_code option[value="' + $(this).val() + '"]').prop('selected', true);
                                            return false;
                                        }
                                    });
                                    console.log(result);
                                    $('#CUSTOMER_INFO_city').val(result.city);
                                    $('#CUSTOMER_INFO_address_1').val(result.address);
                                    BootstrapDialog.closeAll();
                                    $("#onloadDiv").hide();
                                }
                                else {
                                    $("#onloadDiv").hide();
                                }
                            });
                        } else {
                            $('#CUSTOMER_INFO_prefecture_code option[value=""]').prop('selected', true);

                            $("#CUSTOMER_INFO_prefecture_code option").each(function () {
                                if ($(this).text() === prefectures) {
                                    $('#CUSTOMER_INFO_prefecture_code option[value="' + $(this).val() + '"]').prop('selected', true);
                                    return false;
                                }
                            });
                            $('#CUSTOMER_INFO_city').val(result.city);
                            $('#CUSTOMER_INFO_address_1').val(result.address);
                            $("#onloadDiv").hide();
                        }
                    } else {
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), "@string.Format(Messages.I012)");
                        $("#onloadDiv").hide();
                    }
                },
                error: function (error) {
                    if (error.status == 419) { //419: Authentication Timeout
                        window.location.href = '/PMS01001/Login/timeout';
                    } else if (error.status == 420) { // out of date license
                        window.location.href = '/ErrorOutOfDate';
                    }
                    else {
                        window.location.href = '/Error';
                    }
                }
            });
        });

        $(document).off('.clearImage');
        $(document).on('click', '.clearImage', function () {
            var img = '<div class="box-img">'
                    + '<img class="no_image_user" id="image_user" src="/Images/img_building.png">'
                    + '</div>';
            if ($(this).parent().children('.box-img').length == 0) {
                $(".image_user").after(img).remove();
            }
            $(this).remove();
            $(':file').val('');
            $(".bootstrap-filestyle").find('input').val('選択されていません');
            $('.box-img').parent().find('br').remove();
            $('.image_user').remove();
            fileDrag = null;
        });

        $(document).on('change', ':file', function () {
            if ($('.box-img').length > 0) {
                var img = '<img class="image_user" id="image_user" src=""/>';
                $(".bootstrap-filestyle").before(img);
            }

            var $imgElement = $(this).siblings('.image_user');
            var file = $(this).prop('files')[0];

            if (typeof (file) !== 'undefined') {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $imgElement.attr('src', e.target.result).attr('title', file.name);
                };

                reader.readAsDataURL(file);
            }

            if ($(".bootstrap-filestyle").find('input').val() !== '選択されていません' && $('.clearImage').length === 0) {
                var imgClear = '<div class="clearImage">クリア</div>';
                $(".bootstrap-filestyle").after(imgClear);
            }
            $('.box-img').remove();
            $('#TypeUpload').val('file');
            fileDrag = null;
        });

        $('button#btnSubmit').click(function () {
            PMS.utility.removeValidationError();
            var invalidMess = validateData();
            if (invalidMess.length > 0) {
                PMS.utility.showClientError(invalidMess);
                return false;
            }

            if ($('.clearImage').length !== 0) {
                $('#Clear').val('0');
            } else {
                $('#Clear').val('1');
            }

            if (fileDrag !== null) {
                $('#TypeUpload').val('fileDrag');
            }

            PMS.utility.IsAuthenticateTimeout('@string.Format(Messages.I006)', '#frmCustomerEdit');
        });

        $("#frmCustomerEdit").submit(function (e) {
            var formData = new FormData(this);

            if (PMS.utility.isSecurityUpdatedSafariVersion()) { // if browser is Safari Vesion 11.1+
                try {
                    eval('for (var pair of formData.entries()) {\
                        if (pair[1] instanceof File && pair[1].name === \'\' && pair[1].size === 0) {\
                            formData.delete(pair[0]);\
                        }\
                    }');
                } catch (e) { }
            }

            if (fileDrag !== null) {
                formData.append("fileDrag", fileDrag);
                $('#TypeUpload').val('fileDrag');
            }

            $.ajax({
                url: $(this).attr("action"),
                type: 'POST',
                data: formData,
                mimeType: "multipart/form-data",
                contentType: false,
                cache: false,
                processData: false,
                success: function (response) {
                    var data = JSON.parse(response);
                    BootstrapDialog.closeAll();
                    if (data.statusCode == 201) { // update success
                        $("#frmCustomerEdit").css('visibility', 'hidden');
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.INFORMATION'), data.message, null, null, function () {
                            $('#CUSTOMER_INFO_customer_id').val(data.id);
                            if (data.insDate != null && data.insDate.length > 0) {
                                $('#insDate').text(data.insDate);
                            }
                            if (data.insUser != null && data.insUser.length > 0) {
                                $('#insUser').text(data.insUser);
                            }
                            $('#updDate').text(data.updDate);
                            $('#updUser').text(data.updUser);
                            $('#Delete').text(data.updUser);
                            $("#Delete").prop('checked', data.deleted);
                            $('input[name="OLD_DEL_FLAG"]').val(data.deleted);

                            $(':file').val('');
                            $(".bootstrap-filestyle").find('input').val('選択されていません');
                            $('#CUSTOMER_INFO_row_version').val(data.row_version);
                            $('#CUSTOMER_INFO_logo_image_file_path').val(data.logoImageFilePath);
                            getAvatar(data.id);
                            $('#updateTime, #deleteFlag').show();
                            $("#frmCustomerEdit").css('visibility', '');
                        });
                    }

                    if (data.statusCode == 202) { // duplicate update
                        $("#frmCustomerEdit").css('visibility', '');
                        PMS.utility.showSubmitConfirmDialog(data.message, '#frmCustomerReload', null, function (action) {
                            if (!action)
                                $("#frmCustomerEdit").css('visibility', '');
                        });
                    }

                    if (data.statusCode == 500) { // Exception
                        $("#frmCustomerEdit").css('visibility', 'hidden');
                        PMS.utility.showMessageDialog(PMS.utility.htmlDecode('@Constant.DialogType.WARNING'), data.message, '/PMS02001');
                    }

                    if (typeof (data.ErrorMessages) !== 'undefined') // invalid data
                        PMS.utility.showClientError(data.ErrorMessages);
                },
                error: function (error) {
                    if (error.status == 419) //419: Authentication Timeout
                    {
                        $("#frmCustomerEdit").css('visibility', 'hidden');
                        window.location.href = '/PMS01001/Login/timeout';
                    }
                }
            });

            e.preventDefault(); // prevent Default action
        });


        function validateData() {
            var invalidMess = [];

            // check max length of customer_name
            if ($('#CUSTOMER_INFO_customer_name').val().length > 100) {
                invalidMess.push("@string.Format(Messages.E020, "取引先名", "100")");
                $('.label-customer-name').addClass('label-validation-error');
            }

            // check max length of customer_name_kana
            if ($('#CUSTOMER_INFO_customer_name_kana').val().length > 100) {
                invalidMess.push("@string.Format(Messages.E020, "取引先名（カナ）", "100")");
                $('.label-customer-name-kana').addClass('label-validation-error');
            }

            // check max length of customer_name_en
            if ($('#CUSTOMER_INFO_customer_name_en').val().length > 100) {
                invalidMess.push("@string.Format(Messages.E020, "取引先名（英語）", "100")");
                $('.label-customer-name-en').addClass('label-validation-error');
            }

            // check required of display_name
            if ($('#CUSTOMER_INFO_display_name').val().length === 0) {
                invalidMess.push("@string.Format(Messages.E002, "表示名")");
                $('.label-display-name').addClass('label-validation-error');
            }

            // check max length of display_name
            if ($('#CUSTOMER_INFO_display_name').val().length > 100) {
                invalidMess.push("@string.Format(Messages.E020, "表示名", "100")");
                $('.label-display-name').addClass('label-validation-error');
            }

            // check number of zip_code
            var zipCode = $('#CUSTOMER_INFO_zip_code').val().replace('-', '');
            if (zipCode.length > 0) {

                // check max length of zip_code
                if (zipCode.length > 7) {
                    invalidMess.push("@string.Format(Messages.E020, "郵便番号", "7")");
                    $('.label-zip-code').addClass('label-validation-error');
                }

                // check phone
                if (!PMS.utility.validPhone(zipCode)) {
                    invalidMess.push("@string.Format(Messages.E003, "郵便番号")");
                    $('.label-zip-code').addClass('label-validation-error');
                }
            }

            // check max length of city
            if ($('#CUSTOMER_INFO_city').val().length > 255) {
                invalidMess.push("@string.Format(Messages.E020, "市区町村", "255")");
                $('.label-city').addClass('label-validation-error');
            }

            // check max length of address 1
            if ($('#CUSTOMER_INFO_address_1').val().length > 255) {
                invalidMess.push("@string.Format(Messages.E020, "住所1", "255")");
                $('.label-address-1').addClass('label-validation-error');
            }

            // check max length of address 2
            if ($('#CUSTOMER_INFO_address_2').val().length > 255) {
                invalidMess.push("@string.Format(Messages.E020, "住所2", "255")");
                $('.label-address-2').addClass('label-validation-error');
            }

            // check number of tel_no
            var telNo = $('#CUSTOMER_INFO_tel_no').val();
            if (telNo.length > 0) {

                // check max length of tel_no
                if (telNo.length > 13) {
                    invalidMess.push("@string.Format(Messages.E020, "電話番号", "13")");
                    $('.label-tel-no').addClass('label-validation-error');
                }

                // check numberic
                if (!PMS.utility.validPhone(telNo)) {
                    invalidMess.push("@string.Format(Messages.E003, "電話番号")");
                    $('.label-tel-no').addClass('label-validation-error');
                }
            }

            // check number of fax
            var fax = $('#CUSTOMER_INFO_fax_no').val();
            if (fax.length > 0) {

                // check max length of fax
                if (fax.length > 13) {
                    invalidMess.push("@string.Format(Messages.E020, "FAX番号", "13")");
                    $('.label-fax-no').addClass('label-validation-error');
                }

                // check phone
                if (!PMS.utility.validPhone(fax)) {
                    invalidMess.push("@string.Format(Messages.E003, "FAX番号")");
                    $('.label-fax-no').addClass('label-validation-error');
                }
            }

            //check email
            var email = $('#CUSTOMER_INFO_mail_address').val();
            if (email.length > 0) {

                // check max length of email
                if (email.length > 255) {
                    invalidMess.push("@string.Format(Messages.E020, "メールアドレス", "255")");
                    $('.label-mail-address').addClass('label-validation-error');
                }

                // check numberic
                if (!PMS.utility.validEmail(email)) {
                    invalidMess.push("@string.Format(Messages.E003, "メールアドレス")");
                    $('.label-mail-address').addClass('label-validation-error');
                }
            }

            var url = $('#CUSTOMER_INFO_url').val();
            if (url.length > 0) {
                // check max length of url
                if (url.length > 255) {
                    invalidMess.push("@string.Format(Messages.E020, "URL", "255")");
                    $('.label-url').addClass('label-validation-error');
                }

                // check url
                if (!PMS.utility.validURL(url)) {
                    invalidMess.push("@string.Format(Messages.E003, "URL")");
                    $('.label-url').addClass('label-validation-error');
                }
            }

            var file = $('#file').val();
            // check max length of file
            if (file.length > 255) {
                invalidMess.push("@string.Format(Messages.E020, "ロゴ画像", "255")");
                $('.label-image-user').addClass('label-validation-error');
            }

            var fileExtension = ['jpeg', 'jpg', 'png'];
            var sFileExtension = file.split('.')[file.split('.').length - 1].toLowerCase();

            if (file.length > 0 && $.inArray(sFileExtension, fileExtension) == -1) {
                invalidMess.push("@string.Format(Messages.E010, "jpg,png.jpeg")");
                $('.label-image-user').addClass('label-validation-error');
            }

            var fileInput = document.getElementById('file');
            for (i = 0; i < fileInput.files.length; i++) {
                if (fileInput.files[i].size / 1024 > 500) {
                    invalidMess.push("@string.Format(Messages.E021, "500KB以内")");
                    $('.label-image-user').addClass('label-validation-error');
                    break;
                }
            }

            if (fileDrag !== null && typeof (fileDrag) !== 'undefined') {
                // check max length of file
                if (fileDrag.name.length > 255) {
                    invalidMess.push("@string.Format(Messages.E020, "プロフィール画像", "255")");
                    $('.label-image-user').addClass('label-validation-error');
                }

                var fileExtension = ['jpeg', 'jpg', 'png'];
                var sFileExtension = fileDrag.name.split('.')[fileDrag.name.split('.').length - 1].toLowerCase();

                if (fileDrag.length > 0 && $.inArray(sFileExtension, fileExtension) == -1) {
                    invalidMess.push("@string.Format(Messages.E010, "jpg,png.jpeg")");
                    $('.label-image-user').addClass('label-validation-error');
                }

                if (fileDrag.size / 1024 > 500) {
                    invalidMess.push("@string.Format(Messages.E021, "500KB以内")");
                    $('.label-image-user').addClass('label-validation-error');
                }
            }

            // check max length of remarks
            if ($('#CUSTOMER_INFO_remarks').val().length > 4000) {
                invalidMess.push("@string.Format(Messages.E020, "備考", "4000")");
                $('.label-remarks').addClass('label-validation-error');
            }

            return invalidMess;
        }

        getAvatar('@Model.CUSTOMER_INFO.customer_id');

        var displayImage = function (base64Data) {
            var img = "<img class='image_user' id='image_user' "
                     + "src='" + "data:image/jpg;base64,"
                     + base64Data + "'/>";

            if ($('.box-img').length > 0) {
                $('.box-img').remove();
                $(".bootstrap-filestyle").before(img);
            } else {
                $("#image_user").after(img).remove();
            }
        };

        function getAvatar(customerId) {
            PMS.utility.getImageByAjax('/Common/GetImage', { id: customerId, type: '@Constant.GetImage.CUSTOMER_IMAGE' }, function (data) {
                if (data != null) {
                    displayImage(data.base64imgage);
                } else {
                    var img = '<div class="box-img">'
                    + '<img class="no_image_user" id="image_user" src="/Images/img_building.png">'
                    + '</div>';

                    if ($('.box-img').length !== 0) {
                        $('.box-img').remove();
                        $(".bootstrap-filestyle").before(img);
                    }
                    else {
                        $("#image_user").after(img).remove();
                    }
                    $('.clearImage').remove();
                }
            });
        }
    });
</script>

@Scripts.Render("~/bundles/bootstrap-filestyle")
