@model ProjectManagementSystem.ViewModels.PMS07001.PMS07001ListViewModel
@using ProjectManagementSystem.Resources;
@using ProjectManagementSystem.Common;

@{
    ViewBag.Title = "消費税率一覧";
    var currentUser = HttpContext.Current.Session[Constant.SESSION_LOGIN_USER] as LoginUser;
}

<section class="content-header">
    <div class="title">
        <h1>
            @ViewBag.Title
        </h1>
        @if (currentUser != null && currentUser.PlanFunctionList.Contains(Constant.FunctionID.ConsumptionTaxRegist) && currentUser.FunctionList.Contains(Constant.FunctionID.ConsumptionTaxRegist))
        {
            <button id="btnCreateNew" class="btn dark btnNew"><i class="btn-icon btn-add"></i>新規作成</button>
            <input type="hidden" id="roleEdit" value="true" />
        }
    </div>
    <div class="search-form">
        <div class="search-condition">
            <div class="row">
                <label class="width-120">適用開始日</label>
                <span class="date datepicker-days">
                    @Html.TextBox(m => m.Condition.ApplyStartDate, "{0:yyyy/MM/dd}", new { @class = "ime-mode", maxlength = 10, @placeholder = "YYYY/MM/DD" })
                    <button type="button" class="btn light"><i class="btn-icon btn-calendar"></i></button>
                </span>
                <label class="bold">以降</label>
            </div>
        </div>
        <div class="right search-action">
            <button type="button" id="btnSearch" name="btnSearch" class="btn dark"><i class="btn-icon btn-search"></i>検索</button>
            <button type="button" id="btnClear" name="btnClear" class="btn light"><i class="btn-icon btn-clear"></i>クリア</button>
        </div>
    </div>
</section>

@RenderPage("~/Views/Shared/ShowHideHeaderContent.cshtml")

<div class="data-list content consumptionTax-list clearfix" style="visibility:hidden">
    <table id="InfoTable" class="display" width="100%">
        <thead>
            <tr>
                <th>ID</th>
                <th>No.</th>
                <th aria-valuetext="apply_start_date">適用開始日</th>
                <th aria-valuetext="tax_rate">消費税率</th>
                <th aria-valuetext="remarks">備考</th>
                <th aria-valuetext="ins_date">登録日時</th>
                <th aria-valuetext="ins_user">登録者</th>
                <th>削除</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<div class="search-date clearfix">
    <form method="POST" action="@Url.Action("ExportCsv","PMS07001")" class="frmExport">
        @Html.Hidden("hdnApplyStartDate")
        @Html.Hidden("hdnOrderBy", "ins_date")
        @Html.Hidden("hdnOrderType", "desc")
        <input id="tabId" name="TAB_ID" type="hidden" />
        <button id="btnExport" type="submit" class="btn dark pull-left"><i class="btn-icon btn-output-csv"></i>CSV出力</button>
    </form>
</div>

<form method="POST" action="@Url.Action("Edit","PMS07001")" class="frm-edit">
    <input type="hidden" name="applyStartDate" value="" />
</form>

<input type="hidden" id="table_order_columns" value="" />

<script type="text/javascript" charset="utf-8">
    $(function () {
        var uniqueId = "@Guid.NewGuid().ToString()";
        $("#tabId").val(uniqueId);
        SetEventBeforeUnload();
        LoadOldValueOfControls();
        var oSorting = {
            "bSort": true
        };
        var oPaginate = {
            "bPaginate": true,
            "iDisplayLength": parseInt(@App[ConfigurationKeys.LIST_ITEMS_PER_PAGE]),
            "bStateSave": false
        };
        var oServerSide = {
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("Search", "PMS07001")',
            "fnServerParams": serverParams,
            "fnDrawCallback": displayComplete,
            "fnInitComplete": bindData
        };
        var aoColumnDefs = [
            { "sName": "apply_start_date", "bSortable": false, "bVisible": false, "aTargets": [0] },
            { "sName": "apply_start_date", "bSortable": false, "aTargets": [1], "sWidth": "5%", "sClass": "cell_center" },
            { "sName": "apply_start_date", "aTargets": [2], "sWidth": "15%", "sClass": "cell_center" },
            { "sName": "tax_rate", "aTargets": [3], "sWidth": "10%", "sClass": "cell_center", "mRender": function (data, type, full) { return buildEditLink(data, full[2]); } },
            { "sName": "remarks", "aTargets": [4], "sWidth": "30%", "sClass": "cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data, 'short-remark'); } },
            { "sName": "ins_date", "aTargets": [5], "sWidth": "15%", "sClass": "cell_center" },
            { "sName": "ins_user", "aTargets": [6], "sWidth": "15%", "sClass": "cell_left", "mRender": function (data, type, full) { return PMS.utility.buildColumShortText(data, 'short-update'); } },
            { "bSortable": false, "bVisible": PMS.utility.checkPermission('#roleEdit'), "aTargets": [7], "sWidth": "5%", "sClass": "cell_center", "mRender": function (data, type, full) { return '<a class="delete-link" aria-valuetext="' + full[2] + '">削除</a>'; } }
        ];

        var dataTable = CreateDataTable('#InfoTable', oSorting, oPaginate, oServerSide, aoColumnDefs);

        function serverParams(aoData) {
            aoData.push(
                { "name": "ApplyStartDate", "value": $("#hdnApplyStartDate").val() },
                { "name": "orderBy", "value": $("#hdnOrderBy").val() },
                { "name": "orderType", "value": $("#hdnOrderType").val() },
                { "name": "TAB_ID", "value": $("#tabId").val() }
            );
            if (typeof (colReorder) !== 'undefined') {
                $("#table_order_columns").val(colReorder.fnOrder());
                colReorder.fnReset();
            }
        }

        function displayComplete() {
            $('div.consumptionTax-list').removeAttr('style');
            $("#onloadDiv").hide();
            $('.pace.pace-active').addClass('pace-inactive').removeClass('pace-active');
            $('#btnSearch').removeAttr('disabled');
            custom_order('#InfoTable', 2, 1);
        }

        function bindData(data) {
            // process status disabled  buttton exportCSV when search data
            if (data.aaData.length == 0) {
                $('#btnExport').addClass('disabled').attr('disabled', 'disabled');
            }
            else {
                $('#btnExport').removeClass('disabled').removeAttr('disabled');
            }
        }

        function buildEditLink(data, applyStartDate) {
            var html = PMS.utility.checkPermission('#roleEdit') ? '<a href="#" class="edit-link" aria-valuetext="' + applyStartDate + '">' + data + '</a>' : data;
            return html;
        }

        function searchByCondition() {
            $('.validation-summary-errors').remove();

            var applyStartDate = $('#Condition_ApplyStartDate').val();
            var errInvalid = PMS.utility.validDate(applyStartDate, 'yyyy/mm/dd', '適用開始日');

            if (errInvalid != null) {
                PMS.utility.showClientError([errInvalid], '.title');
                return false;
            }

            $('#hdnApplyStartDate').val(applyStartDate);

            $('.pace.pace-inactive').removeClass('pace-inactive').addClass('pace-active');
            $("#onloadDiv").show(function () {
                dataTable.fnPageChange('first');
            });
            $('#btnSearch').attr('disabled', 'disabled');
        }

        function submitToEdit(applyStartDate) {
            var $form = $(".frm-edit");

            $form.children('input[name="applyStartDate"]').val(applyStartDate);
            $form.submit();
        }

        $(document).bind('keypress', function (e) {
            var code = e.keyCode || e.which;
            if (code == 13) { //Enter keycode
                searchByCondition();
            }
        });

        $('button#btnSearch').click(function () {
            searchByCondition();
        });

        $('button#btnClear').click(function () {
            $('#Condition_ApplyStartDate').val('');
            $('.date.datepicker-days').datepicker('update', '');
            PMS.utility.ClearRestoreData("PMS07001");
        });

        $(document).off('#InfoTable tr th');
        $(document).on('click', '#InfoTable tr th:not(.sorting_disabled)', function () {
            var sort_type = $(this).hasClass('sorting_asc') ? 'asc' : 'desc';

            $('input[name="hdnOrderBy"]').val($(this).attr("aria-valuetext"));
            $('input[name="hdnOrderType"]').val(sort_type);
        });

        $(document).off('a.edit-link');
        $(document).on('click', 'a.edit-link', function () {
            var applyStartDate = $(this).attr("aria-valuetext");
            var errInvalid = PMS.utility.validDate(applyStartDate, 'yyyy/mm/dd', '適用開始日');

            if (errInvalid != null)
                applyStartDate = null;

            submitToEdit(applyStartDate);
        });

        $('button#btnCreateNew').click(function () {
            submitToEdit(null);
        });

        $(document).off('a.delete-link');
        $(document).on('click', 'a.delete-link', function (e) {
            var $control = $(this);
            var applyStartDate = $control.attr("aria-valuetext");
            var errInvalid = PMS.utility.validDate(applyStartDate, 'yyyy/mm/dd', '適用開始日');

            if (errInvalid != null)
                applyStartDate = null;

            PMS.utility.showSubmitConfirmDialog('消費税を削除します。よろしいですか？', function (action) {
                if (action) {
                    var param = { applyStartDate: applyStartDate };

                    $.ajax({
                        url: '@Url.Action("Delete","PMS07001")',
                        type: 'POST',
                        data: param,
                        dataType: 'json',
                        cache: false,
                        success: function (row) {
                            BootstrapDialog.closeAll();
                            if (row > 0) {
                                window.location.href = '/PMS07001';
                            }
                        },
                        error: function (error) {
                            if (error.status == 419) { //419: Authentication Timeout
                                window.location.href = '/PMS01001/Login/timeout';
                            } else if (error.status == 420) { // out of date license
                                window.location.href = '/ErrorOutOfDate';
                            }
                            else {
                                window.location.href = '/Error';
                            }
                        }
                    });
                }
            });
        });
        PMS.utility.LoadSearchCondition();
    });

    function LoadOldValueOfControls() {
        var applyStartDate = $('#hdnApplyStartDate').val();
        if (applyStartDate.length > 0) {
            $('#Condition_ApplyStartDate').val(applyStartDate);
        }
    }
</script>
