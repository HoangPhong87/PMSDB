@using ProjectManagementSystem.Resources;
@using ProjectManagementSystem.Common;
@model ProjectManagementSystem.ViewModels.PMS06001.PMS06001DetailViewModel

@Scripts.Render("~/bundles/dragOn")

@{
    ViewBag.Title = "プロジェクト稼働実績";
    var currentUser = HttpContext.Current.Session[Constant.SESSION_LOGIN_USER] as LoginUser;
}
<section class="content-header project-detail-header">
    <h1>@ViewBag.Title</h1>
    <div class="search-form">
        <div class="search-condition row">
            <div class="row col-xs-12">
                @Html.LabelFor(m => m.PROJECT_INFO.project_name, Model.PROJECT_INFO.project_name, new { @class = "bold project-name text-overflow", title = Model.PROJECT_INFO.project_name })
                @if (Model.PROJECT_INFO.del_flg != Constant.DEFAULT_VALUE)
                {
                    @Html.Label("（削除）", new { @class = "font-red" })
                }

                @if (((currentUser.PlanFunctionList.Contains(Constant.FunctionID.ProjectPlanRegist) && currentUser.FunctionList.Contains(Constant.FunctionID.ProjectPlanRegist))
                    || (currentUser.PlanFunctionList.Contains(Constant.FunctionID.ProjectPlanReadOnly) && currentUser.FunctionList.Contains(Constant.FunctionID.ProjectPlanReadOnly)))
                    && Model.PROJECT_INFO.count_plan > 0)
                {
                    <label class="link-project-plan">
                        計画書
                    </label>
                }
            </div>
            <div class="row">
                <div class="col-xs-3">
                    @Html.Label("開始日", new { @class = "" })
                    @Html.Label(Model.PROJECT_INFO.start_date.Value.ToString("yyyy/MM/dd"), new { @class = "font-normal" })
                </div>
                <div class="col-xs-3">
                    @Html.Label("納品日", new { @class = "right" })
                    @Html.Label(Model.PROJECT_INFO.end_date.Value.ToString("yyyy/MM/dd"), new { @class = "font-normal" })
                </div>
                <div class="col-xs-3">
                    @Html.Label("検収日", new { @class = "right" })
                    @Html.Label(Model.PROJECT_INFO.acceptance_date != null ? Model.PROJECT_INFO.acceptance_date.Value.ToString("yyyy/MM/dd") : string.Empty, new { @class = "font-normal" })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3">
                    <label>進捗率</label>
                    @Html.LabelFor(m => m.PROJECT_INFO.progress, Model.PROJECT_INFO.progress.ToString() + "%", new { @class = "font-normal" })
                </div>
                <div class="col-xs-9">
                    @Html.LabelFor(m => m.PROJECT_INFO.customer_name, new { @class = "right" })
                    @Html.LabelFor(m => m.PROJECT_INFO.customer_name, string.IsNullOrEmpty(Model.PROJECT_INFO.customer_name) ? string.Empty : Model.PROJECT_INFO.customer_name, new { @class = "font-normal short-text text-overflow customer_name", title = @Model.PROJECT_INFO.customer_name })
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3">
                    <label>受注金額</label>
                    @Html.LabelFor(m => m.PROJECT_INFO.total_sales, Model.SALES + "円", new { @class = "font-normal" })
                </div>
                <div class="col-xs-3">
                    @Html.LabelFor(m => m.PROJECT_INFO.total_payment, new { @class = "right" })
                    @Html.LabelFor(m => m.PROJECT_INFO.total_payment, Model.PAYMENT + "円", new { @class = "font-normal" })
                </div>
                <div class="col-xs-3">
                    <label class="right">予定工数</label>
                    <label class="font-normal total-plan-effort"></label>
                </div>
                <div class="col-xs-3">
                    <label class="right">実績工数</label>
                    <label class="font-normal total-actual-effort"></label>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3">
                    <label>予定粗利</label>
                    <label class="font-normal">@Model.PLAN_PROFIT</label>
                </div>
                <div class="col-xs-3">
                    <label class="right">予定粗利率</label>
                    <label class="font-normal">@Model.PLAN_PROFIT_RATE</label>
                </div>
                <div class="col-xs-3">
                    <label class="right">実績粗利</label>
                    <label class="font-normal">@Model.ACTUAL_PROFIT</label>
                </div>
                <div class="col-xs-3">
                    <label class="right">実績粗利率</label>
                    <label class="font-normal">@Model.ACTUAL_PROFIT_RATE</label>
                </div>
            </div>
        </div>
        <div class="search-condition row phase-list">
        </div>
    </div>
</section>

@RenderPage("~/Views/Shared/ShowHideHeaderContent.cshtml")

<div class="data-list project-detail content clearfix" style="visibility:hidden">
    <div class="col-left">
        <table class="tb-left dataTable" width="100%">
            <thead>
                <tr class="tb-header">
                    <th>ID</th>
                    <th style="width: 40px;">No.</th>
                    <th style="width:100px;">所属</th>
                    <th style="width:100px;">ユーザー名</th>
                    <th class="tb-next" style="width: 110px;">工数(実績 / 予定)</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div class="col-right">
        <table class="tb-right dataTable" width="100%">
            <thead>
                <tr class="tb-header"></tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
@Html.DropDownListFor(m => m.TIME_UNIT, Model.TIME_UNIT_LIST, new { @class = "time-unit", @style = "visibility:hidden" })

<div class="search-date left">
    @Html.HiddenFor(m => m.PROJECT_INFO.project_sys_id)
    <input id="PROJECT_INFO_start_date" type="hidden" value='@Model.PROJECT_INFO.start_date.Value.ToString("yyyy/MM/dd")'>
    <input id="PROJECT_INFO_end_date" type="hidden" value='@Model.PROJECT_INFO.end_date.Value.ToString("yyyy/MM/dd")'>
    <button type="button" id="btnBack" name="btnBack" class="btn light btnNoStyleDisable"><i class="btn-icon btn-back"></i>戻る</button>
    <button type="button" id="btnSwitch" name="btnSwitch" class="btn light">表示切替</button>
    <button type="button" class="btn dark" id="exportCSV"><i class="btn-icon btn-output-csv"></i>CSV出力</button>
</div>

<form id="frmWorkDetail" method="POST" action="@Url.Action("Detail","PMS06002")">
    <input type="hidden" name="user_id" value="-1" />
    <input type="hidden" name="selected_year" value="@Model.selected_year" />
    <input type="hidden" name="selected_month" value="@Model.selected_month" />
</form>

<form id="frmExportCsv" method="POST" action="@Url.Action("ExportCsv", "PMS06001")">
    <input type="hidden" name="startDate" value="@Model.PROJECT_INFO.start_date" />
    <input type="hidden" name="endDate" value="@Model.PROJECT_INFO.end_date" />
    <input type="hidden" name="projectId" value="@Model.PROJECT_INFO.project_sys_id" />
    <input type="hidden" name="userId" />
    <input type="hidden" name="timeUnit" />
    <input type="hidden" name="sortCol" value="0" />
    <input type="hidden" name="sortType" value="asc" />
</form>

<form id="frmProjectPlan" method="POST" action='@Url.Action("Plan", "PMS06001")'>
    <input id="plan_projectId" name="plan_projectId" type="hidden" value="@Model.PROJECT_INFO.project_sys_id">
    <input id="read_only" name="read_only" type="hidden" value="1">
</form>
<input type="hidden" id="hdnMode" value="Effort" />
<script type="text/javascript">
    $(function () {
        $('#btnBack').attr('disabled', 'disabled');
        $('.col-right').dragOn();

        var oSorting = {
            "bSort": true
        };
        var oPaginate = {
            "bPaginate": false,
            "iDisplayLength": parseInt(@App[ConfigurationKeys.LIST_ITEMS_PER_PAGE]),
            "bStateSave": false
        };
        var oServerSide = {
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("Summary", "PMS06001")',
            "fnServerParams": serverParams,
            "fnDrawCallback": displayComplete,
            "fnInitComplete": bindData
        };
        var aoColumnDefs = [
            { "sName": "member_name", "bSortable": false, "bVisible": false, "aTargets": [0], "sWidth": "0%", "sClass": "cell_left" },
            { "sName": "member_name", "bSortable": false, "aTargets": [1], "sWidth": "5%", "sClass": "cell_center" },
            {
                "sName": "group_name", "aTargets": [2], "sWidth": "24%", "sClass": "cell_left"
                , "mRender": function (data, type, full) { return '<div class="short-text text-overflow" title="' + PMS.utility.nvl(data, '') + '">' + PMS.utility.nvl(data, '') + '</div>'; }
            },
            {
                "sName": "member_name", "aTargets": [3], "sWidth": "24%", "sClass": "cell_left"
                , "mRender": function (data, type, full) { return '<a class="text-overflow user-name" title="' + data + '" data-rel="' + full[0] + '">' + data + '</a>'; }
            },
            { "sName": "member_name", "bSortable": false, "aTargets": [4], "sWidth": "24%", "sClass": "cell_center" }
        ];

        var dataTable = CreateDataTable('.tb-left', oSorting, oPaginate, oServerSide, aoColumnDefs);

        function serverParams(aoData) {
            aoData.push(
                { "name": "PROJECT_ID", "value": $("#PROJECT_INFO_project_sys_id").val() },
                { "name": "FROM_DATE", "value": $("#PROJECT_INFO_start_date").val() },
                { "name": "TO_DATE", "value": $("#PROJECT_INFO_end_date").val() },
                { "name": "TIME_UNIT", "value": $("#TIME_UNIT").val() },
                { "name": "MODE", "value": $("#hdnMode").val() }
            );
        }

        function displayComplete() {
            $('div.project-detail').removeAttr('style');
            $('.time-unit').removeAttr('style');

            if ($("#hdnMode").val() == "Effort") {
                $('a.view-detail').each(function () {
                    var data = $(this).text();
                    var actualEffort = parseFloat(data.split("/")[0]);
                    var planEffort = parseFloat(data.split("/")[1]);
                    if (actualEffort > planEffort) {
                        $(this).css('color', '#FF0000');
                        $(this).css('font-weight', 'bold');
                    }
                });
                $('.tb-right td').each(function () {
                    var data = $(this).text();
                    var actualEffort = parseFloat(data.split("/")[0]);
                    var planEffort = parseFloat(data.split("/")[1]);
                    if (actualEffort > planEffort) {
                        $(this).css('color', '#FF0000');
                        $(this).css('font-weight', 'bold');
                    }
                });
            }
            else if ($("#hdnMode").val() == "Profit") {
                $('span.total-profit').each(function () {
                    var data = $(this).text();
                    var cost = parseInt(data.split("/")[0].replace(' 円', '').replace(',',''));
                    var indvSales = parseInt(data.split("/")[1].replace(' 円', '').replace(',', ''));
                    if (cost < indvSales) {
                        $(this).css('color', '#0000FF');
                        $(this).css('font-weight', 'bold');
                    }
                });
                $('.tb-right td').each(function () {
                    var data = $(this).text();
                    var cost = parseInt(data.split("/")[0].replace(' 円', '').replace(',', ''));
                    var indvSales = parseInt(data.split("/")[1].replace(' 円', '').replace(',', ''));
                    if (cost < indvSales) {
                        $(this).css('color', '#0000FF');
                        $(this).css('font-weight', 'bold');
                    }
                });
            }
            $("#onloadDiv").hide();
            $('.pace.pace-active').addClass('pace-inactive').removeClass('pace-active');
            $('#btnBack').removeAttr('disabled');
        }

        function bindData(data) {
            var timeUnit = '人日';

            if ($("#TIME_UNIT").val() == '@Constant.TimeUnit.HOUR') {
                timeUnit = '時間';
            }

            if ($("#TIME_UNIT").val() == '@Constant.TimeUnit.MONTH') {
                timeUnit = '人月';
            }

            $('.total-plan-effort').text(data.projectPlanEffort.toFixed(2) + timeUnit);
            $('.total-actual-effort').text(data.projectActualEffort.toFixed(2) + timeUnit);

            var colums = PMS.utility.getMonthCols($('#PROJECT_INFO_start_date').val(), $('#PROJECT_INFO_end_date').val());
            var htmlRight = '';

            setColumArr(colums);

            if (data.rightList.length > 0) {
                for (var i = 0; i < data.rightList.length; i++) {
                    var bgRow = i % 2 == 0 ? 'odd' : 'even';

                    htmlRight += '<tr class="' + bgRow + '">';

                    for (var j = 0; j < colums.length; j++) {
                        htmlRight += '<td class="center">' + data.rightList[i][j] + '</td>';
                    }

                    htmlRight += '</tr>';
                }
            }

            $('.tb-right tbody tr').remove();
            $('.tb-right tbody').append(htmlRight);

            var htmlPhaseList = '<div class="row col-xs-12"> <label class="bold">フェーズ</label> </div>';

            if (data.phaseList.length > 0) {
                for (var i = 0; i < data.phaseList.length; i++) {
                    var align = i % 4 == 0 ? "left" : "right";

                    htmlPhaseList += ' <div class="col-xs-3 margin-bottom">'
                         + ' <label class="left phase-name text-overflow ' + align + '" title="' + PMS.utility.htmlEncodeByReplace(data.phaseList[i].phase_name) + '">' + PMS.utility.htmlEncode(data.phaseList[i].phase_name) + '</label>'
                         + ' <label class="font-normal">' + data.phaseList[i].total_actual_work.toFixed(2) + timeUnit
                    if (data.phaseList[i].estimate_target_flg === "1") {
                        htmlPhaseList += ' / ' + data.phaseList[i].estimate_man_days.toFixed(2) + timeUnit + '</label></div>';
                    }
                    else {
                        htmlPhaseList += '</label></div>';
                    }
                }
            }

            $('.phase-list').empty().append(htmlPhaseList);
        }

        function setColumArr(colums) {
            var html = '';

            for (var i = 0; i < colums.length; i++) {
                html += '<th class="th-month">' + colums[i] + '</th>';
            }

            $('th.th-month').remove();
            $('.tb-right thead tr.tb-header').append(html);
        }

        $(document).off('#TIME_UNIT');
        $(document).on('change', '#TIME_UNIT', function () {
            $("#onloadDiv").show();
            dataTable.fnPageChange('first');
        });

        $("#btnSwitch").click(function () {
            if ($("#hdnMode").val() == "Effort") {
                $("#hdnMode").val("Profit");
                $("#onloadDiv").show();
                $('.pace.pace-inactive').addClass('pace-active').removeClass('pace-inactive');
                dataTable.fnPageChange('first');
                $('.tb-next').text("原価/売上金額");
            }
            else if ($("#hdnMode").val() == "Profit") {
                $("#hdnMode").val("Effort");
                $("#onloadDiv").show();
                $('.pace.pace-inactive').addClass('pace-active').removeClass('pace-inactive');
                dataTable.fnPageChange('first');
                $('.tb-next').text("工数(実績 / 予定)");
            }
        });
    });

    $(document).off('.tb-left thead th');
    $(document).on('click', '.tb-left thead th:not(.sorting_disabled)', function () {
        var sortCol = $(this).index() + 1;
        var sortType = 'asc';
        if ($(this).hasClass('sorting_desc'))
            sortType = 'desc';

        var $form = $('#frmExportCsv');
        $form.children('[name="sortCol"]').val(sortCol);
        $form.children('[name="sortType"]').val(sortType);
    });

    $('button#exportCSV').click(function () {
        var $form = $('#frmExportCsv');
        $form.children('[name="timeUnit"]').val($('#TIME_UNIT').val());
        $form.attr('action', '@Url.Action("ExportCsv", "PMS06001")');
        $form.submit();
    });

    $('button#btnBack').click(function () {

        var isFrom = '@HttpContext.Current.Session["PMS06001_ProjectRecord_From"]';
        if (isFrom == 'ProjectList') {
            window.location.href = '/PMS06001';
        }
        if (isFrom == 'PersonalRecord') {
            var $form = $("#frmWorkDetail");
            $form.children("input[name='user_id']").val('-1');
            $form.children("input[name='selected_year']").val('@Model.selected_year');
            $form.children("input[name='selected_month']").val('@Model.selected_month');

            $form.submit();
        }
        if (isFrom == 'AssignmentByProject') {
            window.location.href = '/PMS06003/AssignmentByProject';
        }

    });

    $(document).off('a.user-name');
    $(document).on('click', 'a.user-name', function () {
        var $form = $("#frmWorkDetail");
        var timeArr = $('#PROJECT_INFO_start_date').val().split('/');

        $form.children("input[name='user_id']").val($(this).attr('data-rel'));
        $form.children("input[name='selected_year']").val(timeArr[0]);
        $form.children("input[name='selected_month']").val(timeArr[1]);

        $form.submit();
    });

    $(document).off('.link-project-plan');
    $(document).on('click', '.link-project-plan', function () {
        if ('@(currentUser.PlanFunctionList.Contains(Constant.FunctionID.ProjectPlanRegist)
            && currentUser.FunctionList.Contains(Constant.FunctionID.ProjectPlanRegist))' == 'True') {
            $('#read_only').val('');
        } else {
            $('#read_only').val('1');
        }

        $("#frmProjectPlan").submit();
    });

    $(document).off('.view-detail');
    $(document).on('click', '.view-detail', function () {
        var $form = $('#frmExportCsv');
        $form.children('[name="timeUnit"]').val($('#TIME_UNIT').val());
        $form.children('[name="userId"]').val($(this).attr('alt'));
        $form.attr('action', '@Url.Action("ActualWork", "PMS06001")');
        $form.submit();
    });
</script>
